
//------------------------------------------------------------------------------
// <auto-generated timestamp="2016-12-15T15:01:00.6848819Z">
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.SqlServer.Types;
using XAdo.SqlObjects.DbSchema;
using XAdo.SqlObjects.DbSchema.Attributes;

namespace DbSchema
{
   public static partial class AW
   {
      public abstract partial class DbBaseTable : IDbTable {}
      
      [Table("AWBuildVersion", Schema="dbo")]
      public partial class AWBuildVersion : DbBaseTable
      {
         [Key, DbUnique, Required]
         public virtual Byte? SystemInformationID {get; set;}
         [Required, MaxLength(25), Column("Database Version")]
         public virtual String Database_Version {get; set;}
         [Required]
         public virtual DateTime? VersionDate {get; set;}
         [Required]
         public virtual DateTime? ModifiedDate {get; set;}
      }
      [Table("DatabaseLog", Schema="dbo")]
      public partial class DatabaseLog : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? DatabaseLogID {get; set;}
         [Required]
         public virtual DateTime? PostTime {get; set;}
         [Required, MaxLength(128)]
         public virtual String DatabaseUser {get; set;}
         [Required, MaxLength(128)]
         public virtual String Event {get; set;}
         [MaxLength(128)]
         public virtual String Schema {get; set;}
         [MaxLength(128)]
         public virtual String Object {get; set;}
         [Required]
         public virtual String TSQL {get; set;}
         [Required]
         public virtual String XmlEvent {get; set;}
      }
      [Table("ErrorLog", Schema="dbo")]
      public partial class ErrorLog : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? ErrorLogID {get; set;}
         [Required]
         public virtual DateTime? ErrorTime {get; set;}
         [Required, MaxLength(128)]
         public virtual String UserName {get; set;}
         [Required]
         public virtual Int32? ErrorNumber {get; set;}
         public virtual Int32? ErrorSeverity {get; set;}
         public virtual Int32? ErrorState {get; set;}
         [MaxLength(126)]
         public virtual String ErrorProcedure {get; set;}
         public virtual Int32? ErrorLine {get; set;}
         [Required, MaxLength(4000)]
         public virtual String ErrorMessage {get; set;}
      }
      [Table("FamilyPerson", Schema="dbo")]
      [ReferencedBy(new []{typeof(AW.FamilyPerson)})]
      public partial class FamilyPerson : DbBaseTable
      {
         [Key, DbUnique, Required]
         public virtual Int32? Id {get; set;}
         [Required, MaxLength(30)]
         public virtual String Name {get; set;}
         [References( Type=typeof(AW.FamilyPerson), MemberName="Id", ColumnName="Id", FKeyName="FK_FamilyPerson_FamilyPerson_Father")]
         public virtual Int32? FatherId {get; set;}
         [References( Type=typeof(AW.FamilyPerson), MemberName="Id", ColumnName="Id", FKeyName="FK_FamilyPerson_FamilyPerson_Mother")]
         public virtual Int32? MotherId {get; set;}
      }
      [Table("sysdiagrams", Schema="dbo")]
      public partial class sysdiagrams : DbBaseTable
      {
         [Required, MaxLength(128)]
         public virtual String name {get; set;}
         [Required]
         public virtual Int32? principal_id {get; set;}
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? diagram_id {get; set;}
         public virtual Int32? version {get; set;}
         public virtual Byte[] definition {get; set;}
      }
      public static partial class HumanResources
      {
         [Table("Department", Schema="HumanResources")]
         [ReferencedBy(new []{typeof(AW.HumanResources.EmployeeDepartmentHistory)})]
         public partial class Department : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int16? DepartmentID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String GroupName {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Employee", Schema="HumanResources")]
         [ReferencedBy(new []{typeof(AW.HumanResources.EmployeeDepartmentHistory), typeof(AW.HumanResources.EmployeePayHistory), typeof(AW.HumanResources.JobCandidate), typeof(AW.Production.Document), typeof(AW.Purchasing.PurchaseOrderHeader), typeof(AW.Sales.SalesPerson)})]
         public partial class Employee : DbBaseTable
         {
            [Key, DbUnique, Required]
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Employee_Person_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(15)]
            public virtual String NationalIDNumber {get; set;}
            [Required, MaxLength(256)]
            public virtual String LoginID {get; set;}
            public virtual SqlHierarchyId? OrganizationNode {get; set;}
            public virtual Int16? OrganizationLevel {get; set;}
            [Required, MaxLength(50)]
            public virtual String JobTitle {get; set;}
            [Required]
            public virtual DateTime? BirthDate {get; set;}
            [Required, MaxLength(1)]
            public virtual String MaritalStatus {get; set;}
            [Required, MaxLength(1)]
            public virtual String Gender {get; set;}
            [Required]
            public virtual DateTime? HireDate {get; set;}
            [Required]
            public virtual Boolean? SalariedFlag {get; set;}
            [Required]
            public virtual Int16? VacationHours {get; set;}
            [Required]
            public virtual Int16? SickLeaveHours {get; set;}
            [Required]
            public virtual Boolean? CurrentFlag {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("EmployeeDepartmentHistory", Schema="HumanResources")]
         public partial class EmployeeDepartmentHistory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.HumanResources.Employee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.HumanResources.Department), MemberName="DepartmentID", ColumnName="DepartmentID", FKeyName="FK_EmployeeDepartmentHistory_Department_DepartmentID")]
            public virtual Int16? DepartmentID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.HumanResources.Shift), MemberName="ShiftID", ColumnName="ShiftID", FKeyName="FK_EmployeeDepartmentHistory_Shift_ShiftID")]
            public virtual Byte? ShiftID {get; set;}
            [Key, Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("EmployeePayHistory", Schema="HumanResources")]
         public partial class EmployeePayHistory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.HumanResources.Employee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_EmployeePayHistory_Employee_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            public virtual DateTime? RateChangeDate {get; set;}
            [Required]
            public virtual Decimal? Rate {get; set;}
            [Required]
            public virtual Byte? PayFrequency {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("JobCandidate", Schema="HumanResources")]
         public partial class JobCandidate : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? JobCandidateID {get; set;}
            [References( Type=typeof(AW.HumanResources.Employee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_JobCandidate_Employee_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            public virtual String Resume {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Shift", Schema="HumanResources")]
         [ReferencedBy(new []{typeof(AW.HumanResources.EmployeeDepartmentHistory)})]
         public partial class Shift : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Byte? ShiftID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual TimeSpan? StartTime {get; set;}
            [Required]
            public virtual TimeSpan? EndTime {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vEmployee", Schema="HumanResources"), DbView]
         public partial class vEmployee : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [Required, MaxLength(50)]
            public virtual String JobTitle {get; set;}
            [MaxLength(25)]
            public virtual String PhoneNumber {get; set;}
            [MaxLength(50)]
            public virtual String PhoneNumberType {get; set;}
            [MaxLength(50)]
            public virtual String EmailAddress {get; set;}
            [Required]
            public virtual Int32? EmailPromotion {get; set;}
            [Required, MaxLength(60)]
            public virtual String AddressLine1 {get; set;}
            [MaxLength(60)]
            public virtual String AddressLine2 {get; set;}
            [Required, MaxLength(30)]
            public virtual String City {get; set;}
            [Required, MaxLength(50)]
            public virtual String StateProvinceName {get; set;}
            [Required, MaxLength(15)]
            public virtual String PostalCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String CountryRegionName {get; set;}
            public virtual String AdditionalContactInfo {get; set;}
         }
         [Table("vEmployeeDepartment", Schema="HumanResources"), DbView]
         public partial class vEmployeeDepartment : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [Required, MaxLength(50)]
            public virtual String JobTitle {get; set;}
            [Required, MaxLength(50)]
            public virtual String Department {get; set;}
            [Required, MaxLength(50)]
            public virtual String GroupName {get; set;}
            [Required]
            public virtual DateTime? StartDate {get; set;}
         }
         [Table("vEmployeeDepartmentHistory", Schema="HumanResources"), DbView]
         public partial class vEmployeeDepartmentHistory : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [Required, MaxLength(50)]
            public virtual String Shift {get; set;}
            [Required, MaxLength(50)]
            public virtual String Department {get; set;}
            [Required, MaxLength(50)]
            public virtual String GroupName {get; set;}
            [Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
         }
         [Table("vJobCandidate", Schema="HumanResources"), DbView]
         public partial class vJobCandidate : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? JobCandidateID {get; set;}
            public virtual Int32? BusinessEntityID {get; set;}
            [MaxLength(30), Column("Name.Prefix")]
            public virtual String Name_Prefix {get; set;}
            [MaxLength(30), Column("Name.First")]
            public virtual String Name_First {get; set;}
            [MaxLength(30), Column("Name.Middle")]
            public virtual String Name_Middle {get; set;}
            [MaxLength(30), Column("Name.Last")]
            public virtual String Name_Last {get; set;}
            [MaxLength(30), Column("Name.Suffix")]
            public virtual String Name_Suffix {get; set;}
            public virtual String Skills {get; set;}
            [MaxLength(30), Column("Addr.Type")]
            public virtual String Addr_Type {get; set;}
            [MaxLength(100), Column("Addr.Loc.CountryRegion")]
            public virtual String Addr_Loc_CountryRegion {get; set;}
            [MaxLength(100), Column("Addr.Loc.State")]
            public virtual String Addr_Loc_State {get; set;}
            [MaxLength(100), Column("Addr.Loc.City")]
            public virtual String Addr_Loc_City {get; set;}
            [MaxLength(20), Column("Addr.PostalCode")]
            public virtual String Addr_PostalCode {get; set;}
            public virtual String EMail {get; set;}
            public virtual String WebSite {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vJobCandidateEducation", Schema="HumanResources"), DbView]
         public partial class vJobCandidateEducation : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? JobCandidateID {get; set;}
            [Column("Edu.Level")]
            public virtual String Edu_Level {get; set;}
            [Column("Edu.StartDate")]
            public virtual DateTime? Edu_StartDate {get; set;}
            [Column("Edu.EndDate")]
            public virtual DateTime? Edu_EndDate {get; set;}
            [MaxLength(50), Column("Edu.Degree")]
            public virtual String Edu_Degree {get; set;}
            [MaxLength(50), Column("Edu.Major")]
            public virtual String Edu_Major {get; set;}
            [MaxLength(50), Column("Edu.Minor")]
            public virtual String Edu_Minor {get; set;}
            [MaxLength(5), Column("Edu.GPA")]
            public virtual String Edu_GPA {get; set;}
            [MaxLength(5), Column("Edu.GPAScale")]
            public virtual String Edu_GPAScale {get; set;}
            [MaxLength(100), Column("Edu.School")]
            public virtual String Edu_School {get; set;}
            [MaxLength(100), Column("Edu.Loc.CountryRegion")]
            public virtual String Edu_Loc_CountryRegion {get; set;}
            [MaxLength(100), Column("Edu.Loc.State")]
            public virtual String Edu_Loc_State {get; set;}
            [MaxLength(100), Column("Edu.Loc.City")]
            public virtual String Edu_Loc_City {get; set;}
         }
         [Table("vJobCandidateEmployment", Schema="HumanResources"), DbView]
         public partial class vJobCandidateEmployment : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? JobCandidateID {get; set;}
            [Column("Emp.StartDate")]
            public virtual DateTime? Emp_StartDate {get; set;}
            [Column("Emp.EndDate")]
            public virtual DateTime? Emp_EndDate {get; set;}
            [MaxLength(100), Column("Emp.OrgName")]
            public virtual String Emp_OrgName {get; set;}
            [MaxLength(100), Column("Emp.JobTitle")]
            public virtual String Emp_JobTitle {get; set;}
            [Column("Emp.Responsibility")]
            public virtual String Emp_Responsibility {get; set;}
            [Column("Emp.FunctionCategory")]
            public virtual String Emp_FunctionCategory {get; set;}
            [Column("Emp.IndustryCategory")]
            public virtual String Emp_IndustryCategory {get; set;}
            [Column("Emp.Loc.CountryRegion")]
            public virtual String Emp_Loc_CountryRegion {get; set;}
            [Column("Emp.Loc.State")]
            public virtual String Emp_Loc_State {get; set;}
            [Column("Emp.Loc.City")]
            public virtual String Emp_Loc_City {get; set;}
         }
      }
      public static partial class Person
      {
         [Table("Address", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.BusinessEntityAddress), typeof(AW.Sales.SalesOrderHeader)})]
         public partial class Address : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? AddressID {get; set;}
            [Required, MaxLength(60)]
            public virtual String AddressLine1 {get; set;}
            [MaxLength(60)]
            public virtual String AddressLine2 {get; set;}
            [Required, MaxLength(30)]
            public virtual String City {get; set;}
            [Required]
            [References( Type=typeof(AW.Person.StateProvince), MemberName="StateProvinceID", ColumnName="StateProvinceID", FKeyName="FK_Address_StateProvince_StateProvinceID")]
            public virtual Int32? StateProvinceID {get; set;}
            [Required, MaxLength(15)]
            public virtual String PostalCode {get; set;}
            public virtual SqlGeography SpatialLocation {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("AddressType", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.BusinessEntityAddress)})]
         public partial class AddressType : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? AddressTypeID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("BusinessEntity", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.BusinessEntityAddress), typeof(AW.Person.BusinessEntityContact), typeof(AW.Person.Person_), typeof(AW.Purchasing.Vendor), typeof(AW.Sales.Store)})]
         public partial class BusinessEntity : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("BusinessEntityAddress", Schema="Person")]
         public partial class BusinessEntityAddress : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Person.BusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Person.Address), MemberName="AddressID", ColumnName="AddressID", FKeyName="FK_BusinessEntityAddress_Address_AddressID")]
            public virtual Int32? AddressID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Person.AddressType), MemberName="AddressTypeID", ColumnName="AddressTypeID", FKeyName="FK_BusinessEntityAddress_AddressType_AddressTypeID")]
            public virtual Int32? AddressTypeID {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("BusinessEntityContact", Schema="Person")]
         public partial class BusinessEntityContact : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Person.BusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_BusinessEntityContact_AW.Person.Person_ID")]
            public virtual Int32? PersonID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Person.ContactType), MemberName="ContactTypeID", ColumnName="ContactTypeID", FKeyName="FK_BusinessEntityContact_ContactType_ContactTypeID")]
            public virtual Int32? ContactTypeID {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ContactType", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.BusinessEntityContact)})]
         public partial class ContactType : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ContactTypeID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("CountryRegion", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.StateProvince), typeof(AW.Sales.CountryRegionCurrency), typeof(AW.Sales.SalesTerritory)})]
         public partial class CountryRegion : DbBaseTable
         {
            [Key, DbUnique, Required, MaxLength(3)]
            public virtual String CountryRegionCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("EmailAddress", Schema="Person")]
         public partial class EmailAddress : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_EmailAddress_Person_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, DbAutoIncrement, Required]
            public virtual Int32? EmailAddressID {get; set;}
            [MaxLength(50), Column("EmailAddress")]
            public virtual String EmailAddress_ {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Password", Schema="Person")]
         public partial class Password : DbBaseTable
         {
            [Key, DbUnique, Required]
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Password_Person_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(128)]
            public virtual String PasswordHash {get; set;}
            [Required, MaxLength(10)]
            public virtual String PasswordSalt {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Person", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.HumanResources.Employee), typeof(AW.Person.BusinessEntityContact), typeof(AW.Person.EmailAddress), typeof(AW.Person.Password), typeof(AW.Person.PersonPhone), typeof(AW.Sales.Customer), typeof(AW.Sales.PersonCreditCard)})]
         public partial class Person_ : DbBaseTable
         {
            [Key, DbUnique, Required]
            [References( Type=typeof(AW.Person.BusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Person_BusinessEntity_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(2)]
            public virtual String PersonType {get; set;}
            [Required]
            public virtual Boolean? NameStyle {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [Required]
            public virtual Int32? EmailPromotion {get; set;}
            public virtual String AdditionalContactInfo {get; set;}
            public virtual String Demographics {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("PersonPhone", Schema="Person")]
         public partial class PersonPhone : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PersonPhone_Person_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required, MaxLength(25)]
            public virtual String PhoneNumber {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Person.PhoneNumberType), MemberName="PhoneNumberTypeID", ColumnName="PhoneNumberTypeID", FKeyName="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID")]
            public virtual Int32? PhoneNumberTypeID {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("PhoneNumberType", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.PersonPhone)})]
         public partial class PhoneNumberType : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? PhoneNumberTypeID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("StateProvince", Schema="Person")]
         [ReferencedBy(new []{typeof(AW.Person.Address), typeof(AW.Sales.SalesTaxRate)})]
         public partial class StateProvince : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? StateProvinceID {get; set;}
            [Required, MaxLength(3)]
            public virtual String StateProvinceCode {get; set;}
            [Required, MaxLength(3)]
            [References( Type=typeof(AW.Person.CountryRegion), MemberName="CountryRegionCode", ColumnName="CountryRegionCode", FKeyName="FK_StateProvince_CountryRegion_CountryRegionCode")]
            public virtual String CountryRegionCode {get; set;}
            [Required]
            public virtual Boolean? IsOnlyStateProvinceFlag {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            [References( Type=typeof(AW.Sales.SalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_StateProvince_SalesTerritory_TerritoryID")]
            public virtual Int32? TerritoryID {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vAdditionalContactInfo", Schema="Person"), DbView]
         public partial class vAdditionalContactInfo : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(50)]
            public virtual String TelephoneNumber {get; set;}
            public virtual String TelephoneSpecialInstructions {get; set;}
            [MaxLength(50)]
            public virtual String Street {get; set;}
            [MaxLength(50)]
            public virtual String City {get; set;}
            [MaxLength(50)]
            public virtual String StateProvince {get; set;}
            [MaxLength(50)]
            public virtual String PostalCode {get; set;}
            [MaxLength(50)]
            public virtual String CountryRegion {get; set;}
            public virtual String HomeAddressSpecialInstructions {get; set;}
            [MaxLength(128)]
            public virtual String EMailAddress {get; set;}
            public virtual String EMailSpecialInstructions {get; set;}
            [MaxLength(50)]
            public virtual String EMailTelephoneNumber {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vStateProvinceCountryRegion", Schema="Person"), DbView]
         public partial class vStateProvinceCountryRegion : DbBaseTable
         {
            [Key, Required]
            public virtual Int32? StateProvinceID {get; set;}
            [Required, MaxLength(3)]
            public virtual String StateProvinceCode {get; set;}
            [Required]
            public virtual Boolean? IsOnlyStateProvinceFlag {get; set;}
            [Required, MaxLength(50)]
            public virtual String StateProvinceName {get; set;}
            [Required]
            public virtual Int32? TerritoryID {get; set;}
            [Key, Required, MaxLength(3)]
            public virtual String CountryRegionCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String CountryRegionName {get; set;}
         }
      }
      public static partial class Production
      {
         [Table("BillOfMaterials", Schema="Production")]
         public partial class BillOfMaterials : DbBaseTable
         {
            [Key, DbAutoIncrement, Required]
            public virtual Int32? BillOfMaterialsID {get; set;}
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_BillOfMaterials_Product_ProductAssemblyID")]
            public virtual Int32? ProductAssemblyID {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_BillOfMaterials_Product_ComponentID")]
            public virtual Int32? ComponentID {get; set;}
            [Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
            [Required, MaxLength(3)]
            [References( Type=typeof(AW.Production.UnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode")]
            public virtual String UnitMeasureCode {get; set;}
            [Required]
            public virtual Int16? BOMLevel {get; set;}
            [Required]
            public virtual Decimal? PerAssemblyQty {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Culture", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductModelProductDescriptionCulture)})]
         public partial class Culture : DbBaseTable
         {
            [Key, DbUnique, Required, MaxLength(6)]
            public virtual String CultureID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Document", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductDocument)})]
         public partial class Document : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual SqlHierarchyId? DocumentNode {get; set;}
            public virtual Int16? DocumentLevel {get; set;}
            [Required, MaxLength(50)]
            public virtual String Title {get; set;}
            [Required]
            [References( Type=typeof(AW.HumanResources.Employee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Document_Employee_Owner")]
            public virtual Int32? Owner {get; set;}
            [Required]
            public virtual Boolean? FolderFlag {get; set;}
            [Required, MaxLength(400)]
            public virtual String FileName {get; set;}
            [Required, MaxLength(8)]
            public virtual String FileExtension {get; set;}
            [Required, MaxLength(5)]
            public virtual String Revision {get; set;}
            [Required]
            public virtual Int32? ChangeNumber {get; set;}
            [Required]
            public virtual Byte? Status {get; set;}
            public virtual String DocumentSummary {get; set;}
            [Column("Document")]
            public virtual Byte[] Document_ {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Illustration", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductModelIllustration)})]
         public partial class Illustration : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? IllustrationID {get; set;}
            public virtual String Diagram {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Location", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductInventory), typeof(AW.Production.WorkOrderRouting)})]
         public partial class Location : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int16? LocationID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Decimal? CostRate {get; set;}
            [Required]
            public virtual Decimal? Availability {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Product", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.BillOfMaterials), typeof(AW.Production.ProductCostHistory), typeof(AW.Production.ProductDocument), typeof(AW.Production.ProductInventory), typeof(AW.Production.ProductListPriceHistory), typeof(AW.Production.ProductProductPhoto), typeof(AW.Production.ProductReview), typeof(AW.Production.TransactionHistory), typeof(AW.Production.WorkOrder), typeof(AW.Purchasing.ProductVendor), typeof(AW.Purchasing.PurchaseOrderDetail), typeof(AW.Sales.ShoppingCartItem), typeof(AW.Sales.SpecialOfferProduct)})]
         public partial class Product : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(25)]
            public virtual String ProductNumber {get; set;}
            [Required]
            public virtual Boolean? MakeFlag {get; set;}
            [Required]
            public virtual Boolean? FinishedGoodsFlag {get; set;}
            [MaxLength(15)]
            public virtual String Color {get; set;}
            [Required]
            public virtual Int16? SafetyStockLevel {get; set;}
            [Required]
            public virtual Int16? ReorderPoint {get; set;}
            [Required]
            public virtual Decimal? StandardCost {get; set;}
            [Required]
            public virtual Decimal? ListPrice {get; set;}
            [MaxLength(5)]
            public virtual String Size {get; set;}
            [MaxLength(3)]
            [References( Type=typeof(AW.Production.UnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_Product_UnitMeasure_SizeUnitMeasureCode")]
            public virtual String SizeUnitMeasureCode {get; set;}
            [MaxLength(3)]
            [References( Type=typeof(AW.Production.UnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_Product_UnitMeasure_WeightUnitMeasureCode")]
            public virtual String WeightUnitMeasureCode {get; set;}
            public virtual Decimal? Weight {get; set;}
            [Required]
            public virtual Int32? DaysToManufacture {get; set;}
            [MaxLength(2)]
            public virtual String ProductLine {get; set;}
            [MaxLength(2)]
            public virtual String Class {get; set;}
            [MaxLength(2)]
            public virtual String Style {get; set;}
            [References( Type=typeof(AW.Production.ProductSubcategory), MemberName="ProductSubcategoryID", ColumnName="ProductSubcategoryID", FKeyName="FK_Product_ProductSubcategory_ProductSubcategoryID")]
            public virtual Int32? ProductSubcategoryID {get; set;}
            [References( Type=typeof(AW.Production.ProductModel), MemberName="ProductModelID", ColumnName="ProductModelID", FKeyName="FK_Product_ProductModel_ProductModelID")]
            public virtual Int32? ProductModelID {get; set;}
            [Required]
            public virtual DateTime? SellStartDate {get; set;}
            public virtual DateTime? SellEndDate {get; set;}
            public virtual DateTime? DiscontinuedDate {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductCategory", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductSubcategory)})]
         public partial class ProductCategory : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductCategoryID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductCostHistory", Schema="Production")]
         public partial class ProductCostHistory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductCostHistory_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
            [Required]
            public virtual Decimal? StandardCost {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductDescription", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductModelProductDescriptionCulture)})]
         public partial class ProductDescription : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductDescriptionID {get; set;}
            [Required, MaxLength(400)]
            public virtual String Description {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductDocument", Schema="Production")]
         public partial class ProductDocument : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductDocument_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Production.Document), MemberName="DocumentNode", ColumnName="DocumentNode", FKeyName="FK_ProductDocument_Document_DocumentNode")]
            public virtual SqlHierarchyId? DocumentNode {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductInventory", Schema="Production")]
         public partial class ProductInventory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductInventory_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Production.Location), MemberName="LocationID", ColumnName="LocationID", FKeyName="FK_ProductInventory_Location_LocationID")]
            public virtual Int16? LocationID {get; set;}
            [Required, MaxLength(10)]
            public virtual String Shelf {get; set;}
            [Required]
            public virtual Byte? Bin {get; set;}
            [Required]
            public virtual Int16? Quantity {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductListPriceHistory", Schema="Production")]
         public partial class ProductListPriceHistory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductListPriceHistory_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
            [Required]
            public virtual Decimal? ListPrice {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductModel", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.Product), typeof(AW.Production.ProductModelIllustration), typeof(AW.Production.ProductModelProductDescriptionCulture)})]
         public partial class ProductModel : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductModelID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            public virtual String CatalogDescription {get; set;}
            public virtual String Instructions {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductModelIllustration", Schema="Production")]
         public partial class ProductModelIllustration : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.ProductModel), MemberName="ProductModelID", ColumnName="ProductModelID", FKeyName="FK_ProductModelIllustration_ProductModel_ProductModelID")]
            public virtual Int32? ProductModelID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Production.Illustration), MemberName="IllustrationID", ColumnName="IllustrationID", FKeyName="FK_ProductModelIllustration_Illustration_IllustrationID")]
            public virtual Int32? IllustrationID {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductModelProductDescriptionCulture", Schema="Production")]
         public partial class ProductModelProductDescriptionCulture : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.ProductModel), MemberName="ProductModelID", ColumnName="ProductModelID", FKeyName="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID")]
            public virtual Int32? ProductModelID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Production.ProductDescription), MemberName="ProductDescriptionID", ColumnName="ProductDescriptionID", FKeyName="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID")]
            public virtual Int32? ProductDescriptionID {get; set;}
            [Key, Required, MaxLength(6)]
            [References( Type=typeof(AW.Production.Culture), MemberName="CultureID", ColumnName="CultureID", FKeyName="FK_ProductModelProductDescriptionCulture_Culture_CultureID")]
            public virtual String CultureID {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductPhoto", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.ProductProductPhoto)})]
         public partial class ProductPhoto : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductPhotoID {get; set;}
            public virtual Byte[] ThumbNailPhoto {get; set;}
            [MaxLength(50)]
            public virtual String ThumbnailPhotoFileName {get; set;}
            public virtual Byte[] LargePhoto {get; set;}
            [MaxLength(50)]
            public virtual String LargePhotoFileName {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductProductPhoto", Schema="Production")]
         public partial class ProductProductPhoto : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductProductPhoto_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Production.ProductPhoto), MemberName="ProductPhotoID", ColumnName="ProductPhotoID", FKeyName="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID")]
            public virtual Int32? ProductPhotoID {get; set;}
            [Required]
            public virtual Boolean? Primary {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductReview", Schema="Production")]
         public partial class ProductReview : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductReviewID {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductReview_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required, MaxLength(50)]
            public virtual String ReviewerName {get; set;}
            [Required]
            public virtual DateTime? ReviewDate {get; set;}
            [Required, MaxLength(50)]
            public virtual String EmailAddress {get; set;}
            [Required]
            public virtual Int32? Rating {get; set;}
            [MaxLength(3850)]
            public virtual String Comments {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ProductSubcategory", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.Product)})]
         public partial class ProductSubcategory : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductSubcategoryID {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.ProductCategory), MemberName="ProductCategoryID", ColumnName="ProductCategoryID", FKeyName="FK_ProductSubcategory_ProductCategory_ProductCategoryID")]
            public virtual Int32? ProductCategoryID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ScrapReason", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.WorkOrder)})]
         public partial class ScrapReason : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int16? ScrapReasonID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("TransactionHistory", Schema="Production")]
         public partial class TransactionHistory : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? TransactionID {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_TransactionHistory_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required]
            public virtual Int32? ReferenceOrderID {get; set;}
            [Required]
            public virtual Int32? ReferenceOrderLineID {get; set;}
            [Required]
            public virtual DateTime? TransactionDate {get; set;}
            [Required, MaxLength(1)]
            public virtual String TransactionType {get; set;}
            [Required]
            public virtual Int32? Quantity {get; set;}
            [Required]
            public virtual Decimal? ActualCost {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("TransactionHistoryArchive", Schema="Production")]
         public partial class TransactionHistoryArchive : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Int32? TransactionID {get; set;}
            [Required]
            public virtual Int32? ProductID {get; set;}
            [Required]
            public virtual Int32? ReferenceOrderID {get; set;}
            [Required]
            public virtual Int32? ReferenceOrderLineID {get; set;}
            [Required]
            public virtual DateTime? TransactionDate {get; set;}
            [Required, MaxLength(1)]
            public virtual String TransactionType {get; set;}
            [Required]
            public virtual Int32? Quantity {get; set;}
            [Required]
            public virtual Decimal? ActualCost {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("UnitMeasure", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.BillOfMaterials), typeof(AW.Production.Product), typeof(AW.Purchasing.ProductVendor)})]
         public partial class UnitMeasure : DbBaseTable
         {
            [Key, DbUnique, Required, MaxLength(3)]
            public virtual String UnitMeasureCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vProductAndDescription", Schema="Production"), DbView]
         public partial class vProductAndDescription : DbBaseTable
         {
            [Required]
            public virtual Int32? ProductID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String ProductModel {get; set;}
            [Required, MaxLength(6)]
            public virtual String CultureID {get; set;}
            [Required, MaxLength(400)]
            public virtual String Description {get; set;}
         }
         [Table("vProductModelCatalogDescription", Schema="Production"), DbView]
         public partial class vProductModelCatalogDescription : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductModelID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            public virtual String Summary {get; set;}
            public virtual String Manufacturer {get; set;}
            [MaxLength(30)]
            public virtual String Copyright {get; set;}
            [MaxLength(256)]
            public virtual String ProductURL {get; set;}
            [MaxLength(256)]
            public virtual String WarrantyPeriod {get; set;}
            [MaxLength(256)]
            public virtual String WarrantyDescription {get; set;}
            [MaxLength(256)]
            public virtual String NoOfYears {get; set;}
            [MaxLength(256)]
            public virtual String MaintenanceDescription {get; set;}
            [MaxLength(256)]
            public virtual String Wheel {get; set;}
            [MaxLength(256)]
            public virtual String Saddle {get; set;}
            [MaxLength(256)]
            public virtual String Pedal {get; set;}
            public virtual String BikeFrame {get; set;}
            [MaxLength(256)]
            public virtual String Crankset {get; set;}
            [MaxLength(256)]
            public virtual String PictureAngle {get; set;}
            [MaxLength(256)]
            public virtual String PictureSize {get; set;}
            [MaxLength(256)]
            public virtual String ProductPhotoID {get; set;}
            [MaxLength(256)]
            public virtual String Material {get; set;}
            [MaxLength(256)]
            public virtual String Color {get; set;}
            [MaxLength(256)]
            public virtual String ProductLine {get; set;}
            [MaxLength(256)]
            public virtual String Style {get; set;}
            [MaxLength(1024)]
            public virtual String RiderExperience {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vProductModelInstructions", Schema="Production"), DbView]
         public partial class vProductModelInstructions : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ProductModelID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            public virtual String Instructions {get; set;}
            public virtual Int32? LocationID {get; set;}
            public virtual Decimal? SetupHours {get; set;}
            public virtual Decimal? MachineHours {get; set;}
            public virtual Decimal? LaborHours {get; set;}
            public virtual Int32? LotSize {get; set;}
            [MaxLength(1024)]
            public virtual String Step {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("WorkOrder", Schema="Production")]
         [ReferencedBy(new []{typeof(AW.Production.WorkOrderRouting)})]
         public partial class WorkOrder : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? WorkOrderID {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_WorkOrder_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required]
            public virtual Int32? OrderQty {get; set;}
            public virtual Int32? StockedQty {get; set;}
            [Required]
            public virtual Int16? ScrappedQty {get; set;}
            [Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
            [Required]
            public virtual DateTime? DueDate {get; set;}
            [References( Type=typeof(AW.Production.ScrapReason), MemberName="ScrapReasonID", ColumnName="ScrapReasonID", FKeyName="FK_WorkOrder_ScrapReason_ScrapReasonID")]
            public virtual Int16? ScrapReasonID {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("WorkOrderRouting", Schema="Production")]
         public partial class WorkOrderRouting : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.WorkOrder), MemberName="WorkOrderID", ColumnName="WorkOrderID", FKeyName="FK_WorkOrderRouting_WorkOrder_WorkOrderID")]
            public virtual Int32? WorkOrderID {get; set;}
            [Key, Required]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            public virtual Int16? OperationSequence {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Location), MemberName="LocationID", ColumnName="LocationID", FKeyName="FK_WorkOrderRouting_Location_LocationID")]
            public virtual Int16? LocationID {get; set;}
            [Required]
            public virtual DateTime? ScheduledStartDate {get; set;}
            [Required]
            public virtual DateTime? ScheduledEndDate {get; set;}
            public virtual DateTime? ActualStartDate {get; set;}
            public virtual DateTime? ActualEndDate {get; set;}
            public virtual Decimal? ActualResourceHrs {get; set;}
            [Required]
            public virtual Decimal? PlannedCost {get; set;}
            public virtual Decimal? ActualCost {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
      }
      public static partial class Purchasing
      {
         [Table("ProductVendor", Schema="Purchasing")]
         public partial class ProductVendor : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductVendor_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Purchasing.Vendor), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_ProductVendor_Vendor_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required]
            public virtual Int32? AverageLeadTime {get; set;}
            [Required]
            public virtual Decimal? StandardPrice {get; set;}
            public virtual Decimal? LastReceiptCost {get; set;}
            public virtual DateTime? LastReceiptDate {get; set;}
            [Required]
            public virtual Int32? MinOrderQty {get; set;}
            [Required]
            public virtual Int32? MaxOrderQty {get; set;}
            public virtual Int32? OnOrderQty {get; set;}
            [Required, MaxLength(3)]
            [References( Type=typeof(AW.Production.UnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_ProductVendor_UnitMeasure_UnitMeasureCode")]
            public virtual String UnitMeasureCode {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("PurchaseOrderDetail", Schema="Purchasing")]
         public partial class PurchaseOrderDetail : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Purchasing.PurchaseOrderHeader), MemberName="PurchaseOrderID", ColumnName="PurchaseOrderID", FKeyName="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID")]
            public virtual Int32? PurchaseOrderID {get; set;}
            [Key, DbAutoIncrement, Required]
            public virtual Int32? PurchaseOrderDetailID {get; set;}
            [Required]
            public virtual DateTime? DueDate {get; set;}
            [Required]
            public virtual Int16? OrderQty {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_PurchaseOrderDetail_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required]
            public virtual Decimal? UnitPrice {get; set;}
            public virtual Decimal? LineTotal {get; set;}
            [Required]
            public virtual Decimal? ReceivedQty {get; set;}
            [Required]
            public virtual Decimal? RejectedQty {get; set;}
            public virtual Decimal? StockedQty {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("PurchaseOrderHeader", Schema="Purchasing")]
         [ReferencedBy(new []{typeof(AW.Purchasing.PurchaseOrderDetail)})]
         public partial class PurchaseOrderHeader : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? PurchaseOrderID {get; set;}
            [Required]
            public virtual Byte? RevisionNumber {get; set;}
            [Required]
            public virtual Byte? Status {get; set;}
            [Required]
            [References( Type=typeof(AW.HumanResources.Employee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PurchaseOrderHeader_Employee_EmployeeID")]
            public virtual Int32? EmployeeID {get; set;}
            [Required]
            [References( Type=typeof(AW.Purchasing.Vendor), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PurchaseOrderHeader_Vendor_VendorID")]
            public virtual Int32? VendorID {get; set;}
            [Required]
            [References( Type=typeof(AW.Purchasing.ShipMethod), MemberName="ShipMethodID", ColumnName="ShipMethodID", FKeyName="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID")]
            public virtual Int32? ShipMethodID {get; set;}
            [Required]
            public virtual DateTime? OrderDate {get; set;}
            public virtual DateTime? ShipDate {get; set;}
            [Required]
            public virtual Decimal? SubTotal {get; set;}
            [Required]
            public virtual Decimal? TaxAmt {get; set;}
            [Required]
            public virtual Decimal? Freight {get; set;}
            public virtual Decimal? TotalDue {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ShipMethod", Schema="Purchasing")]
         [ReferencedBy(new []{typeof(AW.Purchasing.PurchaseOrderHeader), typeof(AW.Sales.SalesOrderHeader)})]
         public partial class ShipMethod : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ShipMethodID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Decimal? ShipBase {get; set;}
            [Required]
            public virtual Decimal? ShipRate {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Vendor", Schema="Purchasing")]
         [ReferencedBy(new []{typeof(AW.Purchasing.ProductVendor), typeof(AW.Purchasing.PurchaseOrderHeader)})]
         public partial class Vendor : DbBaseTable
         {
            [Key, DbUnique, Required]
            [References( Type=typeof(AW.Person.BusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Vendor_BusinessEntity_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(15)]
            public virtual String AccountNumber {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Byte? CreditRating {get; set;}
            [Required]
            public virtual Boolean? PreferredVendorStatus {get; set;}
            [Required]
            public virtual Boolean? ActiveFlag {get; set;}
            [MaxLength(1024)]
            public virtual String PurchasingWebServiceURL {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vVendorWithAddresses", Schema="Purchasing"), DbView]
         public partial class vVendorWithAddresses : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String AddressType {get; set;}
            [Required, MaxLength(60)]
            public virtual String AddressLine1 {get; set;}
            [MaxLength(60)]
            public virtual String AddressLine2 {get; set;}
            [Required, MaxLength(30)]
            public virtual String City {get; set;}
            [Required, MaxLength(50)]
            public virtual String StateProvinceName {get; set;}
            [Required, MaxLength(15)]
            public virtual String PostalCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String CountryRegionName {get; set;}
         }
         [Table("vVendorWithContacts", Schema="Purchasing"), DbView]
         public partial class vVendorWithContacts : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String ContactType {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [MaxLength(25)]
            public virtual String PhoneNumber {get; set;}
            [MaxLength(50)]
            public virtual String PhoneNumberType {get; set;}
            [MaxLength(50)]
            public virtual String EmailAddress {get; set;}
            [Required]
            public virtual Int32? EmailPromotion {get; set;}
         }
      }
      public static partial class Sales
      {
         [Table("CountryRegionCurrency", Schema="Sales")]
         public partial class CountryRegionCurrency : DbBaseTable
         {
            [Key, Required, MaxLength(3)]
            [References( Type=typeof(AW.Person.CountryRegion), MemberName="CountryRegionCode", ColumnName="CountryRegionCode", FKeyName="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode")]
            public virtual String CountryRegionCode {get; set;}
            [Key, Required, MaxLength(3)]
            [References( Type=typeof(AW.Sales.Currency), MemberName="CurrencyCode", ColumnName="CurrencyCode", FKeyName="FK_CountryRegionCurrency_Currency_CurrencyCode")]
            public virtual String CurrencyCode {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("CreditCard", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.PersonCreditCard), typeof(AW.Sales.SalesOrderHeader)})]
         public partial class CreditCard : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? CreditCardID {get; set;}
            [Required, MaxLength(50)]
            public virtual String CardType {get; set;}
            [Required, MaxLength(25)]
            public virtual String CardNumber {get; set;}
            [Required]
            public virtual Byte? ExpMonth {get; set;}
            [Required]
            public virtual Int16? ExpYear {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Currency", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.CountryRegionCurrency), typeof(AW.Sales.CurrencyRate)})]
         public partial class Currency : DbBaseTable
         {
            [Key, DbUnique, Required, MaxLength(3)]
            public virtual String CurrencyCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("CurrencyRate", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SalesOrderHeader)})]
         public partial class CurrencyRate : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? CurrencyRateID {get; set;}
            [Required]
            public virtual DateTime? CurrencyRateDate {get; set;}
            [Required, MaxLength(3)]
            [References( Type=typeof(AW.Sales.Currency), MemberName="CurrencyCode", ColumnName="CurrencyCode", FKeyName="FK_CurrencyRate_Currency_FromCurrencyCode")]
            public virtual String FromCurrencyCode {get; set;}
            [Required, MaxLength(3)]
            [References( Type=typeof(AW.Sales.Currency), MemberName="CurrencyCode", ColumnName="CurrencyCode", FKeyName="FK_CurrencyRate_Currency_ToCurrencyCode")]
            public virtual String ToCurrencyCode {get; set;}
            [Required]
            public virtual Decimal? AverageRate {get; set;}
            [Required]
            public virtual Decimal? EndOfDayRate {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Customer", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SalesOrderHeader)})]
         public partial class Customer : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? CustomerID {get; set;}
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Customer_AW.Person.Person_ID")]
            public virtual Int32? PersonID {get; set;}
            [References( Type=typeof(AW.Sales.Store), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Customer_Store_StoreID")]
            public virtual Int32? StoreID {get; set;}
            [References( Type=typeof(AW.Sales.SalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_Customer_SalesTerritory_TerritoryID")]
            public virtual Int32? TerritoryID {get; set;}
            [MaxLength(10)]
            public virtual String AccountNumber {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("PersonCreditCard", Schema="Sales")]
         public partial class PersonCreditCard : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Person.Person_), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PersonCreditCard_Person_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Sales.CreditCard), MemberName="CreditCardID", ColumnName="CreditCardID", FKeyName="FK_PersonCreditCard_CreditCard_CreditCardID")]
            public virtual Int32? CreditCardID {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesOrderDetail", Schema="Sales")]
         public partial class SalesOrderDetail : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Sales.SalesOrderHeader), MemberName="SalesOrderID", ColumnName="SalesOrderID", FKeyName="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID")]
            public virtual Int32? SalesOrderID {get; set;}
            [Key, DbAutoIncrement, Required]
            public virtual Int32? SalesOrderDetailID {get; set;}
            [MaxLength(25)]
            public virtual String CarrierTrackingNumber {get; set;}
            [Required]
            public virtual Int16? OrderQty {get; set;}
            [Required]
            [References( Type=typeof(AW.Sales.SpecialOfferProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required]
            [References( Type=typeof(AW.Sales.SpecialOfferProduct), MemberName="SpecialOfferID", ColumnName="SpecialOfferID", FKeyName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
            public virtual Int32? SpecialOfferID {get; set;}
            [Required]
            public virtual Decimal? UnitPrice {get; set;}
            [Required]
            public virtual Decimal? UnitPriceDiscount {get; set;}
            public virtual Decimal? LineTotal {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesOrderHeader", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SalesOrderDetail), typeof(AW.Sales.SalesOrderHeaderSalesReason)})]
         public partial class SalesOrderHeader : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? SalesOrderID {get; set;}
            [Required]
            public virtual Byte? RevisionNumber {get; set;}
            [Required]
            public virtual DateTime? OrderDate {get; set;}
            [Required]
            public virtual DateTime? DueDate {get; set;}
            public virtual DateTime? ShipDate {get; set;}
            [Required]
            public virtual Byte? Status {get; set;}
            [Required]
            public virtual Boolean? OnlineOrderFlag {get; set;}
            [MaxLength(25)]
            public virtual String SalesOrderNumber {get; set;}
            [MaxLength(25)]
            public virtual String PurchaseOrderNumber {get; set;}
            [MaxLength(15)]
            public virtual String AccountNumber {get; set;}
            [Required]
            [References( Type=typeof(AW.Sales.Customer), MemberName="CustomerID", ColumnName="CustomerID", FKeyName="FK_SalesOrderHeader_Customer_CustomerID")]
            public virtual Int32? CustomerID {get; set;}
            [References( Type=typeof(AW.Sales.SalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesOrderHeader_SalesPerson_SalesPersonID")]
            public virtual Int32? SalesPersonID {get; set;}
            [References( Type=typeof(AW.Sales.SalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_SalesOrderHeader_SalesTerritory_TerritoryID")]
            public virtual Int32? TerritoryID {get; set;}
            [Required]
            [References( Type=typeof(AW.Person.Address), MemberName="AddressID", ColumnName="AddressID", FKeyName="FK_SalesOrderHeader_Address_BillToAddressID")]
            public virtual Int32? BillToAddressID {get; set;}
            [Required]
            [References( Type=typeof(AW.Person.Address), MemberName="AddressID", ColumnName="AddressID", FKeyName="FK_SalesOrderHeader_Address_ShipToAddressID")]
            public virtual Int32? ShipToAddressID {get; set;}
            [Required]
            [References( Type=typeof(AW.Purchasing.ShipMethod), MemberName="ShipMethodID", ColumnName="ShipMethodID", FKeyName="FK_SalesOrderHeader_ShipMethod_ShipMethodID")]
            public virtual Int32? ShipMethodID {get; set;}
            [References( Type=typeof(AW.Sales.CreditCard), MemberName="CreditCardID", ColumnName="CreditCardID", FKeyName="FK_SalesOrderHeader_CreditCard_CreditCardID")]
            public virtual Int32? CreditCardID {get; set;}
            [MaxLength(15)]
            public virtual String CreditCardApprovalCode {get; set;}
            [References( Type=typeof(AW.Sales.CurrencyRate), MemberName="CurrencyRateID", ColumnName="CurrencyRateID", FKeyName="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID")]
            public virtual Int32? CurrencyRateID {get; set;}
            [Required]
            public virtual Decimal? SubTotal {get; set;}
            [Required]
            public virtual Decimal? TaxAmt {get; set;}
            [Required]
            public virtual Decimal? Freight {get; set;}
            public virtual Decimal? TotalDue {get; set;}
            [MaxLength(128)]
            public virtual String Comment {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesOrderHeaderSalesReason", Schema="Sales")]
         public partial class SalesOrderHeaderSalesReason : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Sales.SalesOrderHeader), MemberName="SalesOrderID", ColumnName="SalesOrderID", FKeyName="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID")]
            public virtual Int32? SalesOrderID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Sales.SalesReason), MemberName="SalesReasonID", ColumnName="SalesReasonID", FKeyName="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID")]
            public virtual Int32? SalesReasonID {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesPerson", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SalesOrderHeader), typeof(AW.Sales.SalesPersonQuotaHistory), typeof(AW.Sales.SalesTerritoryHistory), typeof(AW.Sales.Store)})]
         public partial class SalesPerson : DbBaseTable
         {
            [Key, DbUnique, Required]
            [References( Type=typeof(AW.HumanResources.Employee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesPerson_Employee_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [References( Type=typeof(AW.Sales.SalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_SalesPerson_SalesTerritory_TerritoryID")]
            public virtual Int32? TerritoryID {get; set;}
            public virtual Decimal? SalesQuota {get; set;}
            [Required]
            public virtual Decimal? Bonus {get; set;}
            [Required]
            public virtual Decimal? CommissionPct {get; set;}
            [Required]
            public virtual Decimal? SalesYTD {get; set;}
            [Required]
            public virtual Decimal? SalesLastYear {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesPersonQuotaHistory", Schema="Sales")]
         public partial class SalesPersonQuotaHistory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Sales.SalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            public virtual DateTime? QuotaDate {get; set;}
            [Required]
            public virtual Decimal? SalesQuota {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesReason", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SalesOrderHeaderSalesReason)})]
         public partial class SalesReason : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? SalesReasonID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String ReasonType {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesTaxRate", Schema="Sales")]
         public partial class SalesTaxRate : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? SalesTaxRateID {get; set;}
            [Required]
            [References( Type=typeof(AW.Person.StateProvince), MemberName="StateProvinceID", ColumnName="StateProvinceID", FKeyName="FK_SalesTaxRate_StateProvince_StateProvinceID")]
            public virtual Int32? StateProvinceID {get; set;}
            [Required]
            public virtual Byte? TaxType {get; set;}
            [Required]
            public virtual Decimal? TaxRate {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesTerritory", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Person.StateProvince), typeof(AW.Sales.Customer), typeof(AW.Sales.SalesOrderHeader), typeof(AW.Sales.SalesPerson), typeof(AW.Sales.SalesTerritoryHistory)})]
         public partial class SalesTerritory : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? TerritoryID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(3)]
            [References( Type=typeof(AW.Person.CountryRegion), MemberName="CountryRegionCode", ColumnName="CountryRegionCode", FKeyName="FK_SalesTerritory_CountryRegion_CountryRegionCode")]
            public virtual String CountryRegionCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String Group {get; set;}
            [Required]
            public virtual Decimal? SalesYTD {get; set;}
            [Required]
            public virtual Decimal? SalesLastYear {get; set;}
            [Required]
            public virtual Decimal? CostYTD {get; set;}
            [Required]
            public virtual Decimal? CostLastYear {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SalesTerritoryHistory", Schema="Sales")]
         public partial class SalesTerritoryHistory : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Sales.SalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Sales.SalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID")]
            public virtual Int32? TerritoryID {get; set;}
            [Key, Required]
            public virtual DateTime? StartDate {get; set;}
            public virtual DateTime? EndDate {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("ShoppingCartItem", Schema="Sales")]
         public partial class ShoppingCartItem : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? ShoppingCartItemID {get; set;}
            [Required, MaxLength(50)]
            public virtual String ShoppingCartID {get; set;}
            [Required]
            public virtual Int32? Quantity {get; set;}
            [Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ShoppingCartItem_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required]
            public virtual DateTime? DateCreated {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SpecialOffer", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SpecialOfferProduct)})]
         public partial class SpecialOffer : DbBaseTable
         {
            [Key, DbAutoIncrement, DbUnique, Required]
            public virtual Int32? SpecialOfferID {get; set;}
            [Required, MaxLength(255)]
            public virtual String Description {get; set;}
            [Required]
            public virtual Decimal? DiscountPct {get; set;}
            [Required, MaxLength(50)]
            public virtual String Type {get; set;}
            [Required, MaxLength(50)]
            public virtual String Category {get; set;}
            [Required]
            public virtual DateTime? StartDate {get; set;}
            [Required]
            public virtual DateTime? EndDate {get; set;}
            [Required]
            public virtual Int32? MinQty {get; set;}
            public virtual Int32? MaxQty {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("SpecialOfferProduct", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.SalesOrderDetail)})]
         public partial class SpecialOfferProduct : DbBaseTable
         {
            [Key, Required]
            [References( Type=typeof(AW.Sales.SpecialOffer), MemberName="SpecialOfferID", ColumnName="SpecialOfferID", FKeyName="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID")]
            public virtual Int32? SpecialOfferID {get; set;}
            [Key, Required]
            [References( Type=typeof(AW.Production.Product), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_SpecialOfferProduct_Product_ProductID")]
            public virtual Int32? ProductID {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("Store", Schema="Sales")]
         [ReferencedBy(new []{typeof(AW.Sales.Customer)})]
         public partial class Store : DbBaseTable
         {
            [Key, DbUnique, Required]
            [References( Type=typeof(AW.Person.BusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Store_BusinessEntity_BusinessEntityID")]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [References( Type=typeof(AW.Sales.SalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Store_SalesPerson_SalesPersonID")]
            public virtual Int32? SalesPersonID {get; set;}
            public virtual String Demographics {get; set;}
            [Required]
            public virtual Guid? rowguid {get; set;}
            [Required]
            public virtual DateTime? ModifiedDate {get; set;}
         }
         [Table("vIndividualCustomer", Schema="Sales"), DbView]
         public partial class vIndividualCustomer : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [MaxLength(25)]
            public virtual String PhoneNumber {get; set;}
            [MaxLength(50)]
            public virtual String PhoneNumberType {get; set;}
            [MaxLength(50)]
            public virtual String EmailAddress {get; set;}
            [Required]
            public virtual Int32? EmailPromotion {get; set;}
            [Required, MaxLength(50)]
            public virtual String AddressType {get; set;}
            [Required, MaxLength(60)]
            public virtual String AddressLine1 {get; set;}
            [MaxLength(60)]
            public virtual String AddressLine2 {get; set;}
            [Required, MaxLength(30)]
            public virtual String City {get; set;}
            [Required, MaxLength(50)]
            public virtual String StateProvinceName {get; set;}
            [Required, MaxLength(15)]
            public virtual String PostalCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String CountryRegionName {get; set;}
            public virtual String Demographics {get; set;}
         }
         [Table("vPersonDemographics", Schema="Sales"), DbView]
         public partial class vPersonDemographics : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Int32? BusinessEntityID {get; set;}
            public virtual Decimal? TotalPurchaseYTD {get; set;}
            public virtual DateTime? DateFirstPurchase {get; set;}
            public virtual DateTime? BirthDate {get; set;}
            [MaxLength(1)]
            public virtual String MaritalStatus {get; set;}
            [MaxLength(30)]
            public virtual String YearlyIncome {get; set;}
            [MaxLength(1)]
            public virtual String Gender {get; set;}
            public virtual Int32? TotalChildren {get; set;}
            public virtual Int32? NumberChildrenAtHome {get; set;}
            [MaxLength(30)]
            public virtual String Education {get; set;}
            [MaxLength(30)]
            public virtual String Occupation {get; set;}
            public virtual Boolean? HomeOwnerFlag {get; set;}
            public virtual Int32? NumberCarsOwned {get; set;}
         }
         [Table("vSalesPerson", Schema="Sales"), DbView]
         public partial class vSalesPerson : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [Required, MaxLength(50)]
            public virtual String JobTitle {get; set;}
            [MaxLength(25)]
            public virtual String PhoneNumber {get; set;}
            [MaxLength(50)]
            public virtual String PhoneNumberType {get; set;}
            [MaxLength(50)]
            public virtual String EmailAddress {get; set;}
            [Required]
            public virtual Int32? EmailPromotion {get; set;}
            [Required, MaxLength(60)]
            public virtual String AddressLine1 {get; set;}
            [MaxLength(60)]
            public virtual String AddressLine2 {get; set;}
            [Required, MaxLength(30)]
            public virtual String City {get; set;}
            [Required, MaxLength(50)]
            public virtual String StateProvinceName {get; set;}
            [Required, MaxLength(15)]
            public virtual String PostalCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String CountryRegionName {get; set;}
            [MaxLength(50)]
            public virtual String TerritoryName {get; set;}
            [MaxLength(50)]
            public virtual String TerritoryGroup {get; set;}
            public virtual Decimal? SalesQuota {get; set;}
            [Required]
            public virtual Decimal? SalesYTD {get; set;}
            [Required]
            public virtual Decimal? SalesLastYear {get; set;}
         }
         [Table("vSalesPersonSalesByFiscalYears", Schema="Sales"), DbView]
         public partial class vSalesPersonSalesByFiscalYears : DbBaseTable
         {
            public virtual Int32? SalesPersonID {get; set;}
            [MaxLength(152)]
            public virtual String FullName {get; set;}
            [Required, MaxLength(50)]
            public virtual String JobTitle {get; set;}
            [Required, MaxLength(50)]
            public virtual String SalesTerritory {get; set;}
            [Column("2002")]
            public virtual Decimal? _2002 {get; set;}
            [Column("2003")]
            public virtual Decimal? _2003 {get; set;}
            [Column("2004")]
            public virtual Decimal? _2004 {get; set;}
         }
         [Table("vStoreWithAddresses", Schema="Sales"), DbView]
         public partial class vStoreWithAddresses : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String AddressType {get; set;}
            [Required, MaxLength(60)]
            public virtual String AddressLine1 {get; set;}
            [MaxLength(60)]
            public virtual String AddressLine2 {get; set;}
            [Required, MaxLength(30)]
            public virtual String City {get; set;}
            [Required, MaxLength(50)]
            public virtual String StateProvinceName {get; set;}
            [Required, MaxLength(15)]
            public virtual String PostalCode {get; set;}
            [Required, MaxLength(50)]
            public virtual String CountryRegionName {get; set;}
         }
         [Table("vStoreWithContacts", Schema="Sales"), DbView]
         public partial class vStoreWithContacts : DbBaseTable
         {
            [Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            [Required, MaxLength(50)]
            public virtual String ContactType {get; set;}
            [MaxLength(8)]
            public virtual String Title {get; set;}
            [Required, MaxLength(50)]
            public virtual String FirstName {get; set;}
            [MaxLength(50)]
            public virtual String MiddleName {get; set;}
            [Required, MaxLength(50)]
            public virtual String LastName {get; set;}
            [MaxLength(10)]
            public virtual String Suffix {get; set;}
            [MaxLength(25)]
            public virtual String PhoneNumber {get; set;}
            [MaxLength(50)]
            public virtual String PhoneNumberType {get; set;}
            [MaxLength(50)]
            public virtual String EmailAddress {get; set;}
            [Required]
            public virtual Int32? EmailPromotion {get; set;}
         }
         [Table("vStoreWithDemographics", Schema="Sales"), DbView]
         public partial class vStoreWithDemographics : DbBaseTable
         {
            [Key, DbUnique, Required]
            public virtual Int32? BusinessEntityID {get; set;}
            [Required, MaxLength(50)]
            public virtual String Name {get; set;}
            public virtual Decimal? AnnualSales {get; set;}
            public virtual Decimal? AnnualRevenue {get; set;}
            [MaxLength(50)]
            public virtual String BankName {get; set;}
            [MaxLength(5)]
            public virtual String BusinessType {get; set;}
            public virtual Int32? YearOpened {get; set;}
            [MaxLength(50)]
            public virtual String Specialty {get; set;}
            public virtual Int32? SquareFeet {get; set;}
            [MaxLength(30)]
            public virtual String Brands {get; set;}
            [MaxLength(30)]
            public virtual String Internet {get; set;}
            public virtual Int32? NumberEmployees {get; set;}
         }
      }
   }
   
   public static partial class JoinExtension
   {
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Father")]
      public static AW.FamilyPerson Father(this AW.FamilyPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Father")]
      public static AW.FamilyPerson Father(this AW.FamilyPerson self){return null;}
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Mother")]
      public static AW.FamilyPerson Mother(this AW.FamilyPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Mother")]
      public static AW.FamilyPerson Mother(this AW.FamilyPerson self){return null;}
      [JoinMethod(RelationshipName="FK_Employee_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Employee_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Department_DepartmentID")]
      public static AW.HumanResources.Department Department(this AW.HumanResources.EmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Department_DepartmentID")]
      public static AW.HumanResources.Department Department(this AW.HumanResources.EmployeeDepartmentHistory self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.HumanResources.EmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.HumanResources.EmployeeDepartmentHistory self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Shift_ShiftID")]
      public static AW.HumanResources.Shift Shift(this AW.HumanResources.EmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Shift_ShiftID")]
      public static AW.HumanResources.Shift Shift(this AW.HumanResources.EmployeeDepartmentHistory self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeePayHistory_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.HumanResources.EmployeePayHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeePayHistory_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.HumanResources.EmployeePayHistory self){return null;}
      [JoinMethod(RelationshipName="FK_JobCandidate_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.HumanResources.JobCandidate self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_JobCandidate_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.HumanResources.JobCandidate self){return null;}
      [JoinMethod(RelationshipName="FK_Address_StateProvince_StateProvinceID")]
      public static AW.Person.StateProvince StateProvince(this AW.Person.Address self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Address_StateProvince_StateProvinceID")]
      public static AW.Person.StateProvince StateProvince(this AW.Person.Address self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_Address_AddressID")]
      public static AW.Person.Address Address(this AW.Person.BusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_Address_AddressID")]
      public static AW.Person.Address Address(this AW.Person.BusinessEntityAddress self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_AddressType_AddressTypeID")]
      public static AW.Person.AddressType AddressType(this AW.Person.BusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_AddressType_AddressTypeID")]
      public static AW.Person.AddressType AddressType(this AW.Person.BusinessEntityAddress self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Person.BusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Person.BusinessEntityAddress self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Person.BusinessEntityContact self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Person.BusinessEntityContact self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_ContactType_ContactTypeID")]
      public static AW.Person.ContactType ContactType(this AW.Person.BusinessEntityContact self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_ContactType_ContactTypeID")]
      public static AW.Person.ContactType ContactType(this AW.Person.BusinessEntityContact self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_AW.Person.Person_ID")]
      public static AW.Person.Person_ Person(this AW.Person.BusinessEntityContact self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_AW.Person.Person_ID")]
      public static AW.Person.Person_ Person(this AW.Person.BusinessEntityContact self){return null;}
      [JoinMethod(RelationshipName="FK_EmailAddress_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Person.EmailAddress self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmailAddress_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Person.EmailAddress self){return null;}
      [JoinMethod(RelationshipName="FK_Password_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Person.Password self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Password_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Person.Password self){return null;}
      [JoinMethod(RelationshipName="FK_Person_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Person_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Person.PersonPhone self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Person.PersonPhone self){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID")]
      public static AW.Person.PhoneNumberType PhoneNumberType(this AW.Person.PersonPhone self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID")]
      public static AW.Person.PhoneNumberType PhoneNumberType(this AW.Person.PersonPhone self){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_CountryRegion_CountryRegionCode")]
      public static AW.Person.CountryRegion CountryRegion(this AW.Person.StateProvince self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_CountryRegion_CountryRegionCode")]
      public static AW.Person.CountryRegion CountryRegion(this AW.Person.StateProvince self){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Person.StateProvince self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Person.StateProvince self){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ComponentID")]
      public static AW.Production.Product Component(this AW.Production.BillOfMaterials self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ComponentID")]
      public static AW.Production.Product Component(this AW.Production.BillOfMaterials self){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ProductAssemblyID")]
      public static AW.Production.Product ProductAssembly(this AW.Production.BillOfMaterials self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ProductAssemblyID")]
      public static AW.Production.Product ProductAssembly(this AW.Production.BillOfMaterials self){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode")]
      public static AW.Production.UnitMeasure UnitMeasure(this AW.Production.BillOfMaterials self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode")]
      public static AW.Production.UnitMeasure UnitMeasure(this AW.Production.BillOfMaterials self){return null;}
      [JoinMethod(RelationshipName="FK_Document_Employee_Owner")]
      public static AW.HumanResources.Employee Employee(this AW.Production.Document self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Document_Employee_Owner")]
      public static AW.HumanResources.Employee Employee(this AW.Production.Document self){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductModel_ProductModelID")]
      public static AW.Production.ProductModel ProductModel(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductModel_ProductModelID")]
      public static AW.Production.ProductModel ProductModel(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductSubcategory_ProductSubcategoryID")]
      public static AW.Production.ProductSubcategory ProductSubcategory(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductSubcategory_ProductSubcategoryID")]
      public static AW.Production.ProductSubcategory ProductSubcategory(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_SizeUnitMeasureCode")]
      public static AW.Production.UnitMeasure SizeUnitMeasure(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_SizeUnitMeasureCode")]
      public static AW.Production.UnitMeasure SizeUnitMeasure(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_WeightUnitMeasureCode")]
      public static AW.Production.UnitMeasure WeightUnitMeasure(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_WeightUnitMeasureCode")]
      public static AW.Production.UnitMeasure WeightUnitMeasure(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductCostHistory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductCostHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductCostHistory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductCostHistory self){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Document_DocumentNode")]
      public static AW.Production.Document Document(this AW.Production.ProductDocument self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Document_DocumentNode")]
      public static AW.Production.Document Document(this AW.Production.ProductDocument self){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductDocument self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductDocument self){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Location_LocationID")]
      public static AW.Production.Location Location(this AW.Production.ProductInventory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Location_LocationID")]
      public static AW.Production.Location Location(this AW.Production.ProductInventory self){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductInventory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductInventory self){return null;}
      [JoinMethod(RelationshipName="FK_ProductListPriceHistory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductListPriceHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductListPriceHistory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductListPriceHistory self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_Illustration_IllustrationID")]
      public static AW.Production.Illustration Illustration(this AW.Production.ProductModelIllustration self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_Illustration_IllustrationID")]
      public static AW.Production.Illustration Illustration(this AW.Production.ProductModelIllustration self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_ProductModel_ProductModelID")]
      public static AW.Production.ProductModel ProductModel(this AW.Production.ProductModelIllustration self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_ProductModel_ProductModelID")]
      public static AW.Production.ProductModel ProductModel(this AW.Production.ProductModelIllustration self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_Culture_CultureID")]
      public static AW.Production.Culture Culture(this AW.Production.ProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_Culture_CultureID")]
      public static AW.Production.Culture Culture(this AW.Production.ProductModelProductDescriptionCulture self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID")]
      public static AW.Production.ProductDescription ProductDescription(this AW.Production.ProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID")]
      public static AW.Production.ProductDescription ProductDescription(this AW.Production.ProductModelProductDescriptionCulture self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID")]
      public static AW.Production.ProductModel ProductModel(this AW.Production.ProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID")]
      public static AW.Production.ProductModel ProductModel(this AW.Production.ProductModelProductDescriptionCulture self){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductProductPhoto self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductProductPhoto self){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID")]
      public static AW.Production.ProductPhoto ProductPhoto(this AW.Production.ProductProductPhoto self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID")]
      public static AW.Production.ProductPhoto ProductPhoto(this AW.Production.ProductProductPhoto self){return null;}
      [JoinMethod(RelationshipName="FK_ProductReview_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductReview self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductReview_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.ProductReview self){return null;}
      [JoinMethod(RelationshipName="FK_ProductSubcategory_ProductCategory_ProductCategoryID")]
      public static AW.Production.ProductCategory ProductCategory(this AW.Production.ProductSubcategory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductSubcategory_ProductCategory_ProductCategoryID")]
      public static AW.Production.ProductCategory ProductCategory(this AW.Production.ProductSubcategory self){return null;}
      [JoinMethod(RelationshipName="FK_TransactionHistory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.TransactionHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_TransactionHistory_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.TransactionHistory self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.WorkOrder self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Production.WorkOrder self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_ScrapReason_ScrapReasonID")]
      public static AW.Production.ScrapReason ScrapReason(this AW.Production.WorkOrder self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_ScrapReason_ScrapReasonID")]
      public static AW.Production.ScrapReason ScrapReason(this AW.Production.WorkOrder self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_Location_LocationID")]
      public static AW.Production.Location Location(this AW.Production.WorkOrderRouting self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_Location_LocationID")]
      public static AW.Production.Location Location(this AW.Production.WorkOrderRouting self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_WorkOrder_WorkOrderID")]
      public static AW.Production.WorkOrder WorkOrder(this AW.Production.WorkOrderRouting self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_WorkOrder_WorkOrderID")]
      public static AW.Production.WorkOrder WorkOrder(this AW.Production.WorkOrderRouting self){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Purchasing.ProductVendor self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Purchasing.ProductVendor self){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_UnitMeasure_UnitMeasureCode")]
      public static AW.Production.UnitMeasure UnitMeasure(this AW.Purchasing.ProductVendor self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_UnitMeasure_UnitMeasureCode")]
      public static AW.Production.UnitMeasure UnitMeasure(this AW.Purchasing.ProductVendor self){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Vendor_BusinessEntityID")]
      public static AW.Purchasing.Vendor BusinessEntity(this AW.Purchasing.ProductVendor self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Vendor_BusinessEntityID")]
      public static AW.Purchasing.Vendor BusinessEntity(this AW.Purchasing.ProductVendor self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Purchasing.PurchaseOrderDetail self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Purchasing.PurchaseOrderDetail self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID")]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrder(this AW.Purchasing.PurchaseOrderDetail self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID")]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrder(this AW.Purchasing.PurchaseOrderDetail self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Employee_EmployeeID")]
      public static AW.HumanResources.Employee Employee(this AW.Purchasing.PurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Employee_EmployeeID")]
      public static AW.HumanResources.Employee Employee(this AW.Purchasing.PurchaseOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID")]
      public static AW.Purchasing.ShipMethod ShipMethod(this AW.Purchasing.PurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID")]
      public static AW.Purchasing.ShipMethod ShipMethod(this AW.Purchasing.PurchaseOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Vendor_VendorID")]
      public static AW.Purchasing.Vendor Vendor(this AW.Purchasing.PurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Vendor_VendorID")]
      public static AW.Purchasing.Vendor Vendor(this AW.Purchasing.PurchaseOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_Vendor_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Purchasing.Vendor self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Vendor_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Purchasing.Vendor self){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode")]
      public static AW.Person.CountryRegion CountryRegion(this AW.Sales.CountryRegionCurrency self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode")]
      public static AW.Person.CountryRegion CountryRegion(this AW.Sales.CountryRegionCurrency self){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_Currency_CurrencyCode")]
      public static AW.Sales.Currency Currency(this AW.Sales.CountryRegionCurrency self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_Currency_CurrencyCode")]
      public static AW.Sales.Currency Currency(this AW.Sales.CountryRegionCurrency self){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_FromCurrencyCode")]
      public static AW.Sales.Currency FromCurrency(this AW.Sales.CurrencyRate self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_FromCurrencyCode")]
      public static AW.Sales.Currency FromCurrency(this AW.Sales.CurrencyRate self){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_ToCurrencyCode")]
      public static AW.Sales.Currency ToCurrency(this AW.Sales.CurrencyRate self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_ToCurrencyCode")]
      public static AW.Sales.Currency ToCurrency(this AW.Sales.CurrencyRate self){return null;}
      [JoinMethod(RelationshipName="FK_Customer_AW.Person.Person_ID")]
      public static AW.Person.Person_ Person(this AW.Sales.Customer self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Customer_AW.Person.Person_ID")]
      public static AW.Person.Person_ Person(this AW.Sales.Customer self){return null;}
      [JoinMethod(RelationshipName="FK_Customer_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.Customer self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Customer_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.Customer self){return null;}
      [JoinMethod(RelationshipName="FK_Customer_Store_StoreID")]
      public static AW.Sales.Store Store(this AW.Sales.Customer self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Customer_Store_StoreID")]
      public static AW.Sales.Store Store(this AW.Sales.Customer self){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_CreditCard_CreditCardID")]
      public static AW.Sales.CreditCard CreditCard(this AW.Sales.PersonCreditCard self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_CreditCard_CreditCardID")]
      public static AW.Sales.CreditCard CreditCard(this AW.Sales.PersonCreditCard self){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Sales.PersonCreditCard self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_Person_BusinessEntityID")]
      public static AW.Person.Person_ BusinessEntity(this AW.Sales.PersonCreditCard self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID")]
      public static AW.Sales.SalesOrderHeader SalesOrder(this AW.Sales.SalesOrderDetail self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID")]
      public static AW.Sales.SalesOrderHeader SalesOrder(this AW.Sales.SalesOrderDetail self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
      public static AW.Sales.SpecialOfferProduct ProductSpecialOffer(this AW.Sales.SalesOrderDetail self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
      public static AW.Sales.SpecialOfferProduct ProductSpecialOffer(this AW.Sales.SalesOrderDetail self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_BillToAddressID")]
      public static AW.Person.Address BillToAddress(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_BillToAddressID")]
      public static AW.Person.Address BillToAddress(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_ShipToAddressID")]
      public static AW.Person.Address ShipToAddress(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_ShipToAddressID")]
      public static AW.Person.Address ShipToAddress(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CreditCard_CreditCardID")]
      public static AW.Sales.CreditCard CreditCard(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CreditCard_CreditCardID")]
      public static AW.Sales.CreditCard CreditCard(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID")]
      public static AW.Sales.CurrencyRate CurrencyRate(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID")]
      public static AW.Sales.CurrencyRate CurrencyRate(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Customer_CustomerID")]
      public static AW.Sales.Customer Customer(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Customer_CustomerID")]
      public static AW.Sales.Customer Customer(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesPerson_SalesPersonID")]
      public static AW.Sales.SalesPerson SalesPerson(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesPerson_SalesPersonID")]
      public static AW.Sales.SalesPerson SalesPerson(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_ShipMethod_ShipMethodID")]
      public static AW.Purchasing.ShipMethod ShipMethod(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_ShipMethod_ShipMethodID")]
      public static AW.Purchasing.ShipMethod ShipMethod(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID")]
      public static AW.Sales.SalesOrderHeader SalesOrder(this AW.Sales.SalesOrderHeaderSalesReason self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID")]
      public static AW.Sales.SalesOrderHeader SalesOrder(this AW.Sales.SalesOrderHeaderSalesReason self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID")]
      public static AW.Sales.SalesReason SalesReason(this AW.Sales.SalesOrderHeaderSalesReason self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID")]
      public static AW.Sales.SalesReason SalesReason(this AW.Sales.SalesOrderHeaderSalesReason self){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.Sales.SalesPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_Employee_BusinessEntityID")]
      public static AW.HumanResources.Employee BusinessEntity(this AW.Sales.SalesPerson self){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.SalesPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.SalesPerson self){return null;}
      [JoinMethod(RelationshipName="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID")]
      public static AW.Sales.SalesPerson BusinessEntity(this AW.Sales.SalesPersonQuotaHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID")]
      public static AW.Sales.SalesPerson BusinessEntity(this AW.Sales.SalesPersonQuotaHistory self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTaxRate_StateProvince_StateProvinceID")]
      public static AW.Person.StateProvince StateProvince(this AW.Sales.SalesTaxRate self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTaxRate_StateProvince_StateProvinceID")]
      public static AW.Person.StateProvince StateProvince(this AW.Sales.SalesTaxRate self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritory_CountryRegion_CountryRegionCode")]
      public static AW.Person.CountryRegion CountryRegion(this AW.Sales.SalesTerritory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritory_CountryRegion_CountryRegionCode")]
      public static AW.Person.CountryRegion CountryRegion(this AW.Sales.SalesTerritory self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID")]
      public static AW.Sales.SalesPerson BusinessEntity(this AW.Sales.SalesTerritoryHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID")]
      public static AW.Sales.SalesPerson BusinessEntity(this AW.Sales.SalesTerritoryHistory self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.SalesTerritoryHistory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID")]
      public static AW.Sales.SalesTerritory Territory(this AW.Sales.SalesTerritoryHistory self){return null;}
      [JoinMethod(RelationshipName="FK_ShoppingCartItem_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Sales.ShoppingCartItem self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ShoppingCartItem_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Sales.ShoppingCartItem self){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Sales.SpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_Product_ProductID")]
      public static AW.Production.Product Product(this AW.Sales.SpecialOfferProduct self){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID")]
      public static AW.Sales.SpecialOffer SpecialOffer(this AW.Sales.SpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID")]
      public static AW.Sales.SpecialOffer SpecialOffer(this AW.Sales.SpecialOfferProduct self){return null;}
      [JoinMethod(RelationshipName="FK_Store_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Sales.Store self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Store_BusinessEntity_BusinessEntityID")]
      public static AW.Person.BusinessEntity BusinessEntity(this AW.Sales.Store self){return null;}
      [JoinMethod(RelationshipName="FK_Store_SalesPerson_SalesPersonID")]
      public static AW.Sales.SalesPerson SalesPerson(this AW.Sales.Store self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Store_SalesPerson_SalesPersonID")]
      public static AW.Sales.SalesPerson SalesPerson(this AW.Sales.Store self){return null;}
      // joins for child relations
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Father", Reversed=true)]
      public static AW.FamilyPerson FamilyPersonFather_N(this AW.FamilyPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Father", Reversed = true)]
      public static AW.FamilyPerson FamilyPersonFather_N(this AW.FamilyPerson self){return null;}
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Mother", Reversed=true)]
      public static AW.FamilyPerson FamilyPersonMother_N(this AW.FamilyPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_FamilyPerson_FamilyPerson_Mother", Reversed = true)]
      public static AW.FamilyPerson FamilyPersonMother_N(this AW.FamilyPerson self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Department_DepartmentID", Reversed=true)]
      public static AW.HumanResources.EmployeeDepartmentHistory EmployeeDepartmentHistory_N(this AW.HumanResources.Department self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Department_DepartmentID", Reversed = true)]
      public static AW.HumanResources.EmployeeDepartmentHistory EmployeeDepartmentHistory_N(this AW.HumanResources.Department self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID", Reversed=true)]
      public static AW.HumanResources.EmployeeDepartmentHistory EmployeeDepartmentHistory_N(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID", Reversed = true)]
      public static AW.HumanResources.EmployeeDepartmentHistory EmployeeDepartmentHistory_N(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeePayHistory_Employee_BusinessEntityID", Reversed=true)]
      public static AW.HumanResources.EmployeePayHistory EmployeePayHistory_N(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeePayHistory_Employee_BusinessEntityID", Reversed = true)]
      public static AW.HumanResources.EmployeePayHistory EmployeePayHistory_N(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_JobCandidate_Employee_BusinessEntityID", Reversed=true)]
      public static AW.HumanResources.JobCandidate JobCandidate_N(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_JobCandidate_Employee_BusinessEntityID", Reversed = true)]
      public static AW.HumanResources.JobCandidate JobCandidate_N(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_Document_Employee_Owner", Reversed=true)]
      public static AW.Production.Document Document_N(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Document_Employee_Owner", Reversed = true)]
      public static AW.Production.Document Document_N(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Employee_EmployeeID", Reversed=true)]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrderHeader_N(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Employee_EmployeeID", Reversed = true)]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrderHeader_N(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_Employee_BusinessEntityID", Reversed=true)]
      public static AW.Sales.SalesPerson SalesPerson_N(this AW.HumanResources.Employee self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_Employee_BusinessEntityID", Reversed = true)]
      public static AW.Sales.SalesPerson SalesPerson_N(this AW.HumanResources.Employee self){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Shift_ShiftID", Reversed=true)]
      public static AW.HumanResources.EmployeeDepartmentHistory EmployeeDepartmentHistory_N(this AW.HumanResources.Shift self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmployeeDepartmentHistory_Shift_ShiftID", Reversed = true)]
      public static AW.HumanResources.EmployeeDepartmentHistory EmployeeDepartmentHistory_N(this AW.HumanResources.Shift self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_Address_AddressID", Reversed=true)]
      public static AW.Person.BusinessEntityAddress BusinessEntityAddress_N(this AW.Person.Address self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_Address_AddressID", Reversed = true)]
      public static AW.Person.BusinessEntityAddress BusinessEntityAddress_N(this AW.Person.Address self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_BillToAddressID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeaderBillToAddress_N(this AW.Person.Address self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_BillToAddressID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeaderBillToAddress_N(this AW.Person.Address self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_ShipToAddressID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeaderShipToAddress_N(this AW.Person.Address self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Address_ShipToAddressID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeaderShipToAddress_N(this AW.Person.Address self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_AddressType_AddressTypeID", Reversed=true)]
      public static AW.Person.BusinessEntityAddress BusinessEntityAddress_N(this AW.Person.AddressType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_AddressType_AddressTypeID", Reversed = true)]
      public static AW.Person.BusinessEntityAddress BusinessEntityAddress_N(this AW.Person.AddressType self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", Reversed=true)]
      public static AW.Person.BusinessEntityAddress BusinessEntityAddress_N(this AW.Person.BusinessEntity self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", Reversed = true)]
      public static AW.Person.BusinessEntityAddress BusinessEntityAddress_N(this AW.Person.BusinessEntity self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", Reversed=true)]
      public static AW.Person.BusinessEntityContact BusinessEntityContact_N(this AW.Person.BusinessEntity self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", Reversed = true)]
      public static AW.Person.BusinessEntityContact BusinessEntityContact_N(this AW.Person.BusinessEntity self){return null;}
      [JoinMethod(RelationshipName="FK_Person_BusinessEntity_BusinessEntityID", Reversed=true)]
      public static AW.Person.Person_ Person_N(this AW.Person.BusinessEntity self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Person_BusinessEntity_BusinessEntityID", Reversed = true)]
      public static AW.Person.Person_ Person_N(this AW.Person.BusinessEntity self){return null;}
      [JoinMethod(RelationshipName="FK_Vendor_BusinessEntity_BusinessEntityID", Reversed=true)]
      public static AW.Purchasing.Vendor Vendor_N(this AW.Person.BusinessEntity self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Vendor_BusinessEntity_BusinessEntityID", Reversed = true)]
      public static AW.Purchasing.Vendor Vendor_N(this AW.Person.BusinessEntity self){return null;}
      [JoinMethod(RelationshipName="FK_Store_BusinessEntity_BusinessEntityID", Reversed=true)]
      public static AW.Sales.Store Store_N(this AW.Person.BusinessEntity self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Store_BusinessEntity_BusinessEntityID", Reversed = true)]
      public static AW.Sales.Store Store_N(this AW.Person.BusinessEntity self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_ContactType_ContactTypeID", Reversed=true)]
      public static AW.Person.BusinessEntityContact BusinessEntityContact_N(this AW.Person.ContactType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_ContactType_ContactTypeID", Reversed = true)]
      public static AW.Person.BusinessEntityContact BusinessEntityContact_N(this AW.Person.ContactType self){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_CountryRegion_CountryRegionCode", Reversed=true)]
      public static AW.Person.StateProvince StateProvince_N(this AW.Person.CountryRegion self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_CountryRegion_CountryRegionCode", Reversed = true)]
      public static AW.Person.StateProvince StateProvince_N(this AW.Person.CountryRegion self){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", Reversed=true)]
      public static AW.Sales.CountryRegionCurrency CountryRegionCurrency_N(this AW.Person.CountryRegion self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode", Reversed = true)]
      public static AW.Sales.CountryRegionCurrency CountryRegionCurrency_N(this AW.Person.CountryRegion self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritory_CountryRegion_CountryRegionCode", Reversed=true)]
      public static AW.Sales.SalesTerritory SalesTerritory_N(this AW.Person.CountryRegion self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritory_CountryRegion_CountryRegionCode", Reversed = true)]
      public static AW.Sales.SalesTerritory SalesTerritory_N(this AW.Person.CountryRegion self){return null;}
      [JoinMethod(RelationshipName="FK_Employee_Person_BusinessEntityID", Reversed=true)]
      public static AW.HumanResources.Employee Employee_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Employee_Person_BusinessEntityID", Reversed = true)]
      public static AW.HumanResources.Employee Employee_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_AW.Person.Person_ID", Reversed=true)]
      public static AW.Person.BusinessEntityContact BusinessEntityContact_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BusinessEntityContact_AW.Person.Person_ID", Reversed = true)]
      public static AW.Person.BusinessEntityContact BusinessEntityContact_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_EmailAddress_Person_BusinessEntityID", Reversed=true)]
      public static AW.Person.EmailAddress EmailAddress_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_EmailAddress_Person_BusinessEntityID", Reversed = true)]
      public static AW.Person.EmailAddress EmailAddress_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_Password_Person_BusinessEntityID", Reversed=true)]
      public static AW.Person.Password Password_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Password_Person_BusinessEntityID", Reversed = true)]
      public static AW.Person.Password Password_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_Person_BusinessEntityID", Reversed=true)]
      public static AW.Person.PersonPhone PersonPhone_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_Person_BusinessEntityID", Reversed = true)]
      public static AW.Person.PersonPhone PersonPhone_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_Customer_AW.Person.Person_ID", Reversed=true)]
      public static AW.Sales.Customer Customer_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Customer_AW.Person.Person_ID", Reversed = true)]
      public static AW.Sales.Customer Customer_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_Person_BusinessEntityID", Reversed=true)]
      public static AW.Sales.PersonCreditCard PersonCreditCard_N(this AW.Person.Person_ self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_Person_BusinessEntityID", Reversed = true)]
      public static AW.Sales.PersonCreditCard PersonCreditCard_N(this AW.Person.Person_ self){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", Reversed=true)]
      public static AW.Person.PersonPhone PersonPhone_N(this AW.Person.PhoneNumberType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", Reversed = true)]
      public static AW.Person.PersonPhone PersonPhone_N(this AW.Person.PhoneNumberType self){return null;}
      [JoinMethod(RelationshipName="FK_Address_StateProvince_StateProvinceID", Reversed=true)]
      public static AW.Person.Address Address_N(this AW.Person.StateProvince self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Address_StateProvince_StateProvinceID", Reversed = true)]
      public static AW.Person.Address Address_N(this AW.Person.StateProvince self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTaxRate_StateProvince_StateProvinceID", Reversed=true)]
      public static AW.Sales.SalesTaxRate SalesTaxRate_N(this AW.Person.StateProvince self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTaxRate_StateProvince_StateProvinceID", Reversed = true)]
      public static AW.Sales.SalesTaxRate SalesTaxRate_N(this AW.Person.StateProvince self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_Culture_CultureID", Reversed=true)]
      public static AW.Production.ProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this AW.Production.Culture self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_Culture_CultureID", Reversed = true)]
      public static AW.Production.ProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this AW.Production.Culture self){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Document_DocumentNode", Reversed=true)]
      public static AW.Production.ProductDocument ProductDocument_N(this AW.Production.Document self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Document_DocumentNode", Reversed = true)]
      public static AW.Production.ProductDocument ProductDocument_N(this AW.Production.Document self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_Illustration_IllustrationID", Reversed=true)]
      public static AW.Production.ProductModelIllustration ProductModelIllustration_N(this AW.Production.Illustration self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_Illustration_IllustrationID", Reversed = true)]
      public static AW.Production.ProductModelIllustration ProductModelIllustration_N(this AW.Production.Illustration self){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Location_LocationID", Reversed=true)]
      public static AW.Production.ProductInventory ProductInventory_N(this AW.Production.Location self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Location_LocationID", Reversed = true)]
      public static AW.Production.ProductInventory ProductInventory_N(this AW.Production.Location self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_Location_LocationID", Reversed=true)]
      public static AW.Production.WorkOrderRouting WorkOrderRouting_N(this AW.Production.Location self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_Location_LocationID", Reversed = true)]
      public static AW.Production.WorkOrderRouting WorkOrderRouting_N(this AW.Production.Location self){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ComponentID", Reversed=true)]
      public static AW.Production.BillOfMaterials BillOfMaterialsComponent_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ComponentID", Reversed = true)]
      public static AW.Production.BillOfMaterials BillOfMaterialsComponent_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ProductAssemblyID", Reversed=true)]
      public static AW.Production.BillOfMaterials BillOfMaterialsProductAssembly_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_Product_ProductAssemblyID", Reversed = true)]
      public static AW.Production.BillOfMaterials BillOfMaterialsProductAssembly_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductCostHistory_Product_ProductID", Reversed=true)]
      public static AW.Production.ProductCostHistory ProductCostHistory_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductCostHistory_Product_ProductID", Reversed = true)]
      public static AW.Production.ProductCostHistory ProductCostHistory_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Product_ProductID", Reversed=true)]
      public static AW.Production.ProductDocument ProductDocument_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductDocument_Product_ProductID", Reversed = true)]
      public static AW.Production.ProductDocument ProductDocument_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Product_ProductID", Reversed=true)]
      public static AW.Production.ProductInventory ProductInventory_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductInventory_Product_ProductID", Reversed = true)]
      public static AW.Production.ProductInventory ProductInventory_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductListPriceHistory_Product_ProductID", Reversed=true)]
      public static AW.Production.ProductListPriceHistory ProductListPriceHistory_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductListPriceHistory_Product_ProductID", Reversed = true)]
      public static AW.Production.ProductListPriceHistory ProductListPriceHistory_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_Product_ProductID", Reversed=true)]
      public static AW.Production.ProductProductPhoto ProductProductPhoto_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_Product_ProductID", Reversed = true)]
      public static AW.Production.ProductProductPhoto ProductProductPhoto_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductReview_Product_ProductID", Reversed=true)]
      public static AW.Production.ProductReview ProductReview_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductReview_Product_ProductID", Reversed = true)]
      public static AW.Production.ProductReview ProductReview_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_TransactionHistory_Product_ProductID", Reversed=true)]
      public static AW.Production.TransactionHistory TransactionHistory_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_TransactionHistory_Product_ProductID", Reversed = true)]
      public static AW.Production.TransactionHistory TransactionHistory_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_Product_ProductID", Reversed=true)]
      public static AW.Production.WorkOrder WorkOrder_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_Product_ProductID", Reversed = true)]
      public static AW.Production.WorkOrder WorkOrder_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Product_ProductID", Reversed=true)]
      public static AW.Purchasing.ProductVendor ProductVendor_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Product_ProductID", Reversed = true)]
      public static AW.Purchasing.ProductVendor ProductVendor_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_Product_ProductID", Reversed=true)]
      public static AW.Purchasing.PurchaseOrderDetail PurchaseOrderDetail_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_Product_ProductID", Reversed = true)]
      public static AW.Purchasing.PurchaseOrderDetail PurchaseOrderDetail_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ShoppingCartItem_Product_ProductID", Reversed=true)]
      public static AW.Sales.ShoppingCartItem ShoppingCartItem_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ShoppingCartItem_Product_ProductID", Reversed = true)]
      public static AW.Sales.ShoppingCartItem ShoppingCartItem_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_Product_ProductID", Reversed=true)]
      public static AW.Sales.SpecialOfferProduct SpecialOfferProduct_N(this AW.Production.Product self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_Product_ProductID", Reversed = true)]
      public static AW.Sales.SpecialOfferProduct SpecialOfferProduct_N(this AW.Production.Product self){return null;}
      [JoinMethod(RelationshipName="FK_ProductSubcategory_ProductCategory_ProductCategoryID", Reversed=true)]
      public static AW.Production.ProductSubcategory ProductSubcategory_N(this AW.Production.ProductCategory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductSubcategory_ProductCategory_ProductCategoryID", Reversed = true)]
      public static AW.Production.ProductSubcategory ProductSubcategory_N(this AW.Production.ProductCategory self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", Reversed=true)]
      public static AW.Production.ProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this AW.Production.ProductDescription self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID", Reversed = true)]
      public static AW.Production.ProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this AW.Production.ProductDescription self){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductModel_ProductModelID", Reversed=true)]
      public static AW.Production.Product Product_N(this AW.Production.ProductModel self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductModel_ProductModelID", Reversed = true)]
      public static AW.Production.Product Product_N(this AW.Production.ProductModel self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_ProductModel_ProductModelID", Reversed=true)]
      public static AW.Production.ProductModelIllustration ProductModelIllustration_N(this AW.Production.ProductModel self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelIllustration_ProductModel_ProductModelID", Reversed = true)]
      public static AW.Production.ProductModelIllustration ProductModelIllustration_N(this AW.Production.ProductModel self){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", Reversed=true)]
      public static AW.Production.ProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this AW.Production.ProductModel self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID", Reversed = true)]
      public static AW.Production.ProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this AW.Production.ProductModel self){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", Reversed=true)]
      public static AW.Production.ProductProductPhoto ProductProductPhoto_N(this AW.Production.ProductPhoto self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID", Reversed = true)]
      public static AW.Production.ProductProductPhoto ProductProductPhoto_N(this AW.Production.ProductPhoto self){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductSubcategory_ProductSubcategoryID", Reversed=true)]
      public static AW.Production.Product Product_N(this AW.Production.ProductSubcategory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_ProductSubcategory_ProductSubcategoryID", Reversed = true)]
      public static AW.Production.Product Product_N(this AW.Production.ProductSubcategory self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_ScrapReason_ScrapReasonID", Reversed=true)]
      public static AW.Production.WorkOrder WorkOrder_N(this AW.Production.ScrapReason self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrder_ScrapReason_ScrapReasonID", Reversed = true)]
      public static AW.Production.WorkOrder WorkOrder_N(this AW.Production.ScrapReason self){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", Reversed=true)]
      public static AW.Production.BillOfMaterials BillOfMaterials_N(this AW.Production.UnitMeasure self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode", Reversed = true)]
      public static AW.Production.BillOfMaterials BillOfMaterials_N(this AW.Production.UnitMeasure self){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_SizeUnitMeasureCode", Reversed=true)]
      public static AW.Production.Product ProductSizeUnitMeasure_N(this AW.Production.UnitMeasure self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_SizeUnitMeasureCode", Reversed = true)]
      public static AW.Production.Product ProductSizeUnitMeasure_N(this AW.Production.UnitMeasure self){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_WeightUnitMeasureCode", Reversed=true)]
      public static AW.Production.Product ProductWeightUnitMeasure_N(this AW.Production.UnitMeasure self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Product_UnitMeasure_WeightUnitMeasureCode", Reversed = true)]
      public static AW.Production.Product ProductWeightUnitMeasure_N(this AW.Production.UnitMeasure self){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_UnitMeasure_UnitMeasureCode", Reversed=true)]
      public static AW.Purchasing.ProductVendor ProductVendor_N(this AW.Production.UnitMeasure self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_UnitMeasure_UnitMeasureCode", Reversed = true)]
      public static AW.Purchasing.ProductVendor ProductVendor_N(this AW.Production.UnitMeasure self){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_WorkOrder_WorkOrderID", Reversed=true)]
      public static AW.Production.WorkOrderRouting WorkOrderRouting_N(this AW.Production.WorkOrder self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_WorkOrderRouting_WorkOrder_WorkOrderID", Reversed = true)]
      public static AW.Production.WorkOrderRouting WorkOrderRouting_N(this AW.Production.WorkOrder self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", Reversed=true)]
      public static AW.Purchasing.PurchaseOrderDetail PurchaseOrderDetail_N(this AW.Purchasing.PurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID", Reversed = true)]
      public static AW.Purchasing.PurchaseOrderDetail PurchaseOrderDetail_N(this AW.Purchasing.PurchaseOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", Reversed=true)]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrderHeader_N(this AW.Purchasing.ShipMethod self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID", Reversed = true)]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrderHeader_N(this AW.Purchasing.ShipMethod self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_ShipMethod_ShipMethodID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Purchasing.ShipMethod self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_ShipMethod_ShipMethodID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Purchasing.ShipMethod self){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Vendor_BusinessEntityID", Reversed=true)]
      public static AW.Purchasing.ProductVendor ProductVendor_N(this AW.Purchasing.Vendor self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_ProductVendor_Vendor_BusinessEntityID", Reversed = true)]
      public static AW.Purchasing.ProductVendor ProductVendor_N(this AW.Purchasing.Vendor self){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Vendor_VendorID", Reversed=true)]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrderHeader_N(this AW.Purchasing.Vendor self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PurchaseOrderHeader_Vendor_VendorID", Reversed = true)]
      public static AW.Purchasing.PurchaseOrderHeader PurchaseOrderHeader_N(this AW.Purchasing.Vendor self){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_CreditCard_CreditCardID", Reversed=true)]
      public static AW.Sales.PersonCreditCard PersonCreditCard_N(this AW.Sales.CreditCard self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_PersonCreditCard_CreditCard_CreditCardID", Reversed = true)]
      public static AW.Sales.PersonCreditCard PersonCreditCard_N(this AW.Sales.CreditCard self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CreditCard_CreditCardID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.CreditCard self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CreditCard_CreditCardID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.CreditCard self){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_Currency_CurrencyCode", Reversed=true)]
      public static AW.Sales.CountryRegionCurrency CountryRegionCurrency_N(this AW.Sales.Currency self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CountryRegionCurrency_Currency_CurrencyCode", Reversed = true)]
      public static AW.Sales.CountryRegionCurrency CountryRegionCurrency_N(this AW.Sales.Currency self){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_FromCurrencyCode", Reversed=true)]
      public static AW.Sales.CurrencyRate CurrencyRateFromCurrency_N(this AW.Sales.Currency self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_FromCurrencyCode", Reversed = true)]
      public static AW.Sales.CurrencyRate CurrencyRateFromCurrency_N(this AW.Sales.Currency self){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_ToCurrencyCode", Reversed=true)]
      public static AW.Sales.CurrencyRate CurrencyRateToCurrency_N(this AW.Sales.Currency self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_CurrencyRate_Currency_ToCurrencyCode", Reversed = true)]
      public static AW.Sales.CurrencyRate CurrencyRateToCurrency_N(this AW.Sales.Currency self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.CurrencyRate self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.CurrencyRate self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Customer_CustomerID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.Customer self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_Customer_CustomerID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.Customer self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", Reversed=true)]
      public static AW.Sales.SalesOrderDetail SalesOrderDetail_N(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID", Reversed = true)]
      public static AW.Sales.SalesOrderDetail SalesOrderDetail_N(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", Reversed=true)]
      public static AW.Sales.SalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this AW.Sales.SalesOrderHeader self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID", Reversed = true)]
      public static AW.Sales.SalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this AW.Sales.SalesOrderHeader self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesPerson_SalesPersonID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.SalesPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesPerson_SalesPersonID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.SalesPerson self){return null;}
      [JoinMethod(RelationshipName="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID", Reversed=true)]
      public static AW.Sales.SalesPersonQuotaHistory SalesPersonQuotaHistory_N(this AW.Sales.SalesPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID", Reversed = true)]
      public static AW.Sales.SalesPersonQuotaHistory SalesPersonQuotaHistory_N(this AW.Sales.SalesPerson self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID", Reversed=true)]
      public static AW.Sales.SalesTerritoryHistory SalesTerritoryHistory_N(this AW.Sales.SalesPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID", Reversed = true)]
      public static AW.Sales.SalesTerritoryHistory SalesTerritoryHistory_N(this AW.Sales.SalesPerson self){return null;}
      [JoinMethod(RelationshipName="FK_Store_SalesPerson_SalesPersonID", Reversed=true)]
      public static AW.Sales.Store Store_N(this AW.Sales.SalesPerson self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Store_SalesPerson_SalesPersonID", Reversed = true)]
      public static AW.Sales.Store Store_N(this AW.Sales.SalesPerson self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", Reversed=true)]
      public static AW.Sales.SalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this AW.Sales.SalesReason self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID", Reversed = true)]
      public static AW.Sales.SalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this AW.Sales.SalesReason self){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_SalesTerritory_TerritoryID", Reversed=true)]
      public static AW.Person.StateProvince StateProvince_N(this AW.Sales.SalesTerritory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_StateProvince_SalesTerritory_TerritoryID", Reversed = true)]
      public static AW.Person.StateProvince StateProvince_N(this AW.Sales.SalesTerritory self){return null;}
      [JoinMethod(RelationshipName="FK_Customer_SalesTerritory_TerritoryID", Reversed=true)]
      public static AW.Sales.Customer Customer_N(this AW.Sales.SalesTerritory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Customer_SalesTerritory_TerritoryID", Reversed = true)]
      public static AW.Sales.Customer Customer_N(this AW.Sales.SalesTerritory self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesTerritory_TerritoryID", Reversed=true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.SalesTerritory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderHeader_SalesTerritory_TerritoryID", Reversed = true)]
      public static AW.Sales.SalesOrderHeader SalesOrderHeader_N(this AW.Sales.SalesTerritory self){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_SalesTerritory_TerritoryID", Reversed=true)]
      public static AW.Sales.SalesPerson SalesPerson_N(this AW.Sales.SalesTerritory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesPerson_SalesTerritory_TerritoryID", Reversed = true)]
      public static AW.Sales.SalesPerson SalesPerson_N(this AW.Sales.SalesTerritory self){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", Reversed=true)]
      public static AW.Sales.SalesTerritoryHistory SalesTerritoryHistory_N(this AW.Sales.SalesTerritory self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID", Reversed = true)]
      public static AW.Sales.SalesTerritoryHistory SalesTerritoryHistory_N(this AW.Sales.SalesTerritory self){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", Reversed=true)]
      public static AW.Sales.SpecialOfferProduct SpecialOfferProduct_N(this AW.Sales.SpecialOffer self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID", Reversed = true)]
      public static AW.Sales.SpecialOfferProduct SpecialOfferProduct_N(this AW.Sales.SpecialOffer self){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", Reversed=true)]
      public static AW.Sales.SalesOrderDetail SalesOrderDetailProductSpecialOffer_N(this AW.Sales.SpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID", Reversed = true)]
      public static AW.Sales.SalesOrderDetail SalesOrderDetailProductSpecialOffer_N(this AW.Sales.SpecialOfferProduct self){return null;}
      [JoinMethod(RelationshipName="FK_Customer_Store_StoreID", Reversed=true)]
      public static AW.Sales.Customer Customer_N(this AW.Sales.Store self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_Customer_Store_StoreID", Reversed = true)]
      public static AW.Sales.Customer Customer_N(this AW.Sales.Store self){return null;}
   }
}


