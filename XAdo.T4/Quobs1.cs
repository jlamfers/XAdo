
//------------------------------------------------------------------------------
// <auto-generated timestamp="2016-11-07T20:13:06.5008185Z">
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.SqlServer.Types;
using XAdo.Quobs.Core.DbSchema.Attributes;

namespace DbSchema.AdventureWorks
{
   public abstract partial class DbBaseTable {}
   
   [Table("AWBuildVersion", Schema="dbo")]
   public partial class DbAWBuildVersion : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Byte? SystemInformationID {get; set;}
      [Required, MaxLength(25), Column("Database Version")]
      public virtual String Database_Version {get; set;}
      [Required]
      public virtual DateTime? VersionDate {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("DatabaseLog", Schema="dbo")]
   public partial class DbDatabaseLog : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? DatabaseLogID {get; set;}
      [Required]
      public virtual DateTime? PostTime {get; set;}
      [Required, MaxLength(128)]
      public virtual String DatabaseUser {get; set;}
      [Required, MaxLength(128)]
      public virtual String Event {get; set;}
      [MaxLength(128)]
      public virtual String Schema {get; set;}
      [MaxLength(128)]
      public virtual String Object {get; set;}
      [Required]
      public virtual String TSQL {get; set;}
      [Required]
      public virtual String XmlEvent {get; set;}
   }
   [Table("ErrorLog", Schema="dbo")]
   public partial class DbErrorLog : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ErrorLogID {get; set;}
      [Required]
      public virtual DateTime? ErrorTime {get; set;}
      [Required, MaxLength(128)]
      public virtual String UserName {get; set;}
      [Required]
      public virtual Int32? ErrorNumber {get; set;}
      public virtual Int32? ErrorSeverity {get; set;}
      public virtual Int32? ErrorState {get; set;}
      [MaxLength(126)]
      public virtual String ErrorProcedure {get; set;}
      public virtual Int32? ErrorLine {get; set;}
      [Required, MaxLength(4000)]
      public virtual String ErrorMessage {get; set;}
   }
   [Table("sysdiagrams", Schema="dbo")]
   public partial class Dbsysdiagrams : DbBaseTable
   {
      [Required, MaxLength(128)]
      public virtual String name {get; set;}
      [Required]
      public virtual Int32? principal_id {get; set;}
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? diagram_id {get; set;}
      public virtual Int32? version {get; set;}
      public virtual Byte[] definition {get; set;}
   }
   [Table("Table_1", Schema="dbo")]
   public partial class DbTable_1 : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? Id {get; set;}
      [Required, MaxLength(30)]
      public virtual String Name {get; set;}
   }
   [Table("Department", Schema="HumanResources")]
   [ReferencedBy(new []{typeof(DbEmployeeDepartmentHistory)})]
   public partial class DbDepartment : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int16? DepartmentID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String GroupName {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Employee", Schema="HumanResources")]
   [ReferencedBy(new []{typeof(DbEmployeeDepartmentHistory), typeof(DbEmployeePayHistory), typeof(DbJobCandidate), typeof(DbDocument), typeof(DbPurchaseOrderHeader), typeof(DbSalesPerson)})]
   public partial class DbEmployee : DbBaseTable
   {
      [Key, DbUnique, Required]
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Employee_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(15)]
      public virtual String NationalIDNumber {get; set;}
      [Required, MaxLength(256)]
      public virtual String LoginID {get; set;}
      public virtual SqlHierarchyId? OrganizationNode {get; set;}
      public virtual Int16? OrganizationLevel {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [Required]
      public virtual DateTime? BirthDate {get; set;}
      [Required, MaxLength(1)]
      public virtual String MaritalStatus {get; set;}
      [Required, MaxLength(1)]
      public virtual String Gender {get; set;}
      [Required]
      public virtual DateTime? HireDate {get; set;}
      [Required]
      public virtual Boolean? SalariedFlag {get; set;}
      [Required]
      public virtual Int16? VacationHours {get; set;}
      [Required]
      public virtual Int16? SickLeaveHours {get; set;}
      [Required]
      public virtual Boolean? CurrentFlag {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("EmployeeDepartmentHistory", Schema="HumanResources")]
   public partial class DbEmployeeDepartmentHistory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbEmployee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbDepartment), MemberName="DepartmentID", ColumnName="DepartmentID", FKeyName="FK_EmployeeDepartmentHistory_Department_DepartmentID")]
      public virtual Int16? DepartmentID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbShift), MemberName="ShiftID", ColumnName="ShiftID", FKeyName="FK_EmployeeDepartmentHistory_Shift_ShiftID")]
      public virtual Byte? ShiftID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("EmployeePayHistory", Schema="HumanResources")]
   public partial class DbEmployeePayHistory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbEmployee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_EmployeePayHistory_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      public virtual DateTime? RateChangeDate {get; set;}
      [Required]
      public virtual Decimal? Rate {get; set;}
      [Required]
      public virtual Byte? PayFrequency {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("JobCandidate", Schema="HumanResources")]
   public partial class DbJobCandidate : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      [References( Type=typeof(DbEmployee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_JobCandidate_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      public virtual String Resume {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Shift", Schema="HumanResources")]
   [ReferencedBy(new []{typeof(DbEmployeeDepartmentHistory)})]
   public partial class DbShift : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Byte? ShiftID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual TimeSpan? StartTime {get; set;}
      [Required]
      public virtual TimeSpan? EndTime {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Address", Schema="Person")]
   [ReferencedBy(new []{typeof(DbBusinessEntityAddress), typeof(DbSalesOrderHeader)})]
   public partial class DbAddress : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? AddressID {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required]
      [References( Type=typeof(DbStateProvince), MemberName="StateProvinceID", ColumnName="StateProvinceID", FKeyName="FK_Address_StateProvince_StateProvinceID")]
      public virtual Int32? StateProvinceID {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      public virtual SqlGeography SpatialLocation {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("AddressType", Schema="Person")]
   [ReferencedBy(new []{typeof(DbBusinessEntityAddress)})]
   public partial class DbAddressType : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? AddressTypeID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("BusinessEntity", Schema="Person")]
   [ReferencedBy(new []{typeof(DbBusinessEntityAddress), typeof(DbBusinessEntityContact), typeof(DbPerson), typeof(DbVendor), typeof(DbStore)})]
   public partial class DbBusinessEntity : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("BusinessEntityAddress", Schema="Person")]
   public partial class DbBusinessEntityAddress : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbBusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbAddress), MemberName="AddressID", ColumnName="AddressID", FKeyName="FK_BusinessEntityAddress_Address_AddressID")]
      public virtual Int32? AddressID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbAddressType), MemberName="AddressTypeID", ColumnName="AddressTypeID", FKeyName="FK_BusinessEntityAddress_AddressType_AddressTypeID")]
      public virtual Int32? AddressTypeID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("BusinessEntityContact", Schema="Person")]
   public partial class DbBusinessEntityContact : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbBusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_BusinessEntityContact_Person_PersonID")]
      public virtual Int32? PersonID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbContactType), MemberName="ContactTypeID", ColumnName="ContactTypeID", FKeyName="FK_BusinessEntityContact_ContactType_ContactTypeID")]
      public virtual Int32? ContactTypeID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ContactType", Schema="Person")]
   [ReferencedBy(new []{typeof(DbBusinessEntityContact)})]
   public partial class DbContactType : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ContactTypeID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("CountryRegion", Schema="Person")]
   [ReferencedBy(new []{typeof(DbStateProvince), typeof(DbCountryRegionCurrency), typeof(DbSalesTerritory)})]
   public partial class DbCountryRegion : DbBaseTable
   {
      [Key, DbUnique, Required, MaxLength(3)]
      public virtual String CountryRegionCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("EmailAddress", Schema="Person")]
   public partial class DbEmailAddress : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_EmailAddress_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, DbAutoIncrement, Required]
      public virtual Int32? EmailAddressID {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Password", Schema="Person")]
   public partial class DbPassword : DbBaseTable
   {
      [Key, DbUnique, Required]
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Password_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(128)]
      public virtual String PasswordHash {get; set;}
      [Required, MaxLength(10)]
      public virtual String PasswordSalt {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Person", Schema="Person")]
   [ReferencedBy(new []{typeof(DbEmployee), typeof(DbBusinessEntityContact), typeof(DbEmailAddress), typeof(DbPassword), typeof(DbPersonPhone), typeof(DbCustomer), typeof(DbPersonCreditCard)})]
   public partial class DbPerson : DbBaseTable
   {
      [Key, DbUnique, Required]
      [References( Type=typeof(DbBusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Person_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(2)]
      public virtual String PersonType {get; set;}
      [Required]
      public virtual Boolean? NameStyle {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      public virtual String AdditionalContactInfo {get; set;}
      public virtual String Demographics {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("PersonPhone", Schema="Person")]
   public partial class DbPersonPhone : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PersonPhone_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required, MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [Key, Required]
      [References( Type=typeof(DbPhoneNumberType), MemberName="PhoneNumberTypeID", ColumnName="PhoneNumberTypeID", FKeyName="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID")]
      public virtual Int32? PhoneNumberTypeID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("PhoneNumberType", Schema="Person")]
   [ReferencedBy(new []{typeof(DbPersonPhone)})]
   public partial class DbPhoneNumberType : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? PhoneNumberTypeID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("StateProvince", Schema="Person")]
   [ReferencedBy(new []{typeof(DbAddress), typeof(DbSalesTaxRate)})]
   public partial class DbStateProvince : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? StateProvinceID {get; set;}
      [Required, MaxLength(3)]
      public virtual String StateProvinceCode {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCountryRegion), MemberName="CountryRegionCode", ColumnName="CountryRegionCode", FKeyName="FK_StateProvince_CountryRegion_CountryRegionCode")]
      public virtual String CountryRegionCode {get; set;}
      [Required]
      public virtual Boolean? IsOnlyStateProvinceFlag {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      [References( Type=typeof(DbSalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_StateProvince_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("BillOfMaterials", Schema="Production")]
   public partial class DbBillOfMaterials : DbBaseTable
   {
      [Key, DbAutoIncrement, Required]
      public virtual Int32? BillOfMaterialsID {get; set;}
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_BillOfMaterials_Product_ProductAssemblyID")]
      public virtual Int32? ProductAssemblyID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_BillOfMaterials_Product_ComponentID")]
      public virtual Int32? ComponentID {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode")]
      public virtual String UnitMeasureCode {get; set;}
      [Required]
      public virtual Int16? BOMLevel {get; set;}
      [Required]
      public virtual Decimal? PerAssemblyQty {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Culture", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductModelProductDescriptionCulture)})]
   public partial class DbCulture : DbBaseTable
   {
      [Key, DbUnique, Required, MaxLength(6)]
      public virtual String CultureID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Document", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductDocument)})]
   public partial class DbDocument : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual SqlHierarchyId? DocumentNode {get; set;}
      public virtual Int16? DocumentLevel {get; set;}
      [Required, MaxLength(50)]
      public virtual String Title {get; set;}
      [Required]
      [References( Type=typeof(DbEmployee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Document_Employee_Owner")]
      public virtual Int32? Owner {get; set;}
      [Required]
      public virtual Boolean? FolderFlag {get; set;}
      [Required, MaxLength(400)]
      public virtual String FileName {get; set;}
      [Required, MaxLength(8)]
      public virtual String FileExtension {get; set;}
      [Required, MaxLength(5)]
      public virtual String Revision {get; set;}
      [Required]
      public virtual Int32? ChangeNumber {get; set;}
      [Required]
      public virtual Byte? Status {get; set;}
      public virtual String DocumentSummary {get; set;}
      public virtual Byte[] Document {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Illustration", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductModelIllustration)})]
   public partial class DbIllustration : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? IllustrationID {get; set;}
      public virtual String Diagram {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Location", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductInventory), typeof(DbWorkOrderRouting)})]
   public partial class DbLocation : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int16? LocationID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Decimal? CostRate {get; set;}
      [Required]
      public virtual Decimal? Availability {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Product", Schema="Production")]
   [ReferencedBy(new []{typeof(DbBillOfMaterials), typeof(DbProductCostHistory), typeof(DbProductDocument), typeof(DbProductInventory), typeof(DbProductListPriceHistory), typeof(DbProductProductPhoto), typeof(DbProductReview), typeof(DbTransactionHistory), typeof(DbWorkOrder), typeof(DbProductVendor), typeof(DbPurchaseOrderDetail), typeof(DbShoppingCartItem), typeof(DbSpecialOfferProduct)})]
   public partial class DbProduct : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(25)]
      public virtual String ProductNumber {get; set;}
      [Required]
      public virtual Boolean? MakeFlag {get; set;}
      [Required]
      public virtual Boolean? FinishedGoodsFlag {get; set;}
      [MaxLength(15)]
      public virtual String Color {get; set;}
      [Required]
      public virtual Int16? SafetyStockLevel {get; set;}
      [Required]
      public virtual Int16? ReorderPoint {get; set;}
      [Required]
      public virtual Decimal? StandardCost {get; set;}
      [Required]
      public virtual Decimal? ListPrice {get; set;}
      [MaxLength(5)]
      public virtual String Size {get; set;}
      [MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_Product_UnitMeasure_SizeUnitMeasureCode")]
      public virtual String SizeUnitMeasureCode {get; set;}
      [MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_Product_UnitMeasure_WeightUnitMeasureCode")]
      public virtual String WeightUnitMeasureCode {get; set;}
      public virtual Decimal? Weight {get; set;}
      [Required]
      public virtual Int32? DaysToManufacture {get; set;}
      [MaxLength(2)]
      public virtual String ProductLine {get; set;}
      [MaxLength(2)]
      public virtual String Class {get; set;}
      [MaxLength(2)]
      public virtual String Style {get; set;}
      [References( Type=typeof(DbProductSubcategory), MemberName="ProductSubcategoryID", ColumnName="ProductSubcategoryID", FKeyName="FK_Product_ProductSubcategory_ProductSubcategoryID")]
      public virtual Int32? ProductSubcategoryID {get; set;}
      [References( Type=typeof(DbProductModel), MemberName="ProductModelID", ColumnName="ProductModelID", FKeyName="FK_Product_ProductModel_ProductModelID")]
      public virtual Int32? ProductModelID {get; set;}
      [Required]
      public virtual DateTime? SellStartDate {get; set;}
      public virtual DateTime? SellEndDate {get; set;}
      public virtual DateTime? DiscontinuedDate {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductCategory", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductSubcategory)})]
   public partial class DbProductCategory : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductCategoryID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductCostHistory", Schema="Production")]
   public partial class DbProductCostHistory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductCostHistory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Decimal? StandardCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductDescription", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductModelProductDescriptionCulture)})]
   public partial class DbProductDescription : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductDescriptionID {get; set;}
      [Required, MaxLength(400)]
      public virtual String Description {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductDocument", Schema="Production")]
   public partial class DbProductDocument : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductDocument_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbDocument), MemberName="DocumentNode", ColumnName="DocumentNode", FKeyName="FK_ProductDocument_Document_DocumentNode")]
      public virtual SqlHierarchyId? DocumentNode {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductInventory", Schema="Production")]
   public partial class DbProductInventory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductInventory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbLocation), MemberName="LocationID", ColumnName="LocationID", FKeyName="FK_ProductInventory_Location_LocationID")]
      public virtual Int16? LocationID {get; set;}
      [Required, MaxLength(10)]
      public virtual String Shelf {get; set;}
      [Required]
      public virtual Byte? Bin {get; set;}
      [Required]
      public virtual Int16? Quantity {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductListPriceHistory", Schema="Production")]
   public partial class DbProductListPriceHistory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductListPriceHistory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Decimal? ListPrice {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductModel", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProduct), typeof(DbProductModelIllustration), typeof(DbProductModelProductDescriptionCulture)})]
   public partial class DbProductModel : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductModelID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual String CatalogDescription {get; set;}
      public virtual String Instructions {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductModelIllustration", Schema="Production")]
   public partial class DbProductModelIllustration : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProductModel), MemberName="ProductModelID", ColumnName="ProductModelID", FKeyName="FK_ProductModelIllustration_ProductModel_ProductModelID")]
      public virtual Int32? ProductModelID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbIllustration), MemberName="IllustrationID", ColumnName="IllustrationID", FKeyName="FK_ProductModelIllustration_Illustration_IllustrationID")]
      public virtual Int32? IllustrationID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductModelProductDescriptionCulture", Schema="Production")]
   public partial class DbProductModelProductDescriptionCulture : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProductModel), MemberName="ProductModelID", ColumnName="ProductModelID", FKeyName="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID")]
      public virtual Int32? ProductModelID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbProductDescription), MemberName="ProductDescriptionID", ColumnName="ProductDescriptionID", FKeyName="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID")]
      public virtual Int32? ProductDescriptionID {get; set;}
      [Key, Required, MaxLength(6)]
      [References( Type=typeof(DbCulture), MemberName="CultureID", ColumnName="CultureID", FKeyName="FK_ProductModelProductDescriptionCulture_Culture_CultureID")]
      public virtual String CultureID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductPhoto", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProductProductPhoto)})]
   public partial class DbProductPhoto : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductPhotoID {get; set;}
      public virtual Byte[] ThumbNailPhoto {get; set;}
      [MaxLength(50)]
      public virtual String ThumbnailPhotoFileName {get; set;}
      public virtual Byte[] LargePhoto {get; set;}
      [MaxLength(50)]
      public virtual String LargePhotoFileName {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductProductPhoto", Schema="Production")]
   public partial class DbProductProductPhoto : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductProductPhoto_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbProductPhoto), MemberName="ProductPhotoID", ColumnName="ProductPhotoID", FKeyName="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID")]
      public virtual Int32? ProductPhotoID {get; set;}
      [Required]
      public virtual Boolean? Primary {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductReview", Schema="Production")]
   public partial class DbProductReview : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductReviewID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductReview_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required, MaxLength(50)]
      public virtual String ReviewerName {get; set;}
      [Required]
      public virtual DateTime? ReviewDate {get; set;}
      [Required, MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? Rating {get; set;}
      [MaxLength(3850)]
      public virtual String Comments {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductSubcategory", Schema="Production")]
   [ReferencedBy(new []{typeof(DbProduct)})]
   public partial class DbProductSubcategory : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductSubcategoryID {get; set;}
      [Required]
      [References( Type=typeof(DbProductCategory), MemberName="ProductCategoryID", ColumnName="ProductCategoryID", FKeyName="FK_ProductSubcategory_ProductCategory_ProductCategoryID")]
      public virtual Int32? ProductCategoryID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ScrapReason", Schema="Production")]
   [ReferencedBy(new []{typeof(DbWorkOrder)})]
   public partial class DbScrapReason : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int16? ScrapReasonID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("TransactionHistory", Schema="Production")]
   public partial class DbTransactionHistory : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? TransactionID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_TransactionHistory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderLineID {get; set;}
      [Required]
      public virtual DateTime? TransactionDate {get; set;}
      [Required, MaxLength(1)]
      public virtual String TransactionType {get; set;}
      [Required]
      public virtual Int32? Quantity {get; set;}
      [Required]
      public virtual Decimal? ActualCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("TransactionHistoryArchive", Schema="Production")]
   public partial class DbTransactionHistoryArchive : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? TransactionID {get; set;}
      [Required]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderLineID {get; set;}
      [Required]
      public virtual DateTime? TransactionDate {get; set;}
      [Required, MaxLength(1)]
      public virtual String TransactionType {get; set;}
      [Required]
      public virtual Int32? Quantity {get; set;}
      [Required]
      public virtual Decimal? ActualCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("UnitMeasure", Schema="Production")]
   [ReferencedBy(new []{typeof(DbBillOfMaterials), typeof(DbProduct), typeof(DbProductVendor)})]
   public partial class DbUnitMeasure : DbBaseTable
   {
      [Key, DbUnique, Required, MaxLength(3)]
      public virtual String UnitMeasureCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("WorkOrder", Schema="Production")]
   [ReferencedBy(new []{typeof(DbWorkOrderRouting)})]
   public partial class DbWorkOrder : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? WorkOrderID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_WorkOrder_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Int32? OrderQty {get; set;}
      public virtual Int32? StockedQty {get; set;}
      [Required]
      public virtual Int16? ScrappedQty {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual DateTime? DueDate {get; set;}
      [References( Type=typeof(DbScrapReason), MemberName="ScrapReasonID", ColumnName="ScrapReasonID", FKeyName="FK_WorkOrder_ScrapReason_ScrapReasonID")]
      public virtual Int16? ScrapReasonID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("WorkOrderRouting", Schema="Production")]
   public partial class DbWorkOrderRouting : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbWorkOrder), MemberName="WorkOrderID", ColumnName="WorkOrderID", FKeyName="FK_WorkOrderRouting_WorkOrder_WorkOrderID")]
      public virtual Int32? WorkOrderID {get; set;}
      [Key, Required]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      public virtual Int16? OperationSequence {get; set;}
      [Required]
      [References( Type=typeof(DbLocation), MemberName="LocationID", ColumnName="LocationID", FKeyName="FK_WorkOrderRouting_Location_LocationID")]
      public virtual Int16? LocationID {get; set;}
      [Required]
      public virtual DateTime? ScheduledStartDate {get; set;}
      [Required]
      public virtual DateTime? ScheduledEndDate {get; set;}
      public virtual DateTime? ActualStartDate {get; set;}
      public virtual DateTime? ActualEndDate {get; set;}
      public virtual Decimal? ActualResourceHrs {get; set;}
      [Required]
      public virtual Decimal? PlannedCost {get; set;}
      public virtual Decimal? ActualCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ProductVendor", Schema="Purchasing")]
   public partial class DbProductVendor : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ProductVendor_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbVendor), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_ProductVendor_Vendor_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required]
      public virtual Int32? AverageLeadTime {get; set;}
      [Required]
      public virtual Decimal? StandardPrice {get; set;}
      public virtual Decimal? LastReceiptCost {get; set;}
      public virtual DateTime? LastReceiptDate {get; set;}
      [Required]
      public virtual Int32? MinOrderQty {get; set;}
      [Required]
      public virtual Int32? MaxOrderQty {get; set;}
      public virtual Int32? OnOrderQty {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), MemberName="UnitMeasureCode", ColumnName="UnitMeasureCode", FKeyName="FK_ProductVendor_UnitMeasure_UnitMeasureCode")]
      public virtual String UnitMeasureCode {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("PurchaseOrderDetail", Schema="Purchasing")]
   public partial class DbPurchaseOrderDetail : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbPurchaseOrderHeader), MemberName="PurchaseOrderID", ColumnName="PurchaseOrderID", FKeyName="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID")]
      public virtual Int32? PurchaseOrderID {get; set;}
      [Key, DbAutoIncrement, Required]
      public virtual Int32? PurchaseOrderDetailID {get; set;}
      [Required]
      public virtual DateTime? DueDate {get; set;}
      [Required]
      public virtual Int16? OrderQty {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_PurchaseOrderDetail_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Decimal? UnitPrice {get; set;}
      public virtual Decimal? LineTotal {get; set;}
      [Required]
      public virtual Decimal? ReceivedQty {get; set;}
      [Required]
      public virtual Decimal? RejectedQty {get; set;}
      public virtual Decimal? StockedQty {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("PurchaseOrderHeader", Schema="Purchasing")]
   [ReferencedBy(new []{typeof(DbPurchaseOrderDetail)})]
   public partial class DbPurchaseOrderHeader : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? PurchaseOrderID {get; set;}
      [Required]
      public virtual Byte? RevisionNumber {get; set;}
      [Required]
      public virtual Byte? Status {get; set;}
      [Required]
      [References( Type=typeof(DbEmployee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PurchaseOrderHeader_Employee_EmployeeID")]
      public virtual Int32? EmployeeID {get; set;}
      [Required]
      [References( Type=typeof(DbVendor), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PurchaseOrderHeader_Vendor_VendorID")]
      public virtual Int32? VendorID {get; set;}
      [Required]
      [References( Type=typeof(DbShipMethod), MemberName="ShipMethodID", ColumnName="ShipMethodID", FKeyName="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID")]
      public virtual Int32? ShipMethodID {get; set;}
      [Required]
      public virtual DateTime? OrderDate {get; set;}
      public virtual DateTime? ShipDate {get; set;}
      [Required]
      public virtual Decimal? SubTotal {get; set;}
      [Required]
      public virtual Decimal? TaxAmt {get; set;}
      [Required]
      public virtual Decimal? Freight {get; set;}
      public virtual Decimal? TotalDue {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ShipMethod", Schema="Purchasing")]
   [ReferencedBy(new []{typeof(DbPurchaseOrderHeader), typeof(DbSalesOrderHeader)})]
   public partial class DbShipMethod : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ShipMethodID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Decimal? ShipBase {get; set;}
      [Required]
      public virtual Decimal? ShipRate {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Vendor", Schema="Purchasing")]
   [ReferencedBy(new []{typeof(DbProductVendor), typeof(DbPurchaseOrderHeader)})]
   public partial class DbVendor : DbBaseTable
   {
      [Key, DbUnique, Required]
      [References( Type=typeof(DbBusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Vendor_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(15)]
      public virtual String AccountNumber {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Byte? CreditRating {get; set;}
      [Required]
      public virtual Boolean? PreferredVendorStatus {get; set;}
      [Required]
      public virtual Boolean? ActiveFlag {get; set;}
      [MaxLength(1024)]
      public virtual String PurchasingWebServiceURL {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("CountryRegionCurrency", Schema="Sales")]
   public partial class DbCountryRegionCurrency : DbBaseTable
   {
      [Key, Required, MaxLength(3)]
      [References( Type=typeof(DbCountryRegion), MemberName="CountryRegionCode", ColumnName="CountryRegionCode", FKeyName="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode")]
      public virtual String CountryRegionCode {get; set;}
      [Key, Required, MaxLength(3)]
      [References( Type=typeof(DbCurrency), MemberName="CurrencyCode", ColumnName="CurrencyCode", FKeyName="FK_CountryRegionCurrency_Currency_CurrencyCode")]
      public virtual String CurrencyCode {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("CreditCard", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbPersonCreditCard), typeof(DbSalesOrderHeader)})]
   public partial class DbCreditCard : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? CreditCardID {get; set;}
      [Required, MaxLength(50)]
      public virtual String CardType {get; set;}
      [Required, MaxLength(25)]
      public virtual String CardNumber {get; set;}
      [Required]
      public virtual Byte? ExpMonth {get; set;}
      [Required]
      public virtual Int16? ExpYear {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Currency", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbCountryRegionCurrency), typeof(DbCurrencyRate)})]
   public partial class DbCurrency : DbBaseTable
   {
      [Key, DbUnique, Required, MaxLength(3)]
      public virtual String CurrencyCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("CurrencyRate", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeader)})]
   public partial class DbCurrencyRate : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? CurrencyRateID {get; set;}
      [Required]
      public virtual DateTime? CurrencyRateDate {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCurrency), MemberName="CurrencyCode", ColumnName="CurrencyCode", FKeyName="FK_CurrencyRate_Currency_FromCurrencyCode")]
      public virtual String FromCurrencyCode {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCurrency), MemberName="CurrencyCode", ColumnName="CurrencyCode", FKeyName="FK_CurrencyRate_Currency_ToCurrencyCode")]
      public virtual String ToCurrencyCode {get; set;}
      [Required]
      public virtual Decimal? AverageRate {get; set;}
      [Required]
      public virtual Decimal? EndOfDayRate {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Customer", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeader)})]
   public partial class DbCustomer : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? CustomerID {get; set;}
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Customer_Person_PersonID")]
      public virtual Int32? PersonID {get; set;}
      [References( Type=typeof(DbStore), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Customer_Store_StoreID")]
      public virtual Int32? StoreID {get; set;}
      [References( Type=typeof(DbSalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_Customer_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [MaxLength(10)]
      public virtual String AccountNumber {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("PersonCreditCard", Schema="Sales")]
   public partial class DbPersonCreditCard : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_PersonCreditCard_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbCreditCard), MemberName="CreditCardID", ColumnName="CreditCardID", FKeyName="FK_PersonCreditCard_CreditCard_CreditCardID")]
      public virtual Int32? CreditCardID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesOrderDetail", Schema="Sales")]
   public partial class DbSalesOrderDetail : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbSalesOrderHeader), MemberName="SalesOrderID", ColumnName="SalesOrderID", FKeyName="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID")]
      public virtual Int32? SalesOrderID {get; set;}
      [Key, DbAutoIncrement, Required]
      public virtual Int32? SalesOrderDetailID {get; set;}
      [MaxLength(25)]
      public virtual String CarrierTrackingNumber {get; set;}
      [Required]
      public virtual Int16? OrderQty {get; set;}
      [Required]
      [References( Type=typeof(DbSpecialOfferProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      [References( Type=typeof(DbSpecialOfferProduct), MemberName="SpecialOfferID", ColumnName="SpecialOfferID", FKeyName="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
      public virtual Int32? SpecialOfferID {get; set;}
      [Required]
      public virtual Decimal? UnitPrice {get; set;}
      [Required]
      public virtual Decimal? UnitPriceDiscount {get; set;}
      public virtual Decimal? LineTotal {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesOrderHeader", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSalesOrderDetail), typeof(DbSalesOrderHeaderSalesReason)})]
   public partial class DbSalesOrderHeader : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? SalesOrderID {get; set;}
      [Required]
      public virtual Byte? RevisionNumber {get; set;}
      [Required]
      public virtual DateTime? OrderDate {get; set;}
      [Required]
      public virtual DateTime? DueDate {get; set;}
      public virtual DateTime? ShipDate {get; set;}
      [Required]
      public virtual Byte? Status {get; set;}
      [Required]
      public virtual Boolean? OnlineOrderFlag {get; set;}
      [MaxLength(25)]
      public virtual String SalesOrderNumber {get; set;}
      [MaxLength(25)]
      public virtual String PurchaseOrderNumber {get; set;}
      [MaxLength(15)]
      public virtual String AccountNumber {get; set;}
      [Required]
      [References( Type=typeof(DbCustomer), MemberName="CustomerID", ColumnName="CustomerID", FKeyName="FK_SalesOrderHeader_Customer_CustomerID")]
      public virtual Int32? CustomerID {get; set;}
      [References( Type=typeof(DbSalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesOrderHeader_SalesPerson_SalesPersonID")]
      public virtual Int32? SalesPersonID {get; set;}
      [References( Type=typeof(DbSalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_SalesOrderHeader_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [Required]
      [References( Type=typeof(DbAddress), MemberName="AddressID", ColumnName="AddressID", FKeyName="FK_SalesOrderHeader_Address_BillToAddressID")]
      public virtual Int32? BillToAddressID {get; set;}
      [Required]
      [References( Type=typeof(DbAddress), MemberName="AddressID", ColumnName="AddressID", FKeyName="FK_SalesOrderHeader_Address_ShipToAddressID")]
      public virtual Int32? ShipToAddressID {get; set;}
      [Required]
      [References( Type=typeof(DbShipMethod), MemberName="ShipMethodID", ColumnName="ShipMethodID", FKeyName="FK_SalesOrderHeader_ShipMethod_ShipMethodID")]
      public virtual Int32? ShipMethodID {get; set;}
      [References( Type=typeof(DbCreditCard), MemberName="CreditCardID", ColumnName="CreditCardID", FKeyName="FK_SalesOrderHeader_CreditCard_CreditCardID")]
      public virtual Int32? CreditCardID {get; set;}
      [MaxLength(15)]
      public virtual String CreditCardApprovalCode {get; set;}
      [References( Type=typeof(DbCurrencyRate), MemberName="CurrencyRateID", ColumnName="CurrencyRateID", FKeyName="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID")]
      public virtual Int32? CurrencyRateID {get; set;}
      [Required]
      public virtual Decimal? SubTotal {get; set;}
      [Required]
      public virtual Decimal? TaxAmt {get; set;}
      [Required]
      public virtual Decimal? Freight {get; set;}
      public virtual Decimal? TotalDue {get; set;}
      [MaxLength(128)]
      public virtual String Comment {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesOrderHeaderSalesReason", Schema="Sales")]
   public partial class DbSalesOrderHeaderSalesReason : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbSalesOrderHeader), MemberName="SalesOrderID", ColumnName="SalesOrderID", FKeyName="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID")]
      public virtual Int32? SalesOrderID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbSalesReason), MemberName="SalesReasonID", ColumnName="SalesReasonID", FKeyName="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID")]
      public virtual Int32? SalesReasonID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesPerson", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeader), typeof(DbSalesPersonQuotaHistory), typeof(DbSalesTerritoryHistory), typeof(DbStore)})]
   public partial class DbSalesPerson : DbBaseTable
   {
      [Key, DbUnique, Required]
      [References( Type=typeof(DbEmployee), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesPerson_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [References( Type=typeof(DbSalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_SalesPerson_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      public virtual Decimal? SalesQuota {get; set;}
      [Required]
      public virtual Decimal? Bonus {get; set;}
      [Required]
      public virtual Decimal? CommissionPct {get; set;}
      [Required]
      public virtual Decimal? SalesYTD {get; set;}
      [Required]
      public virtual Decimal? SalesLastYear {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesPersonQuotaHistory", Schema="Sales")]
   public partial class DbSalesPersonQuotaHistory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbSalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      public virtual DateTime? QuotaDate {get; set;}
      [Required]
      public virtual Decimal? SalesQuota {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesReason", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeaderSalesReason)})]
   public partial class DbSalesReason : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? SalesReasonID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ReasonType {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesTaxRate", Schema="Sales")]
   public partial class DbSalesTaxRate : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? SalesTaxRateID {get; set;}
      [Required]
      [References( Type=typeof(DbStateProvince), MemberName="StateProvinceID", ColumnName="StateProvinceID", FKeyName="FK_SalesTaxRate_StateProvince_StateProvinceID")]
      public virtual Int32? StateProvinceID {get; set;}
      [Required]
      public virtual Byte? TaxType {get; set;}
      [Required]
      public virtual Decimal? TaxRate {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesTerritory", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbStateProvince), typeof(DbCustomer), typeof(DbSalesOrderHeader), typeof(DbSalesPerson), typeof(DbSalesTerritoryHistory)})]
   public partial class DbSalesTerritory : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? TerritoryID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCountryRegion), MemberName="CountryRegionCode", ColumnName="CountryRegionCode", FKeyName="FK_SalesTerritory_CountryRegion_CountryRegionCode")]
      public virtual String CountryRegionCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Group {get; set;}
      [Required]
      public virtual Decimal? SalesYTD {get; set;}
      [Required]
      public virtual Decimal? SalesLastYear {get; set;}
      [Required]
      public virtual Decimal? CostYTD {get; set;}
      [Required]
      public virtual Decimal? CostLastYear {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SalesTerritoryHistory", Schema="Sales")]
   public partial class DbSalesTerritoryHistory : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbSalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbSalesTerritory), MemberName="TerritoryID", ColumnName="TerritoryID", FKeyName="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("ShoppingCartItem", Schema="Sales")]
   public partial class DbShoppingCartItem : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ShoppingCartItemID {get; set;}
      [Required, MaxLength(50)]
      public virtual String ShoppingCartID {get; set;}
      [Required]
      public virtual Int32? Quantity {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_ShoppingCartItem_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual DateTime? DateCreated {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SpecialOffer", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSpecialOfferProduct)})]
   public partial class DbSpecialOffer : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? SpecialOfferID {get; set;}
      [Required, MaxLength(255)]
      public virtual String Description {get; set;}
      [Required]
      public virtual Decimal? DiscountPct {get; set;}
      [Required, MaxLength(50)]
      public virtual String Type {get; set;}
      [Required, MaxLength(50)]
      public virtual String Category {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      [Required]
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Int32? MinQty {get; set;}
      public virtual Int32? MaxQty {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("SpecialOfferProduct", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbSalesOrderDetail)})]
   public partial class DbSpecialOfferProduct : DbBaseTable
   {
      [Key, Required]
      [References( Type=typeof(DbSpecialOffer), MemberName="SpecialOfferID", ColumnName="SpecialOfferID", FKeyName="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID")]
      public virtual Int32? SpecialOfferID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbProduct), MemberName="ProductID", ColumnName="ProductID", FKeyName="FK_SpecialOfferProduct_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("Store", Schema="Sales")]
   [ReferencedBy(new []{typeof(DbCustomer)})]
   public partial class DbStore : DbBaseTable
   {
      [Key, DbUnique, Required]
      [References( Type=typeof(DbBusinessEntity), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Store_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [References( Type=typeof(DbSalesPerson), MemberName="BusinessEntityID", ColumnName="BusinessEntityID", FKeyName="FK_Store_SalesPerson_SalesPersonID")]
      public virtual Int32? SalesPersonID {get; set;}
      public virtual String Demographics {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("vEmployee", Schema="HumanResources"), DbView]
   public partial class DbvEmployee : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
      public virtual String AdditionalContactInfo {get; set;}
   }
   [Table("vEmployeeDepartment", Schema="HumanResources"), DbView]
   public partial class DbvEmployeeDepartment : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [Required, MaxLength(50)]
      public virtual String Department {get; set;}
      [Required, MaxLength(50)]
      public virtual String GroupName {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
   }
   [Table("vEmployeeDepartmentHistory", Schema="HumanResources"), DbView]
   public partial class DbvEmployeeDepartmentHistory : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String Shift {get; set;}
      [Required, MaxLength(50)]
      public virtual String Department {get; set;}
      [Required, MaxLength(50)]
      public virtual String GroupName {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
   }
   [Table("vJobCandidate", Schema="HumanResources"), DbView]
   public partial class DbvJobCandidate : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(30), Column("Name.Prefix")]
      public virtual String Name_Prefix {get; set;}
      [MaxLength(30), Column("Name.First")]
      public virtual String Name_First {get; set;}
      [MaxLength(30), Column("Name.Middle")]
      public virtual String Name_Middle {get; set;}
      [MaxLength(30), Column("Name.Last")]
      public virtual String Name_Last {get; set;}
      [MaxLength(30), Column("Name.Suffix")]
      public virtual String Name_Suffix {get; set;}
      public virtual String Skills {get; set;}
      [MaxLength(30), Column("Addr.Type")]
      public virtual String Addr_Type {get; set;}
      [MaxLength(100), Column("Addr.Loc.CountryRegion")]
      public virtual String Addr_Loc_CountryRegion {get; set;}
      [MaxLength(100), Column("Addr.Loc.State")]
      public virtual String Addr_Loc_State {get; set;}
      [MaxLength(100), Column("Addr.Loc.City")]
      public virtual String Addr_Loc_City {get; set;}
      [MaxLength(20), Column("Addr.PostalCode")]
      public virtual String Addr_PostalCode {get; set;}
      public virtual String EMail {get; set;}
      public virtual String WebSite {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("vJobCandidateEducation", Schema="HumanResources"), DbView]
   public partial class DbvJobCandidateEducation : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      [Column("Edu.Level")]
      public virtual String Edu_Level {get; set;}
      [Column("Edu.StartDate")]
      public virtual DateTime? Edu_StartDate {get; set;}
      [Column("Edu.EndDate")]
      public virtual DateTime? Edu_EndDate {get; set;}
      [MaxLength(50), Column("Edu.Degree")]
      public virtual String Edu_Degree {get; set;}
      [MaxLength(50), Column("Edu.Major")]
      public virtual String Edu_Major {get; set;}
      [MaxLength(50), Column("Edu.Minor")]
      public virtual String Edu_Minor {get; set;}
      [MaxLength(5), Column("Edu.GPA")]
      public virtual String Edu_GPA {get; set;}
      [MaxLength(5), Column("Edu.GPAScale")]
      public virtual String Edu_GPAScale {get; set;}
      [MaxLength(100), Column("Edu.School")]
      public virtual String Edu_School {get; set;}
      [MaxLength(100), Column("Edu.Loc.CountryRegion")]
      public virtual String Edu_Loc_CountryRegion {get; set;}
      [MaxLength(100), Column("Edu.Loc.State")]
      public virtual String Edu_Loc_State {get; set;}
      [MaxLength(100), Column("Edu.Loc.City")]
      public virtual String Edu_Loc_City {get; set;}
   }
   [Table("vJobCandidateEmployment", Schema="HumanResources"), DbView]
   public partial class DbvJobCandidateEmployment : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      [Column("Emp.StartDate")]
      public virtual DateTime? Emp_StartDate {get; set;}
      [Column("Emp.EndDate")]
      public virtual DateTime? Emp_EndDate {get; set;}
      [MaxLength(100), Column("Emp.OrgName")]
      public virtual String Emp_OrgName {get; set;}
      [MaxLength(100), Column("Emp.JobTitle")]
      public virtual String Emp_JobTitle {get; set;}
      [Column("Emp.Responsibility")]
      public virtual String Emp_Responsibility {get; set;}
      [Column("Emp.FunctionCategory")]
      public virtual String Emp_FunctionCategory {get; set;}
      [Column("Emp.IndustryCategory")]
      public virtual String Emp_IndustryCategory {get; set;}
      [Column("Emp.Loc.CountryRegion")]
      public virtual String Emp_Loc_CountryRegion {get; set;}
      [Column("Emp.Loc.State")]
      public virtual String Emp_Loc_State {get; set;}
      [Column("Emp.Loc.City")]
      public virtual String Emp_Loc_City {get; set;}
   }
   [Table("vAdditionalContactInfo", Schema="Person"), DbView]
   public partial class DbvAdditionalContactInfo : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(50)]
      public virtual String TelephoneNumber {get; set;}
      public virtual String TelephoneSpecialInstructions {get; set;}
      [MaxLength(50)]
      public virtual String Street {get; set;}
      [MaxLength(50)]
      public virtual String City {get; set;}
      [MaxLength(50)]
      public virtual String StateProvince {get; set;}
      [MaxLength(50)]
      public virtual String PostalCode {get; set;}
      [MaxLength(50)]
      public virtual String CountryRegion {get; set;}
      public virtual String HomeAddressSpecialInstructions {get; set;}
      [MaxLength(128)]
      public virtual String EMailAddress {get; set;}
      public virtual String EMailSpecialInstructions {get; set;}
      [MaxLength(50)]
      public virtual String EMailTelephoneNumber {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("vStateProvinceCountryRegion", Schema="Person"), DbView]
   public partial class DbvStateProvinceCountryRegion : DbBaseTable
   {
      [Key, Required]
      public virtual Int32? StateProvinceID {get; set;}
      [Required, MaxLength(3)]
      public virtual String StateProvinceCode {get; set;}
      [Required]
      public virtual Boolean? IsOnlyStateProvinceFlag {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required]
      public virtual Int32? TerritoryID {get; set;}
      [Key, Required, MaxLength(3)]
      public virtual String CountryRegionCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
   }
   [Table("vProductAndDescription", Schema="Production"), DbView]
   public partial class DbvProductAndDescription : DbBaseTable
   {
      [Required]
      public virtual Int32? ProductID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ProductModel {get; set;}
      [Required, MaxLength(6)]
      public virtual String CultureID {get; set;}
      [Required, MaxLength(400)]
      public virtual String Description {get; set;}
   }
   [Table("vProductModelCatalogDescription", Schema="Production"), DbView]
   public partial class DbvProductModelCatalogDescription : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductModelID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual String Summary {get; set;}
      public virtual String Manufacturer {get; set;}
      [MaxLength(30)]
      public virtual String Copyright {get; set;}
      [MaxLength(256)]
      public virtual String ProductURL {get; set;}
      [MaxLength(256)]
      public virtual String WarrantyPeriod {get; set;}
      [MaxLength(256)]
      public virtual String WarrantyDescription {get; set;}
      [MaxLength(256)]
      public virtual String NoOfYears {get; set;}
      [MaxLength(256)]
      public virtual String MaintenanceDescription {get; set;}
      [MaxLength(256)]
      public virtual String Wheel {get; set;}
      [MaxLength(256)]
      public virtual String Saddle {get; set;}
      [MaxLength(256)]
      public virtual String Pedal {get; set;}
      public virtual String BikeFrame {get; set;}
      [MaxLength(256)]
      public virtual String Crankset {get; set;}
      [MaxLength(256)]
      public virtual String PictureAngle {get; set;}
      [MaxLength(256)]
      public virtual String PictureSize {get; set;}
      [MaxLength(256)]
      public virtual String ProductPhotoID {get; set;}
      [MaxLength(256)]
      public virtual String Material {get; set;}
      [MaxLength(256)]
      public virtual String Color {get; set;}
      [MaxLength(256)]
      public virtual String ProductLine {get; set;}
      [MaxLength(256)]
      public virtual String Style {get; set;}
      [MaxLength(1024)]
      public virtual String RiderExperience {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("vProductModelInstructions", Schema="Production"), DbView]
   public partial class DbvProductModelInstructions : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? ProductModelID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual String Instructions {get; set;}
      public virtual Int32? LocationID {get; set;}
      public virtual Decimal? SetupHours {get; set;}
      public virtual Decimal? MachineHours {get; set;}
      public virtual Decimal? LaborHours {get; set;}
      public virtual Int32? LotSize {get; set;}
      [MaxLength(1024)]
      public virtual String Step {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table("vVendorWithAddresses", Schema="Purchasing"), DbView]
   public partial class DbvVendorWithAddresses : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String AddressType {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
   }
   [Table("vVendorWithContacts", Schema="Purchasing"), DbView]
   public partial class DbvVendorWithContacts : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ContactType {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
   }
   [Table("vIndividualCustomer", Schema="Sales"), DbView]
   public partial class DbvIndividualCustomer : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      [Required, MaxLength(50)]
      public virtual String AddressType {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
      public virtual String Demographics {get; set;}
   }
   [Table("vPersonDemographics", Schema="Sales"), DbView]
   public partial class DbvPersonDemographics : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      public virtual Decimal? TotalPurchaseYTD {get; set;}
      public virtual DateTime? DateFirstPurchase {get; set;}
      public virtual DateTime? BirthDate {get; set;}
      [MaxLength(1)]
      public virtual String MaritalStatus {get; set;}
      [MaxLength(30)]
      public virtual String YearlyIncome {get; set;}
      [MaxLength(1)]
      public virtual String Gender {get; set;}
      public virtual Int32? TotalChildren {get; set;}
      public virtual Int32? NumberChildrenAtHome {get; set;}
      [MaxLength(30)]
      public virtual String Education {get; set;}
      [MaxLength(30)]
      public virtual String Occupation {get; set;}
      public virtual Boolean? HomeOwnerFlag {get; set;}
      public virtual Int32? NumberCarsOwned {get; set;}
   }
   [Table("vSalesPerson", Schema="Sales"), DbView]
   public partial class DbvSalesPerson : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
      [MaxLength(50)]
      public virtual String TerritoryName {get; set;}
      [MaxLength(50)]
      public virtual String TerritoryGroup {get; set;}
      public virtual Decimal? SalesQuota {get; set;}
      [Required]
      public virtual Decimal? SalesYTD {get; set;}
      [Required]
      public virtual Decimal? SalesLastYear {get; set;}
   }
   [Table("vSalesPersonSalesByFiscalYears", Schema="Sales"), DbView]
   public partial class DbvSalesPersonSalesByFiscalYears : DbBaseTable
   {
      public virtual Int32? SalesPersonID {get; set;}
      [MaxLength(152)]
      public virtual String FullName {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [Required, MaxLength(50)]
      public virtual String SalesTerritory {get; set;}
      [Column("2002")]
      public virtual Decimal? _2002 {get; set;}
      [Column("2003")]
      public virtual Decimal? _2003 {get; set;}
      [Column("2004")]
      public virtual Decimal? _2004 {get; set;}
   }
   [Table("vStoreWithAddresses", Schema="Sales"), DbView]
   public partial class DbvStoreWithAddresses : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String AddressType {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
   }
   [Table("vStoreWithContacts", Schema="Sales"), DbView]
   public partial class DbvStoreWithContacts : DbBaseTable
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ContactType {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
   }
   [Table("vStoreWithDemographics", Schema="Sales"), DbView]
   public partial class DbvStoreWithDemographics : DbBaseTable
   {
      [Key, DbUnique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual Decimal? AnnualSales {get; set;}
      public virtual Decimal? AnnualRevenue {get; set;}
      [MaxLength(50)]
      public virtual String BankName {get; set;}
      [MaxLength(5)]
      public virtual String BusinessType {get; set;}
      public virtual Int32? YearOpened {get; set;}
      [MaxLength(50)]
      public virtual String Specialty {get; set;}
      public virtual Int32? SquareFeet {get; set;}
      [MaxLength(30)]
      public virtual String Brands {get; set;}
      [MaxLength(30)]
      public virtual String Internet {get; set;}
      public virtual Int32? NumberEmployees {get; set;}
   }
   
   public static partial class JoinExtension
   {
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [HumanResources].[Employee].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbEmployee))]
      public static DbPerson BusinessEntity(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [HumanResources].[Employee].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbEmployee))]
      public static DbPerson BusinessEntity(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Department] ON [HumanResources].[EmployeeDepartmentHistory].[DepartmentID] = [HumanResources].[Department].[DepartmentID]", LeftTableType=typeof(DbDepartment), RightTableType=typeof(DbEmployeeDepartmentHistory))]
      public static DbDepartment Department(this DbEmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Department] ON [HumanResources].[EmployeeDepartmentHistory].[DepartmentID] = [HumanResources].[Department].[DepartmentID]", LeftTableType=typeof(DbDepartment), RightTableType=typeof(DbEmployeeDepartmentHistory))]
      public static DbDepartment Department(this DbEmployeeDepartmentHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeeDepartmentHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbEmployeeDepartmentHistory))]
      public static DbEmployee BusinessEntity(this DbEmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeeDepartmentHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbEmployeeDepartmentHistory))]
      public static DbEmployee BusinessEntity(this DbEmployeeDepartmentHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Shift] ON [HumanResources].[EmployeeDepartmentHistory].[ShiftID] = [HumanResources].[Shift].[ShiftID]", LeftTableType=typeof(DbShift), RightTableType=typeof(DbEmployeeDepartmentHistory))]
      public static DbShift Shift(this DbEmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Shift] ON [HumanResources].[EmployeeDepartmentHistory].[ShiftID] = [HumanResources].[Shift].[ShiftID]", LeftTableType=typeof(DbShift), RightTableType=typeof(DbEmployeeDepartmentHistory))]
      public static DbShift Shift(this DbEmployeeDepartmentHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeePayHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbEmployeePayHistory))]
      public static DbEmployee BusinessEntity(this DbEmployeePayHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeePayHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbEmployeePayHistory))]
      public static DbEmployee BusinessEntity(this DbEmployeePayHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[JobCandidate].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbJobCandidate))]
      public static DbEmployee BusinessEntity(this DbJobCandidate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[JobCandidate].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbJobCandidate))]
      public static DbEmployee BusinessEntity(this DbJobCandidate self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Person].[Address].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]", LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbAddress))]
      public static DbStateProvince StateProvince(this DbAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Person].[Address].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]", LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbAddress))]
      public static DbStateProvince StateProvince(this DbAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Person].[BusinessEntityAddress].[AddressID] = [Person].[Address].[AddressID]", LeftTableType=typeof(DbAddress), RightTableType=typeof(DbBusinessEntityAddress))]
      public static DbAddress Address(this DbBusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Person].[BusinessEntityAddress].[AddressID] = [Person].[Address].[AddressID]", LeftTableType=typeof(DbAddress), RightTableType=typeof(DbBusinessEntityAddress))]
      public static DbAddress Address(this DbBusinessEntityAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[AddressType] ON [Person].[BusinessEntityAddress].[AddressTypeID] = [Person].[AddressType].[AddressTypeID]", LeftTableType=typeof(DbAddressType), RightTableType=typeof(DbBusinessEntityAddress))]
      public static DbAddressType AddressType(this DbBusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[AddressType] ON [Person].[BusinessEntityAddress].[AddressTypeID] = [Person].[AddressType].[AddressTypeID]", LeftTableType=typeof(DbAddressType), RightTableType=typeof(DbBusinessEntityAddress))]
      public static DbAddressType AddressType(this DbBusinessEntityAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityAddress].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbBusinessEntityAddress))]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityAddress].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbBusinessEntityAddress))]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityContact].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbBusinessEntityContact))]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityContact self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityContact].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbBusinessEntityContact))]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityContact self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[ContactType] ON [Person].[BusinessEntityContact].[ContactTypeID] = [Person].[ContactType].[ContactTypeID]", LeftTableType=typeof(DbContactType), RightTableType=typeof(DbBusinessEntityContact))]
      public static DbContactType ContactType(this DbBusinessEntityContact self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[ContactType] ON [Person].[BusinessEntityContact].[ContactTypeID] = [Person].[ContactType].[ContactTypeID]", LeftTableType=typeof(DbContactType), RightTableType=typeof(DbBusinessEntityContact))]
      public static DbContactType ContactType(this DbBusinessEntityContact self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[BusinessEntityContact].[PersonID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbBusinessEntityContact))]
      public static DbPerson Person(this DbBusinessEntityContact self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[BusinessEntityContact].[PersonID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbBusinessEntityContact))]
      public static DbPerson Person(this DbBusinessEntityContact self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[EmailAddress].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbEmailAddress))]
      public static DbPerson BusinessEntity(this DbEmailAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[EmailAddress].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbEmailAddress))]
      public static DbPerson BusinessEntity(this DbEmailAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[Password].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbPassword))]
      public static DbPerson BusinessEntity(this DbPassword self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[Password].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbPassword))]
      public static DbPerson BusinessEntity(this DbPassword self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[Person].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbPerson))]
      public static DbBusinessEntity BusinessEntity(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[Person].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbPerson))]
      public static DbBusinessEntity BusinessEntity(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[PersonPhone].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbPersonPhone))]
      public static DbPerson BusinessEntity(this DbPersonPhone self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[PersonPhone].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbPersonPhone))]
      public static DbPerson BusinessEntity(this DbPersonPhone self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PhoneNumberType] ON [Person].[PersonPhone].[PhoneNumberTypeID] = [Person].[PhoneNumberType].[PhoneNumberTypeID]", LeftTableType=typeof(DbPhoneNumberType), RightTableType=typeof(DbPersonPhone))]
      public static DbPhoneNumberType PhoneNumberType(this DbPersonPhone self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PhoneNumberType] ON [Person].[PersonPhone].[PhoneNumberTypeID] = [Person].[PhoneNumberType].[PhoneNumberTypeID]", LeftTableType=typeof(DbPhoneNumberType), RightTableType=typeof(DbPersonPhone))]
      public static DbPhoneNumberType PhoneNumberType(this DbPersonPhone self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Person].[StateProvince].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]", LeftTableType=typeof(DbCountryRegion), RightTableType=typeof(DbStateProvince))]
      public static DbCountryRegion CountryRegion(this DbStateProvince self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Person].[StateProvince].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]", LeftTableType=typeof(DbCountryRegion), RightTableType=typeof(DbStateProvince))]
      public static DbCountryRegion CountryRegion(this DbStateProvince self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Person].[StateProvince].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbStateProvince))]
      public static DbSalesTerritory Territory(this DbStateProvince self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Person].[StateProvince].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbStateProvince))]
      public static DbSalesTerritory Territory(this DbStateProvince self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ComponentID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbBillOfMaterials))]
      public static DbProduct Component(this DbBillOfMaterials self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ComponentID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbBillOfMaterials))]
      public static DbProduct Component(this DbBillOfMaterials self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ProductAssemblyID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbBillOfMaterials))]
      public static DbProduct ProductAssembly(this DbBillOfMaterials self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ProductAssemblyID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbBillOfMaterials))]
      public static DbProduct ProductAssembly(this DbBillOfMaterials self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[BillOfMaterials].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbBillOfMaterials))]
      public static DbUnitMeasure UnitMeasure(this DbBillOfMaterials self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[BillOfMaterials].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbBillOfMaterials))]
      public static DbUnitMeasure UnitMeasure(this DbBillOfMaterials self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Production].[Document].[Owner] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbDocument))]
      public static DbEmployee Employee(this DbDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Production].[Document].[Owner] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbDocument))]
      public static DbEmployee Employee(this DbDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[Product].[ProductModelID] = [Production].[ProductModel].[ProductModelID]", LeftTableType=typeof(DbProductModel), RightTableType=typeof(DbProduct))]
      public static DbProductModel ProductModel(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[Product].[ProductModelID] = [Production].[ProductModel].[ProductModelID]", LeftTableType=typeof(DbProductModel), RightTableType=typeof(DbProduct))]
      public static DbProductModel ProductModel(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductSubcategory] ON [Production].[Product].[ProductSubcategoryID] = [Production].[ProductSubcategory].[ProductSubcategoryID]", LeftTableType=typeof(DbProductSubcategory), RightTableType=typeof(DbProduct))]
      public static DbProductSubcategory ProductSubcategory(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductSubcategory] ON [Production].[Product].[ProductSubcategoryID] = [Production].[ProductSubcategory].[ProductSubcategoryID]", LeftTableType=typeof(DbProductSubcategory), RightTableType=typeof(DbProduct))]
      public static DbProductSubcategory ProductSubcategory(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[SizeUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbProduct))]
      public static DbUnitMeasure SizeUnitMeasure(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[SizeUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbProduct))]
      public static DbUnitMeasure SizeUnitMeasure(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[WeightUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbProduct))]
      public static DbUnitMeasure WeightUnitMeasure(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[WeightUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbProduct))]
      public static DbUnitMeasure WeightUnitMeasure(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductCostHistory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductCostHistory))]
      public static DbProduct Product(this DbProductCostHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductCostHistory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductCostHistory))]
      public static DbProduct Product(this DbProductCostHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Document] ON [Production].[ProductDocument].[DocumentNode] = [Production].[Document].[DocumentNode]", LeftTableType=typeof(DbDocument), RightTableType=typeof(DbProductDocument))]
      public static DbDocument Document(this DbProductDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Document] ON [Production].[ProductDocument].[DocumentNode] = [Production].[Document].[DocumentNode]", LeftTableType=typeof(DbDocument), RightTableType=typeof(DbProductDocument))]
      public static DbDocument Document(this DbProductDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductDocument].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductDocument))]
      public static DbProduct Product(this DbProductDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductDocument].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductDocument))]
      public static DbProduct Product(this DbProductDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[ProductInventory].[LocationID] = [Production].[Location].[LocationID]", LeftTableType=typeof(DbLocation), RightTableType=typeof(DbProductInventory))]
      public static DbLocation Location(this DbProductInventory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[ProductInventory].[LocationID] = [Production].[Location].[LocationID]", LeftTableType=typeof(DbLocation), RightTableType=typeof(DbProductInventory))]
      public static DbLocation Location(this DbProductInventory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductInventory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductInventory))]
      public static DbProduct Product(this DbProductInventory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductInventory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductInventory))]
      public static DbProduct Product(this DbProductInventory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductListPriceHistory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductListPriceHistory))]
      public static DbProduct Product(this DbProductListPriceHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductListPriceHistory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductListPriceHistory))]
      public static DbProduct Product(this DbProductListPriceHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Illustration] ON [Production].[ProductModelIllustration].[IllustrationID] = [Production].[Illustration].[IllustrationID]", LeftTableType=typeof(DbIllustration), RightTableType=typeof(DbProductModelIllustration))]
      public static DbIllustration Illustration(this DbProductModelIllustration self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Illustration] ON [Production].[ProductModelIllustration].[IllustrationID] = [Production].[Illustration].[IllustrationID]", LeftTableType=typeof(DbIllustration), RightTableType=typeof(DbProductModelIllustration))]
      public static DbIllustration Illustration(this DbProductModelIllustration self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelIllustration].[ProductModelID] = [Production].[ProductModel].[ProductModelID]", LeftTableType=typeof(DbProductModel), RightTableType=typeof(DbProductModelIllustration))]
      public static DbProductModel ProductModel(this DbProductModelIllustration self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelIllustration].[ProductModelID] = [Production].[ProductModel].[ProductModelID]", LeftTableType=typeof(DbProductModel), RightTableType=typeof(DbProductModelIllustration))]
      public static DbProductModel ProductModel(this DbProductModelIllustration self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Culture] ON [Production].[ProductModelProductDescriptionCulture].[CultureID] = [Production].[Culture].[CultureID]", LeftTableType=typeof(DbCulture), RightTableType=typeof(DbProductModelProductDescriptionCulture))]
      public static DbCulture Culture(this DbProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Culture] ON [Production].[ProductModelProductDescriptionCulture].[CultureID] = [Production].[Culture].[CultureID]", LeftTableType=typeof(DbCulture), RightTableType=typeof(DbProductModelProductDescriptionCulture))]
      public static DbCulture Culture(this DbProductModelProductDescriptionCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDescription] ON [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID] = [Production].[ProductDescription].[ProductDescriptionID]", LeftTableType=typeof(DbProductDescription), RightTableType=typeof(DbProductModelProductDescriptionCulture))]
      public static DbProductDescription ProductDescription(this DbProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDescription] ON [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID] = [Production].[ProductDescription].[ProductDescriptionID]", LeftTableType=typeof(DbProductDescription), RightTableType=typeof(DbProductModelProductDescriptionCulture))]
      public static DbProductDescription ProductDescription(this DbProductModelProductDescriptionCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelProductDescriptionCulture].[ProductModelID] = [Production].[ProductModel].[ProductModelID]", LeftTableType=typeof(DbProductModel), RightTableType=typeof(DbProductModelProductDescriptionCulture))]
      public static DbProductModel ProductModel(this DbProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelProductDescriptionCulture].[ProductModelID] = [Production].[ProductModel].[ProductModelID]", LeftTableType=typeof(DbProductModel), RightTableType=typeof(DbProductModelProductDescriptionCulture))]
      public static DbProductModel ProductModel(this DbProductModelProductDescriptionCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductProductPhoto].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductProductPhoto))]
      public static DbProduct Product(this DbProductProductPhoto self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductProductPhoto].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductProductPhoto))]
      public static DbProduct Product(this DbProductProductPhoto self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductPhoto] ON [Production].[ProductProductPhoto].[ProductPhotoID] = [Production].[ProductPhoto].[ProductPhotoID]", LeftTableType=typeof(DbProductPhoto), RightTableType=typeof(DbProductProductPhoto))]
      public static DbProductPhoto ProductPhoto(this DbProductProductPhoto self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductPhoto] ON [Production].[ProductProductPhoto].[ProductPhotoID] = [Production].[ProductPhoto].[ProductPhotoID]", LeftTableType=typeof(DbProductPhoto), RightTableType=typeof(DbProductProductPhoto))]
      public static DbProductPhoto ProductPhoto(this DbProductProductPhoto self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductReview].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductReview))]
      public static DbProduct Product(this DbProductReview self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductReview].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductReview))]
      public static DbProduct Product(this DbProductReview self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductCategory] ON [Production].[ProductSubcategory].[ProductCategoryID] = [Production].[ProductCategory].[ProductCategoryID]", LeftTableType=typeof(DbProductCategory), RightTableType=typeof(DbProductSubcategory))]
      public static DbProductCategory ProductCategory(this DbProductSubcategory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductCategory] ON [Production].[ProductSubcategory].[ProductCategoryID] = [Production].[ProductCategory].[ProductCategoryID]", LeftTableType=typeof(DbProductCategory), RightTableType=typeof(DbProductSubcategory))]
      public static DbProductCategory ProductCategory(this DbProductSubcategory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[TransactionHistory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbTransactionHistory))]
      public static DbProduct Product(this DbTransactionHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[TransactionHistory].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbTransactionHistory))]
      public static DbProduct Product(this DbTransactionHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[WorkOrder].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbWorkOrder))]
      public static DbProduct Product(this DbWorkOrder self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[WorkOrder].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbWorkOrder))]
      public static DbProduct Product(this DbWorkOrder self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ScrapReason] ON [Production].[WorkOrder].[ScrapReasonID] = [Production].[ScrapReason].[ScrapReasonID]", LeftTableType=typeof(DbScrapReason), RightTableType=typeof(DbWorkOrder))]
      public static DbScrapReason ScrapReason(this DbWorkOrder self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ScrapReason] ON [Production].[WorkOrder].[ScrapReasonID] = [Production].[ScrapReason].[ScrapReasonID]", LeftTableType=typeof(DbScrapReason), RightTableType=typeof(DbWorkOrder))]
      public static DbScrapReason ScrapReason(this DbWorkOrder self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[WorkOrderRouting].[LocationID] = [Production].[Location].[LocationID]", LeftTableType=typeof(DbLocation), RightTableType=typeof(DbWorkOrderRouting))]
      public static DbLocation Location(this DbWorkOrderRouting self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[WorkOrderRouting].[LocationID] = [Production].[Location].[LocationID]", LeftTableType=typeof(DbLocation), RightTableType=typeof(DbWorkOrderRouting))]
      public static DbLocation Location(this DbWorkOrderRouting self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[WorkOrderRouting].[WorkOrderID] = [Production].[WorkOrder].[WorkOrderID]", LeftTableType=typeof(DbWorkOrder), RightTableType=typeof(DbWorkOrderRouting))]
      public static DbWorkOrder WorkOrder(this DbWorkOrderRouting self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[WorkOrderRouting].[WorkOrderID] = [Production].[WorkOrder].[WorkOrderID]", LeftTableType=typeof(DbWorkOrder), RightTableType=typeof(DbWorkOrderRouting))]
      public static DbWorkOrder WorkOrder(this DbWorkOrderRouting self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[ProductVendor].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductVendor))]
      public static DbProduct Product(this DbProductVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[ProductVendor].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductVendor))]
      public static DbProduct Product(this DbProductVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Purchasing].[ProductVendor].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbProductVendor))]
      public static DbUnitMeasure UnitMeasure(this DbProductVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Purchasing].[ProductVendor].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]", LeftTableType=typeof(DbUnitMeasure), RightTableType=typeof(DbProductVendor))]
      public static DbUnitMeasure UnitMeasure(this DbProductVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[ProductVendor].[BusinessEntityID] = [Purchasing].[Vendor].[BusinessEntityID]", LeftTableType=typeof(DbVendor), RightTableType=typeof(DbProductVendor))]
      public static DbVendor BusinessEntity(this DbProductVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[ProductVendor].[BusinessEntityID] = [Purchasing].[Vendor].[BusinessEntityID]", LeftTableType=typeof(DbVendor), RightTableType=typeof(DbProductVendor))]
      public static DbVendor BusinessEntity(this DbProductVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[PurchaseOrderDetail].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbPurchaseOrderDetail))]
      public static DbProduct Product(this DbPurchaseOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[PurchaseOrderDetail].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbPurchaseOrderDetail))]
      public static DbProduct Product(this DbPurchaseOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID]", LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbPurchaseOrderDetail))]
      public static DbPurchaseOrderHeader PurchaseOrder(this DbPurchaseOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID]", LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbPurchaseOrderDetail))]
      public static DbPurchaseOrderHeader PurchaseOrder(this DbPurchaseOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Purchasing].[PurchaseOrderHeader].[EmployeeID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbEmployee Employee(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Purchasing].[PurchaseOrderHeader].[EmployeeID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbEmployee Employee(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Purchasing].[PurchaseOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]", LeftTableType=typeof(DbShipMethod), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbShipMethod ShipMethod(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Purchasing].[PurchaseOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]", LeftTableType=typeof(DbShipMethod), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbShipMethod ShipMethod(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[PurchaseOrderHeader].[VendorID] = [Purchasing].[Vendor].[BusinessEntityID]", LeftTableType=typeof(DbVendor), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbVendor Vendor(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[PurchaseOrderHeader].[VendorID] = [Purchasing].[Vendor].[BusinessEntityID]", LeftTableType=typeof(DbVendor), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbVendor Vendor(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Purchasing].[Vendor].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbVendor))]
      public static DbBusinessEntity BusinessEntity(this DbVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Purchasing].[Vendor].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbVendor))]
      public static DbBusinessEntity BusinessEntity(this DbVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[CountryRegionCurrency].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]", LeftTableType=typeof(DbCountryRegion), RightTableType=typeof(DbCountryRegionCurrency))]
      public static DbCountryRegion CountryRegion(this DbCountryRegionCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[CountryRegionCurrency].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]", LeftTableType=typeof(DbCountryRegion), RightTableType=typeof(DbCountryRegionCurrency))]
      public static DbCountryRegion CountryRegion(this DbCountryRegionCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CountryRegionCurrency].[CurrencyCode] = [Sales].[Currency].[CurrencyCode]", LeftTableType=typeof(DbCurrency), RightTableType=typeof(DbCountryRegionCurrency))]
      public static DbCurrency Currency(this DbCountryRegionCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CountryRegionCurrency].[CurrencyCode] = [Sales].[Currency].[CurrencyCode]", LeftTableType=typeof(DbCurrency), RightTableType=typeof(DbCountryRegionCurrency))]
      public static DbCurrency Currency(this DbCountryRegionCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[FromCurrencyCode] = [Sales].[Currency].[CurrencyCode]", LeftTableType=typeof(DbCurrency), RightTableType=typeof(DbCurrencyRate))]
      public static DbCurrency FromCurrency(this DbCurrencyRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[FromCurrencyCode] = [Sales].[Currency].[CurrencyCode]", LeftTableType=typeof(DbCurrency), RightTableType=typeof(DbCurrencyRate))]
      public static DbCurrency FromCurrency(this DbCurrencyRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[ToCurrencyCode] = [Sales].[Currency].[CurrencyCode]", LeftTableType=typeof(DbCurrency), RightTableType=typeof(DbCurrencyRate))]
      public static DbCurrency ToCurrency(this DbCurrencyRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[ToCurrencyCode] = [Sales].[Currency].[CurrencyCode]", LeftTableType=typeof(DbCurrency), RightTableType=typeof(DbCurrencyRate))]
      public static DbCurrency ToCurrency(this DbCurrencyRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbCustomer))]
      public static DbPerson Person(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbCustomer))]
      public static DbPerson Person(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[Customer].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbCustomer))]
      public static DbSalesTerritory Territory(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[Customer].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbCustomer))]
      public static DbSalesTerritory Territory(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Sales].[Customer].[StoreID] = [Sales].[Store].[BusinessEntityID]", LeftTableType=typeof(DbStore), RightTableType=typeof(DbCustomer))]
      public static DbStore Store(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Sales].[Customer].[StoreID] = [Sales].[Store].[BusinessEntityID]", LeftTableType=typeof(DbStore), RightTableType=typeof(DbCustomer))]
      public static DbStore Store(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[PersonCreditCard].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]", LeftTableType=typeof(DbCreditCard), RightTableType=typeof(DbPersonCreditCard))]
      public static DbCreditCard CreditCard(this DbPersonCreditCard self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[PersonCreditCard].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]", LeftTableType=typeof(DbCreditCard), RightTableType=typeof(DbPersonCreditCard))]
      public static DbCreditCard CreditCard(this DbPersonCreditCard self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[PersonCreditCard].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbPersonCreditCard))]
      public static DbPerson BusinessEntity(this DbPersonCreditCard self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[PersonCreditCard].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", LeftTableType=typeof(DbPerson), RightTableType=typeof(DbPersonCreditCard))]
      public static DbPerson BusinessEntity(this DbPersonCreditCard self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderDetail].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]", LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesOrderDetail))]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderDetail].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]", LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesOrderDetail))]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Sales].[SalesOrderDetail].[ProductID] = [Sales].[SpecialOfferProduct].[ProductID] AND [Sales].[SalesOrderDetail].[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]", LeftTableType=typeof(DbSpecialOfferProduct), RightTableType=typeof(DbSalesOrderDetail))]
      public static DbSpecialOfferProduct ProductSpecialOffer(this DbSalesOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Sales].[SalesOrderDetail].[ProductID] = [Sales].[SpecialOfferProduct].[ProductID] AND [Sales].[SalesOrderDetail].[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]", LeftTableType=typeof(DbSpecialOfferProduct), RightTableType=typeof(DbSalesOrderDetail))]
      public static DbSpecialOfferProduct ProductSpecialOffer(this DbSalesOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[BillToAddressID] = [Person].[Address].[AddressID]", LeftTableType=typeof(DbAddress), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbAddress BillToAddress(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[BillToAddressID] = [Person].[Address].[AddressID]", LeftTableType=typeof(DbAddress), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbAddress BillToAddress(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[ShipToAddressID] = [Person].[Address].[AddressID]", LeftTableType=typeof(DbAddress), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbAddress ShipToAddress(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[ShipToAddressID] = [Person].[Address].[AddressID]", LeftTableType=typeof(DbAddress), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbAddress ShipToAddress(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[SalesOrderHeader].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]", LeftTableType=typeof(DbCreditCard), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbCreditCard CreditCard(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[SalesOrderHeader].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]", LeftTableType=typeof(DbCreditCard), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbCreditCard CreditCard(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[SalesOrderHeader].[CurrencyRateID] = [Sales].[CurrencyRate].[CurrencyRateID]", LeftTableType=typeof(DbCurrencyRate), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbCurrencyRate CurrencyRate(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[SalesOrderHeader].[CurrencyRateID] = [Sales].[CurrencyRate].[CurrencyRateID]", LeftTableType=typeof(DbCurrencyRate), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbCurrencyRate CurrencyRate(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Customer].[CustomerID]", LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbCustomer Customer(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Customer].[CustomerID]", LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbCustomer Customer(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesOrderHeader].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesPerson SalesPerson(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesOrderHeader].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesPerson SalesPerson(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesOrderHeader].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesTerritory Territory(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesOrderHeader].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesTerritory Territory(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Sales].[SalesOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]", LeftTableType=typeof(DbShipMethod), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbShipMethod ShipMethod(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Sales].[SalesOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]", LeftTableType=typeof(DbShipMethod), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbShipMethod ShipMethod(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]", LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesOrderHeaderSalesReason))]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderHeaderSalesReason self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]", LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesOrderHeaderSalesReason))]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderHeaderSalesReason self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesReason] ON [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID] = [Sales].[SalesReason].[SalesReasonID]", LeftTableType=typeof(DbSalesReason), RightTableType=typeof(DbSalesOrderHeaderSalesReason))]
      public static DbSalesReason SalesReason(this DbSalesOrderHeaderSalesReason self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesReason] ON [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID] = [Sales].[SalesReason].[SalesReasonID]", LeftTableType=typeof(DbSalesReason), RightTableType=typeof(DbSalesOrderHeaderSalesReason))]
      public static DbSalesReason SalesReason(this DbSalesOrderHeaderSalesReason self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Sales].[SalesPerson].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbSalesPerson))]
      public static DbEmployee BusinessEntity(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Sales].[SalesPerson].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbSalesPerson))]
      public static DbEmployee BusinessEntity(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesPerson].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesTerritory Territory(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesPerson].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesTerritory Territory(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesPersonQuotaHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesPersonQuotaHistory))]
      public static DbSalesPerson BusinessEntity(this DbSalesPersonQuotaHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesPersonQuotaHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesPersonQuotaHistory))]
      public static DbSalesPerson BusinessEntity(this DbSalesPersonQuotaHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Sales].[SalesTaxRate].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]", LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbSalesTaxRate))]
      public static DbStateProvince StateProvince(this DbSalesTaxRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Sales].[SalesTaxRate].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]", LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbSalesTaxRate))]
      public static DbStateProvince StateProvince(this DbSalesTaxRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[SalesTerritory].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]", LeftTableType=typeof(DbCountryRegion), RightTableType=typeof(DbSalesTerritory))]
      public static DbCountryRegion CountryRegion(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[SalesTerritory].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]", LeftTableType=typeof(DbCountryRegion), RightTableType=typeof(DbSalesTerritory))]
      public static DbCountryRegion CountryRegion(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesTerritoryHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesTerritoryHistory))]
      public static DbSalesPerson BusinessEntity(this DbSalesTerritoryHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesTerritoryHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesTerritoryHistory))]
      public static DbSalesPerson BusinessEntity(this DbSalesTerritoryHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesTerritoryHistory].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbSalesTerritoryHistory))]
      public static DbSalesTerritory Territory(this DbSalesTerritoryHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesTerritoryHistory].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]", LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbSalesTerritoryHistory))]
      public static DbSalesTerritory Territory(this DbSalesTerritoryHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[ShoppingCartItem].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbShoppingCartItem))]
      public static DbProduct Product(this DbShoppingCartItem self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[ShoppingCartItem].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbShoppingCartItem))]
      public static DbProduct Product(this DbShoppingCartItem self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[SpecialOfferProduct].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbSpecialOfferProduct))]
      public static DbProduct Product(this DbSpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[SpecialOfferProduct].[ProductID] = [Production].[Product].[ProductID]", LeftTableType=typeof(DbProduct), RightTableType=typeof(DbSpecialOfferProduct))]
      public static DbProduct Product(this DbSpecialOfferProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOffer] ON [Sales].[SpecialOfferProduct].[SpecialOfferID] = [Sales].[SpecialOffer].[SpecialOfferID]", LeftTableType=typeof(DbSpecialOffer), RightTableType=typeof(DbSpecialOfferProduct))]
      public static DbSpecialOffer SpecialOffer(this DbSpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOffer] ON [Sales].[SpecialOfferProduct].[SpecialOfferID] = [Sales].[SpecialOffer].[SpecialOfferID]", LeftTableType=typeof(DbSpecialOffer), RightTableType=typeof(DbSpecialOfferProduct))]
      public static DbSpecialOffer SpecialOffer(this DbSpecialOfferProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Sales].[Store].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbStore))]
      public static DbBusinessEntity BusinessEntity(this DbStore self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Sales].[Store].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]", LeftTableType=typeof(DbBusinessEntity), RightTableType=typeof(DbStore))]
      public static DbBusinessEntity BusinessEntity(this DbStore self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[Store].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbStore))]
      public static DbSalesPerson SalesPerson(this DbStore self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[Store].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]", LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbStore))]
      public static DbSalesPerson SalesPerson(this DbStore self){return null;}
      // joins for child relations
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeeDepartmentHistory] ON [HumanResources].[Department].[DepartmentID] = [HumanResources].[EmployeeDepartmentHistory].[DepartmentID]", NChilds=true, LeftTableType=typeof(DbEmployeeDepartmentHistory), RightTableType=typeof(DbDepartment))]
      public static DbEmployeeDepartmentHistory EmployeeDepartmentHistory_N(this DbDepartment self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeeDepartmentHistory] ON [HumanResources].[Department].[DepartmentID] = [HumanResources].[EmployeeDepartmentHistory].[DepartmentID]", NChilds=true, LeftTableType=typeof(DbEmployeeDepartmentHistory), RightTableType=typeof(DbDepartment))]
      public static DbEmployeeDepartmentHistory EmployeeDepartmentHistory_N(this DbDepartment self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeeDepartmentHistory] ON [HumanResources].[Employee].[BusinessEntityID] = [HumanResources].[EmployeeDepartmentHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmployeeDepartmentHistory), RightTableType=typeof(DbEmployee))]
      public static DbEmployeeDepartmentHistory EmployeeDepartmentHistory_N(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeeDepartmentHistory] ON [HumanResources].[Employee].[BusinessEntityID] = [HumanResources].[EmployeeDepartmentHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmployeeDepartmentHistory), RightTableType=typeof(DbEmployee))]
      public static DbEmployeeDepartmentHistory EmployeeDepartmentHistory_N(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeePayHistory] ON [HumanResources].[Employee].[BusinessEntityID] = [HumanResources].[EmployeePayHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmployeePayHistory), RightTableType=typeof(DbEmployee))]
      public static DbEmployeePayHistory EmployeePayHistory_N(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeePayHistory] ON [HumanResources].[Employee].[BusinessEntityID] = [HumanResources].[EmployeePayHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmployeePayHistory), RightTableType=typeof(DbEmployee))]
      public static DbEmployeePayHistory EmployeePayHistory_N(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[JobCandidate] ON [HumanResources].[Employee].[BusinessEntityID] = [HumanResources].[JobCandidate].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbJobCandidate), RightTableType=typeof(DbEmployee))]
      public static DbJobCandidate JobCandidate_N(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[JobCandidate] ON [HumanResources].[Employee].[BusinessEntityID] = [HumanResources].[JobCandidate].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbJobCandidate), RightTableType=typeof(DbEmployee))]
      public static DbJobCandidate JobCandidate_N(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Document] ON [HumanResources].[Employee].[BusinessEntityID] = [Production].[Document].[Owner]", NChilds=true, LeftTableType=typeof(DbDocument), RightTableType=typeof(DbEmployee))]
      public static DbDocument Document_N(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Document] ON [HumanResources].[Employee].[BusinessEntityID] = [Production].[Document].[Owner]", NChilds=true, LeftTableType=typeof(DbDocument), RightTableType=typeof(DbEmployee))]
      public static DbDocument Document_N(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [HumanResources].[Employee].[BusinessEntityID] = [Purchasing].[PurchaseOrderHeader].[EmployeeID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbEmployee))]
      public static DbPurchaseOrderHeader PurchaseOrderHeader_N(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [HumanResources].[Employee].[BusinessEntityID] = [Purchasing].[PurchaseOrderHeader].[EmployeeID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbEmployee))]
      public static DbPurchaseOrderHeader PurchaseOrderHeader_N(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [HumanResources].[Employee].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbEmployee))]
      public static DbSalesPerson SalesPerson_N(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [HumanResources].[Employee].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbEmployee))]
      public static DbSalesPerson SalesPerson_N(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeeDepartmentHistory] ON [HumanResources].[Shift].[ShiftID] = [HumanResources].[EmployeeDepartmentHistory].[ShiftID]", NChilds=true, LeftTableType=typeof(DbEmployeeDepartmentHistory), RightTableType=typeof(DbShift))]
      public static DbEmployeeDepartmentHistory EmployeeDepartmentHistory_N(this DbShift self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[EmployeeDepartmentHistory] ON [HumanResources].[Shift].[ShiftID] = [HumanResources].[EmployeeDepartmentHistory].[ShiftID]", NChilds=true, LeftTableType=typeof(DbEmployeeDepartmentHistory), RightTableType=typeof(DbShift))]
      public static DbEmployeeDepartmentHistory EmployeeDepartmentHistory_N(this DbShift self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityAddress] ON [Person].[Address].[AddressID] = [Person].[BusinessEntityAddress].[AddressID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityAddress), RightTableType=typeof(DbAddress))]
      public static DbBusinessEntityAddress BusinessEntityAddress_N(this DbAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityAddress] ON [Person].[Address].[AddressID] = [Person].[BusinessEntityAddress].[AddressID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityAddress), RightTableType=typeof(DbAddress))]
      public static DbBusinessEntityAddress BusinessEntityAddress_N(this DbAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Person].[Address].[AddressID] = [Sales].[SalesOrderHeader].[BillToAddressID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbAddress))]
      public static DbSalesOrderHeader SalesOrderHeaderBillToAddress_N(this DbAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Person].[Address].[AddressID] = [Sales].[SalesOrderHeader].[BillToAddressID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbAddress))]
      public static DbSalesOrderHeader SalesOrderHeaderBillToAddress_N(this DbAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Person].[Address].[AddressID] = [Sales].[SalesOrderHeader].[ShipToAddressID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbAddress))]
      public static DbSalesOrderHeader SalesOrderHeaderShipToAddress_N(this DbAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Person].[Address].[AddressID] = [Sales].[SalesOrderHeader].[ShipToAddressID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbAddress))]
      public static DbSalesOrderHeader SalesOrderHeaderShipToAddress_N(this DbAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityAddress] ON [Person].[AddressType].[AddressTypeID] = [Person].[BusinessEntityAddress].[AddressTypeID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityAddress), RightTableType=typeof(DbAddressType))]
      public static DbBusinessEntityAddress BusinessEntityAddress_N(this DbAddressType self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityAddress] ON [Person].[AddressType].[AddressTypeID] = [Person].[BusinessEntityAddress].[AddressTypeID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityAddress), RightTableType=typeof(DbAddressType))]
      public static DbBusinessEntityAddress BusinessEntityAddress_N(this DbAddressType self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityAddress] ON [Person].[BusinessEntity].[BusinessEntityID] = [Person].[BusinessEntityAddress].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityAddress), RightTableType=typeof(DbBusinessEntity))]
      public static DbBusinessEntityAddress BusinessEntityAddress_N(this DbBusinessEntity self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityAddress] ON [Person].[BusinessEntity].[BusinessEntityID] = [Person].[BusinessEntityAddress].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityAddress), RightTableType=typeof(DbBusinessEntity))]
      public static DbBusinessEntityAddress BusinessEntityAddress_N(this DbBusinessEntity self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityContact] ON [Person].[BusinessEntity].[BusinessEntityID] = [Person].[BusinessEntityContact].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityContact), RightTableType=typeof(DbBusinessEntity))]
      public static DbBusinessEntityContact BusinessEntityContact_N(this DbBusinessEntity self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityContact] ON [Person].[BusinessEntity].[BusinessEntityID] = [Person].[BusinessEntityContact].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityContact), RightTableType=typeof(DbBusinessEntity))]
      public static DbBusinessEntityContact BusinessEntityContact_N(this DbBusinessEntity self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[BusinessEntity].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPerson), RightTableType=typeof(DbBusinessEntity))]
      public static DbPerson Person_N(this DbBusinessEntity self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[BusinessEntity].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPerson), RightTableType=typeof(DbBusinessEntity))]
      public static DbPerson Person_N(this DbBusinessEntity self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Person].[BusinessEntity].[BusinessEntityID] = [Purchasing].[Vendor].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbVendor), RightTableType=typeof(DbBusinessEntity))]
      public static DbVendor Vendor_N(this DbBusinessEntity self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Person].[BusinessEntity].[BusinessEntityID] = [Purchasing].[Vendor].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbVendor), RightTableType=typeof(DbBusinessEntity))]
      public static DbVendor Vendor_N(this DbBusinessEntity self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Person].[BusinessEntity].[BusinessEntityID] = [Sales].[Store].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbStore), RightTableType=typeof(DbBusinessEntity))]
      public static DbStore Store_N(this DbBusinessEntity self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Person].[BusinessEntity].[BusinessEntityID] = [Sales].[Store].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbStore), RightTableType=typeof(DbBusinessEntity))]
      public static DbStore Store_N(this DbBusinessEntity self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityContact] ON [Person].[ContactType].[ContactTypeID] = [Person].[BusinessEntityContact].[ContactTypeID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityContact), RightTableType=typeof(DbContactType))]
      public static DbBusinessEntityContact BusinessEntityContact_N(this DbContactType self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityContact] ON [Person].[ContactType].[ContactTypeID] = [Person].[BusinessEntityContact].[ContactTypeID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityContact), RightTableType=typeof(DbContactType))]
      public static DbBusinessEntityContact BusinessEntityContact_N(this DbContactType self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Person].[CountryRegion].[CountryRegionCode] = [Person].[StateProvince].[CountryRegionCode]", NChilds=true, LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbCountryRegion))]
      public static DbStateProvince StateProvince_N(this DbCountryRegion self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Person].[CountryRegion].[CountryRegionCode] = [Person].[StateProvince].[CountryRegionCode]", NChilds=true, LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbCountryRegion))]
      public static DbStateProvince StateProvince_N(this DbCountryRegion self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CountryRegionCurrency] ON [Person].[CountryRegion].[CountryRegionCode] = [Sales].[CountryRegionCurrency].[CountryRegionCode]", NChilds=true, LeftTableType=typeof(DbCountryRegionCurrency), RightTableType=typeof(DbCountryRegion))]
      public static DbCountryRegionCurrency CountryRegionCurrency_N(this DbCountryRegion self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CountryRegionCurrency] ON [Person].[CountryRegion].[CountryRegionCode] = [Sales].[CountryRegionCurrency].[CountryRegionCode]", NChilds=true, LeftTableType=typeof(DbCountryRegionCurrency), RightTableType=typeof(DbCountryRegion))]
      public static DbCountryRegionCurrency CountryRegionCurrency_N(this DbCountryRegion self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Person].[CountryRegion].[CountryRegionCode] = [Sales].[SalesTerritory].[CountryRegionCode]", NChilds=true, LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbCountryRegion))]
      public static DbSalesTerritory SalesTerritory_N(this DbCountryRegion self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Person].[CountryRegion].[CountryRegionCode] = [Sales].[SalesTerritory].[CountryRegionCode]", NChilds=true, LeftTableType=typeof(DbSalesTerritory), RightTableType=typeof(DbCountryRegion))]
      public static DbSalesTerritory SalesTerritory_N(this DbCountryRegion self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Person].[Person].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbPerson))]
      public static DbEmployee Employee_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Person].[Person].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmployee), RightTableType=typeof(DbPerson))]
      public static DbEmployee Employee_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityContact] ON [Person].[Person].[BusinessEntityID] = [Person].[BusinessEntityContact].[PersonID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityContact), RightTableType=typeof(DbPerson))]
      public static DbBusinessEntityContact BusinessEntityContact_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntityContact] ON [Person].[Person].[BusinessEntityID] = [Person].[BusinessEntityContact].[PersonID]", NChilds=true, LeftTableType=typeof(DbBusinessEntityContact), RightTableType=typeof(DbPerson))]
      public static DbBusinessEntityContact BusinessEntityContact_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[EmailAddress] ON [Person].[Person].[BusinessEntityID] = [Person].[EmailAddress].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmailAddress), RightTableType=typeof(DbPerson))]
      public static DbEmailAddress EmailAddress_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[EmailAddress] ON [Person].[Person].[BusinessEntityID] = [Person].[EmailAddress].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbEmailAddress), RightTableType=typeof(DbPerson))]
      public static DbEmailAddress EmailAddress_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Password] ON [Person].[Person].[BusinessEntityID] = [Person].[Password].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPassword), RightTableType=typeof(DbPerson))]
      public static DbPassword Password_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Password] ON [Person].[Person].[BusinessEntityID] = [Person].[Password].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPassword), RightTableType=typeof(DbPerson))]
      public static DbPassword Password_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PersonPhone] ON [Person].[Person].[BusinessEntityID] = [Person].[PersonPhone].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPersonPhone), RightTableType=typeof(DbPerson))]
      public static DbPersonPhone PersonPhone_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PersonPhone] ON [Person].[Person].[BusinessEntityID] = [Person].[PersonPhone].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPersonPhone), RightTableType=typeof(DbPerson))]
      public static DbPersonPhone PersonPhone_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Person].[Person].[BusinessEntityID] = [Sales].[Customer].[PersonID]", NChilds=true, LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbPerson))]
      public static DbCustomer Customer_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Person].[Person].[BusinessEntityID] = [Sales].[Customer].[PersonID]", NChilds=true, LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbPerson))]
      public static DbCustomer Customer_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[PersonCreditCard] ON [Person].[Person].[BusinessEntityID] = [Sales].[PersonCreditCard].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPersonCreditCard), RightTableType=typeof(DbPerson))]
      public static DbPersonCreditCard PersonCreditCard_N(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[PersonCreditCard] ON [Person].[Person].[BusinessEntityID] = [Sales].[PersonCreditCard].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbPersonCreditCard), RightTableType=typeof(DbPerson))]
      public static DbPersonCreditCard PersonCreditCard_N(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PersonPhone] ON [Person].[PhoneNumberType].[PhoneNumberTypeID] = [Person].[PersonPhone].[PhoneNumberTypeID]", NChilds=true, LeftTableType=typeof(DbPersonPhone), RightTableType=typeof(DbPhoneNumberType))]
      public static DbPersonPhone PersonPhone_N(this DbPhoneNumberType self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PersonPhone] ON [Person].[PhoneNumberType].[PhoneNumberTypeID] = [Person].[PersonPhone].[PhoneNumberTypeID]", NChilds=true, LeftTableType=typeof(DbPersonPhone), RightTableType=typeof(DbPhoneNumberType))]
      public static DbPersonPhone PersonPhone_N(this DbPhoneNumberType self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Person].[StateProvince].[StateProvinceID] = [Person].[Address].[StateProvinceID]", NChilds=true, LeftTableType=typeof(DbAddress), RightTableType=typeof(DbStateProvince))]
      public static DbAddress Address_N(this DbStateProvince self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Person].[StateProvince].[StateProvinceID] = [Person].[Address].[StateProvinceID]", NChilds=true, LeftTableType=typeof(DbAddress), RightTableType=typeof(DbStateProvince))]
      public static DbAddress Address_N(this DbStateProvince self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTaxRate] ON [Person].[StateProvince].[StateProvinceID] = [Sales].[SalesTaxRate].[StateProvinceID]", NChilds=true, LeftTableType=typeof(DbSalesTaxRate), RightTableType=typeof(DbStateProvince))]
      public static DbSalesTaxRate SalesTaxRate_N(this DbStateProvince self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTaxRate] ON [Person].[StateProvince].[StateProvinceID] = [Sales].[SalesTaxRate].[StateProvinceID]", NChilds=true, LeftTableType=typeof(DbSalesTaxRate), RightTableType=typeof(DbStateProvince))]
      public static DbSalesTaxRate SalesTaxRate_N(this DbStateProvince self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelProductDescriptionCulture] ON [Production].[Culture].[CultureID] = [Production].[ProductModelProductDescriptionCulture].[CultureID]", NChilds=true, LeftTableType=typeof(DbProductModelProductDescriptionCulture), RightTableType=typeof(DbCulture))]
      public static DbProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this DbCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelProductDescriptionCulture] ON [Production].[Culture].[CultureID] = [Production].[ProductModelProductDescriptionCulture].[CultureID]", NChilds=true, LeftTableType=typeof(DbProductModelProductDescriptionCulture), RightTableType=typeof(DbCulture))]
      public static DbProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this DbCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDocument] ON [Production].[Document].[DocumentNode] = [Production].[ProductDocument].[DocumentNode]", NChilds=true, LeftTableType=typeof(DbProductDocument), RightTableType=typeof(DbDocument))]
      public static DbProductDocument ProductDocument_N(this DbDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDocument] ON [Production].[Document].[DocumentNode] = [Production].[ProductDocument].[DocumentNode]", NChilds=true, LeftTableType=typeof(DbProductDocument), RightTableType=typeof(DbDocument))]
      public static DbProductDocument ProductDocument_N(this DbDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelIllustration] ON [Production].[Illustration].[IllustrationID] = [Production].[ProductModelIllustration].[IllustrationID]", NChilds=true, LeftTableType=typeof(DbProductModelIllustration), RightTableType=typeof(DbIllustration))]
      public static DbProductModelIllustration ProductModelIllustration_N(this DbIllustration self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelIllustration] ON [Production].[Illustration].[IllustrationID] = [Production].[ProductModelIllustration].[IllustrationID]", NChilds=true, LeftTableType=typeof(DbProductModelIllustration), RightTableType=typeof(DbIllustration))]
      public static DbProductModelIllustration ProductModelIllustration_N(this DbIllustration self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductInventory] ON [Production].[Location].[LocationID] = [Production].[ProductInventory].[LocationID]", NChilds=true, LeftTableType=typeof(DbProductInventory), RightTableType=typeof(DbLocation))]
      public static DbProductInventory ProductInventory_N(this DbLocation self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductInventory] ON [Production].[Location].[LocationID] = [Production].[ProductInventory].[LocationID]", NChilds=true, LeftTableType=typeof(DbProductInventory), RightTableType=typeof(DbLocation))]
      public static DbProductInventory ProductInventory_N(this DbLocation self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrderRouting] ON [Production].[Location].[LocationID] = [Production].[WorkOrderRouting].[LocationID]", NChilds=true, LeftTableType=typeof(DbWorkOrderRouting), RightTableType=typeof(DbLocation))]
      public static DbWorkOrderRouting WorkOrderRouting_N(this DbLocation self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrderRouting] ON [Production].[Location].[LocationID] = [Production].[WorkOrderRouting].[LocationID]", NChilds=true, LeftTableType=typeof(DbWorkOrderRouting), RightTableType=typeof(DbLocation))]
      public static DbWorkOrderRouting WorkOrderRouting_N(this DbLocation self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[BillOfMaterials] ON [Production].[Product].[ProductID] = [Production].[BillOfMaterials].[ComponentID]", NChilds=true, LeftTableType=typeof(DbBillOfMaterials), RightTableType=typeof(DbProduct))]
      public static DbBillOfMaterials BillOfMaterialsComponent_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[BillOfMaterials] ON [Production].[Product].[ProductID] = [Production].[BillOfMaterials].[ComponentID]", NChilds=true, LeftTableType=typeof(DbBillOfMaterials), RightTableType=typeof(DbProduct))]
      public static DbBillOfMaterials BillOfMaterialsComponent_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[BillOfMaterials] ON [Production].[Product].[ProductID] = [Production].[BillOfMaterials].[ProductAssemblyID]", NChilds=true, LeftTableType=typeof(DbBillOfMaterials), RightTableType=typeof(DbProduct))]
      public static DbBillOfMaterials BillOfMaterialsProductAssembly_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[BillOfMaterials] ON [Production].[Product].[ProductID] = [Production].[BillOfMaterials].[ProductAssemblyID]", NChilds=true, LeftTableType=typeof(DbBillOfMaterials), RightTableType=typeof(DbProduct))]
      public static DbBillOfMaterials BillOfMaterialsProductAssembly_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductCostHistory] ON [Production].[Product].[ProductID] = [Production].[ProductCostHistory].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductCostHistory), RightTableType=typeof(DbProduct))]
      public static DbProductCostHistory ProductCostHistory_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductCostHistory] ON [Production].[Product].[ProductID] = [Production].[ProductCostHistory].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductCostHistory), RightTableType=typeof(DbProduct))]
      public static DbProductCostHistory ProductCostHistory_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDocument] ON [Production].[Product].[ProductID] = [Production].[ProductDocument].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductDocument), RightTableType=typeof(DbProduct))]
      public static DbProductDocument ProductDocument_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDocument] ON [Production].[Product].[ProductID] = [Production].[ProductDocument].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductDocument), RightTableType=typeof(DbProduct))]
      public static DbProductDocument ProductDocument_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductInventory] ON [Production].[Product].[ProductID] = [Production].[ProductInventory].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductInventory), RightTableType=typeof(DbProduct))]
      public static DbProductInventory ProductInventory_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductInventory] ON [Production].[Product].[ProductID] = [Production].[ProductInventory].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductInventory), RightTableType=typeof(DbProduct))]
      public static DbProductInventory ProductInventory_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductListPriceHistory] ON [Production].[Product].[ProductID] = [Production].[ProductListPriceHistory].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductListPriceHistory), RightTableType=typeof(DbProduct))]
      public static DbProductListPriceHistory ProductListPriceHistory_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductListPriceHistory] ON [Production].[Product].[ProductID] = [Production].[ProductListPriceHistory].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductListPriceHistory), RightTableType=typeof(DbProduct))]
      public static DbProductListPriceHistory ProductListPriceHistory_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductProductPhoto] ON [Production].[Product].[ProductID] = [Production].[ProductProductPhoto].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductProductPhoto), RightTableType=typeof(DbProduct))]
      public static DbProductProductPhoto ProductProductPhoto_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductProductPhoto] ON [Production].[Product].[ProductID] = [Production].[ProductProductPhoto].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductProductPhoto), RightTableType=typeof(DbProduct))]
      public static DbProductProductPhoto ProductProductPhoto_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductReview] ON [Production].[Product].[ProductID] = [Production].[ProductReview].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductReview), RightTableType=typeof(DbProduct))]
      public static DbProductReview ProductReview_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductReview] ON [Production].[Product].[ProductID] = [Production].[ProductReview].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductReview), RightTableType=typeof(DbProduct))]
      public static DbProductReview ProductReview_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[TransactionHistory] ON [Production].[Product].[ProductID] = [Production].[TransactionHistory].[ProductID]", NChilds=true, LeftTableType=typeof(DbTransactionHistory), RightTableType=typeof(DbProduct))]
      public static DbTransactionHistory TransactionHistory_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[TransactionHistory] ON [Production].[Product].[ProductID] = [Production].[TransactionHistory].[ProductID]", NChilds=true, LeftTableType=typeof(DbTransactionHistory), RightTableType=typeof(DbProduct))]
      public static DbTransactionHistory TransactionHistory_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[Product].[ProductID] = [Production].[WorkOrder].[ProductID]", NChilds=true, LeftTableType=typeof(DbWorkOrder), RightTableType=typeof(DbProduct))]
      public static DbWorkOrder WorkOrder_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[Product].[ProductID] = [Production].[WorkOrder].[ProductID]", NChilds=true, LeftTableType=typeof(DbWorkOrder), RightTableType=typeof(DbProduct))]
      public static DbWorkOrder WorkOrder_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ProductVendor] ON [Production].[Product].[ProductID] = [Purchasing].[ProductVendor].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductVendor), RightTableType=typeof(DbProduct))]
      public static DbProductVendor ProductVendor_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ProductVendor] ON [Production].[Product].[ProductID] = [Purchasing].[ProductVendor].[ProductID]", NChilds=true, LeftTableType=typeof(DbProductVendor), RightTableType=typeof(DbProduct))]
      public static DbProductVendor ProductVendor_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderDetail] ON [Production].[Product].[ProductID] = [Purchasing].[PurchaseOrderDetail].[ProductID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderDetail), RightTableType=typeof(DbProduct))]
      public static DbPurchaseOrderDetail PurchaseOrderDetail_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderDetail] ON [Production].[Product].[ProductID] = [Purchasing].[PurchaseOrderDetail].[ProductID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderDetail), RightTableType=typeof(DbProduct))]
      public static DbPurchaseOrderDetail PurchaseOrderDetail_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[ShoppingCartItem] ON [Production].[Product].[ProductID] = [Sales].[ShoppingCartItem].[ProductID]", NChilds=true, LeftTableType=typeof(DbShoppingCartItem), RightTableType=typeof(DbProduct))]
      public static DbShoppingCartItem ShoppingCartItem_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[ShoppingCartItem] ON [Production].[Product].[ProductID] = [Sales].[ShoppingCartItem].[ProductID]", NChilds=true, LeftTableType=typeof(DbShoppingCartItem), RightTableType=typeof(DbProduct))]
      public static DbShoppingCartItem ShoppingCartItem_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Production].[Product].[ProductID] = [Sales].[SpecialOfferProduct].[ProductID]", NChilds=true, LeftTableType=typeof(DbSpecialOfferProduct), RightTableType=typeof(DbProduct))]
      public static DbSpecialOfferProduct SpecialOfferProduct_N(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Production].[Product].[ProductID] = [Sales].[SpecialOfferProduct].[ProductID]", NChilds=true, LeftTableType=typeof(DbSpecialOfferProduct), RightTableType=typeof(DbProduct))]
      public static DbSpecialOfferProduct SpecialOfferProduct_N(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductSubcategory] ON [Production].[ProductCategory].[ProductCategoryID] = [Production].[ProductSubcategory].[ProductCategoryID]", NChilds=true, LeftTableType=typeof(DbProductSubcategory), RightTableType=typeof(DbProductCategory))]
      public static DbProductSubcategory ProductSubcategory_N(this DbProductCategory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductSubcategory] ON [Production].[ProductCategory].[ProductCategoryID] = [Production].[ProductSubcategory].[ProductCategoryID]", NChilds=true, LeftTableType=typeof(DbProductSubcategory), RightTableType=typeof(DbProductCategory))]
      public static DbProductSubcategory ProductSubcategory_N(this DbProductCategory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelProductDescriptionCulture] ON [Production].[ProductDescription].[ProductDescriptionID] = [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID]", NChilds=true, LeftTableType=typeof(DbProductModelProductDescriptionCulture), RightTableType=typeof(DbProductDescription))]
      public static DbProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this DbProductDescription self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelProductDescriptionCulture] ON [Production].[ProductDescription].[ProductDescriptionID] = [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID]", NChilds=true, LeftTableType=typeof(DbProductModelProductDescriptionCulture), RightTableType=typeof(DbProductDescription))]
      public static DbProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this DbProductDescription self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductModel].[ProductModelID] = [Production].[Product].[ProductModelID]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductModel))]
      public static DbProduct Product_N(this DbProductModel self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductModel].[ProductModelID] = [Production].[Product].[ProductModelID]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductModel))]
      public static DbProduct Product_N(this DbProductModel self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelIllustration] ON [Production].[ProductModel].[ProductModelID] = [Production].[ProductModelIllustration].[ProductModelID]", NChilds=true, LeftTableType=typeof(DbProductModelIllustration), RightTableType=typeof(DbProductModel))]
      public static DbProductModelIllustration ProductModelIllustration_N(this DbProductModel self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelIllustration] ON [Production].[ProductModel].[ProductModelID] = [Production].[ProductModelIllustration].[ProductModelID]", NChilds=true, LeftTableType=typeof(DbProductModelIllustration), RightTableType=typeof(DbProductModel))]
      public static DbProductModelIllustration ProductModelIllustration_N(this DbProductModel self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelProductDescriptionCulture] ON [Production].[ProductModel].[ProductModelID] = [Production].[ProductModelProductDescriptionCulture].[ProductModelID]", NChilds=true, LeftTableType=typeof(DbProductModelProductDescriptionCulture), RightTableType=typeof(DbProductModel))]
      public static DbProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this DbProductModel self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModelProductDescriptionCulture] ON [Production].[ProductModel].[ProductModelID] = [Production].[ProductModelProductDescriptionCulture].[ProductModelID]", NChilds=true, LeftTableType=typeof(DbProductModelProductDescriptionCulture), RightTableType=typeof(DbProductModel))]
      public static DbProductModelProductDescriptionCulture ProductModelProductDescriptionCulture_N(this DbProductModel self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductProductPhoto] ON [Production].[ProductPhoto].[ProductPhotoID] = [Production].[ProductProductPhoto].[ProductPhotoID]", NChilds=true, LeftTableType=typeof(DbProductProductPhoto), RightTableType=typeof(DbProductPhoto))]
      public static DbProductProductPhoto ProductProductPhoto_N(this DbProductPhoto self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductProductPhoto] ON [Production].[ProductPhoto].[ProductPhotoID] = [Production].[ProductProductPhoto].[ProductPhotoID]", NChilds=true, LeftTableType=typeof(DbProductProductPhoto), RightTableType=typeof(DbProductPhoto))]
      public static DbProductProductPhoto ProductProductPhoto_N(this DbProductPhoto self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductSubcategory].[ProductSubcategoryID] = [Production].[Product].[ProductSubcategoryID]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductSubcategory))]
      public static DbProduct Product_N(this DbProductSubcategory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductSubcategory].[ProductSubcategoryID] = [Production].[Product].[ProductSubcategoryID]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbProductSubcategory))]
      public static DbProduct Product_N(this DbProductSubcategory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[ScrapReason].[ScrapReasonID] = [Production].[WorkOrder].[ScrapReasonID]", NChilds=true, LeftTableType=typeof(DbWorkOrder), RightTableType=typeof(DbScrapReason))]
      public static DbWorkOrder WorkOrder_N(this DbScrapReason self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[ScrapReason].[ScrapReasonID] = [Production].[WorkOrder].[ScrapReasonID]", NChilds=true, LeftTableType=typeof(DbWorkOrder), RightTableType=typeof(DbScrapReason))]
      public static DbWorkOrder WorkOrder_N(this DbScrapReason self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[BillOfMaterials] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Production].[BillOfMaterials].[UnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbBillOfMaterials), RightTableType=typeof(DbUnitMeasure))]
      public static DbBillOfMaterials BillOfMaterials_N(this DbUnitMeasure self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[BillOfMaterials] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Production].[BillOfMaterials].[UnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbBillOfMaterials), RightTableType=typeof(DbUnitMeasure))]
      public static DbBillOfMaterials BillOfMaterials_N(this DbUnitMeasure self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Production].[Product].[SizeUnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbUnitMeasure))]
      public static DbProduct ProductSizeUnitMeasure_N(this DbUnitMeasure self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Production].[Product].[SizeUnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbUnitMeasure))]
      public static DbProduct ProductSizeUnitMeasure_N(this DbUnitMeasure self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Production].[Product].[WeightUnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbUnitMeasure))]
      public static DbProduct ProductWeightUnitMeasure_N(this DbUnitMeasure self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Production].[Product].[WeightUnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbProduct), RightTableType=typeof(DbUnitMeasure))]
      public static DbProduct ProductWeightUnitMeasure_N(this DbUnitMeasure self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ProductVendor] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Purchasing].[ProductVendor].[UnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbProductVendor), RightTableType=typeof(DbUnitMeasure))]
      public static DbProductVendor ProductVendor_N(this DbUnitMeasure self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ProductVendor] ON [Production].[UnitMeasure].[UnitMeasureCode] = [Purchasing].[ProductVendor].[UnitMeasureCode]", NChilds=true, LeftTableType=typeof(DbProductVendor), RightTableType=typeof(DbUnitMeasure))]
      public static DbProductVendor ProductVendor_N(this DbUnitMeasure self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrderRouting] ON [Production].[WorkOrder].[WorkOrderID] = [Production].[WorkOrderRouting].[WorkOrderID]", NChilds=true, LeftTableType=typeof(DbWorkOrderRouting), RightTableType=typeof(DbWorkOrder))]
      public static DbWorkOrderRouting WorkOrderRouting_N(this DbWorkOrder self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrderRouting] ON [Production].[WorkOrder].[WorkOrderID] = [Production].[WorkOrderRouting].[WorkOrderID]", NChilds=true, LeftTableType=typeof(DbWorkOrderRouting), RightTableType=typeof(DbWorkOrder))]
      public static DbWorkOrderRouting WorkOrderRouting_N(this DbWorkOrder self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderDetail] ON [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderDetail), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbPurchaseOrderDetail PurchaseOrderDetail_N(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderDetail] ON [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderDetail), RightTableType=typeof(DbPurchaseOrderHeader))]
      public static DbPurchaseOrderDetail PurchaseOrderDetail_N(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[ShipMethod].[ShipMethodID] = [Purchasing].[PurchaseOrderHeader].[ShipMethodID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbShipMethod))]
      public static DbPurchaseOrderHeader PurchaseOrderHeader_N(this DbShipMethod self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[ShipMethod].[ShipMethodID] = [Purchasing].[PurchaseOrderHeader].[ShipMethodID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbShipMethod))]
      public static DbPurchaseOrderHeader PurchaseOrderHeader_N(this DbShipMethod self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Purchasing].[ShipMethod].[ShipMethodID] = [Sales].[SalesOrderHeader].[ShipMethodID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbShipMethod))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbShipMethod self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Purchasing].[ShipMethod].[ShipMethodID] = [Sales].[SalesOrderHeader].[ShipMethodID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbShipMethod))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbShipMethod self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ProductVendor] ON [Purchasing].[Vendor].[BusinessEntityID] = [Purchasing].[ProductVendor].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbProductVendor), RightTableType=typeof(DbVendor))]
      public static DbProductVendor ProductVendor_N(this DbVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ProductVendor] ON [Purchasing].[Vendor].[BusinessEntityID] = [Purchasing].[ProductVendor].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbProductVendor), RightTableType=typeof(DbVendor))]
      public static DbProductVendor ProductVendor_N(this DbVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[Vendor].[BusinessEntityID] = [Purchasing].[PurchaseOrderHeader].[VendorID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbVendor))]
      public static DbPurchaseOrderHeader PurchaseOrderHeader_N(this DbVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[Vendor].[BusinessEntityID] = [Purchasing].[PurchaseOrderHeader].[VendorID]", NChilds=true, LeftTableType=typeof(DbPurchaseOrderHeader), RightTableType=typeof(DbVendor))]
      public static DbPurchaseOrderHeader PurchaseOrderHeader_N(this DbVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[PersonCreditCard] ON [Sales].[CreditCard].[CreditCardID] = [Sales].[PersonCreditCard].[CreditCardID]", NChilds=true, LeftTableType=typeof(DbPersonCreditCard), RightTableType=typeof(DbCreditCard))]
      public static DbPersonCreditCard PersonCreditCard_N(this DbCreditCard self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[PersonCreditCard] ON [Sales].[CreditCard].[CreditCardID] = [Sales].[PersonCreditCard].[CreditCardID]", NChilds=true, LeftTableType=typeof(DbPersonCreditCard), RightTableType=typeof(DbCreditCard))]
      public static DbPersonCreditCard PersonCreditCard_N(this DbCreditCard self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[CreditCard].[CreditCardID] = [Sales].[SalesOrderHeader].[CreditCardID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbCreditCard))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbCreditCard self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[CreditCard].[CreditCardID] = [Sales].[SalesOrderHeader].[CreditCardID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbCreditCard))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbCreditCard self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CountryRegionCurrency] ON [Sales].[Currency].[CurrencyCode] = [Sales].[CountryRegionCurrency].[CurrencyCode]", NChilds=true, LeftTableType=typeof(DbCountryRegionCurrency), RightTableType=typeof(DbCurrency))]
      public static DbCountryRegionCurrency CountryRegionCurrency_N(this DbCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CountryRegionCurrency] ON [Sales].[Currency].[CurrencyCode] = [Sales].[CountryRegionCurrency].[CurrencyCode]", NChilds=true, LeftTableType=typeof(DbCountryRegionCurrency), RightTableType=typeof(DbCurrency))]
      public static DbCountryRegionCurrency CountryRegionCurrency_N(this DbCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[Currency].[CurrencyCode] = [Sales].[CurrencyRate].[FromCurrencyCode]", NChilds=true, LeftTableType=typeof(DbCurrencyRate), RightTableType=typeof(DbCurrency))]
      public static DbCurrencyRate CurrencyRateFromCurrency_N(this DbCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[Currency].[CurrencyCode] = [Sales].[CurrencyRate].[FromCurrencyCode]", NChilds=true, LeftTableType=typeof(DbCurrencyRate), RightTableType=typeof(DbCurrency))]
      public static DbCurrencyRate CurrencyRateFromCurrency_N(this DbCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[Currency].[CurrencyCode] = [Sales].[CurrencyRate].[ToCurrencyCode]", NChilds=true, LeftTableType=typeof(DbCurrencyRate), RightTableType=typeof(DbCurrency))]
      public static DbCurrencyRate CurrencyRateToCurrency_N(this DbCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[Currency].[CurrencyCode] = [Sales].[CurrencyRate].[ToCurrencyCode]", NChilds=true, LeftTableType=typeof(DbCurrencyRate), RightTableType=typeof(DbCurrency))]
      public static DbCurrencyRate CurrencyRateToCurrency_N(this DbCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[CurrencyRate].[CurrencyRateID] = [Sales].[SalesOrderHeader].[CurrencyRateID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbCurrencyRate))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbCurrencyRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[CurrencyRate].[CurrencyRateID] = [Sales].[SalesOrderHeader].[CurrencyRateID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbCurrencyRate))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbCurrencyRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[Customer].[CustomerID] = [Sales].[SalesOrderHeader].[CustomerID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbCustomer))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[Customer].[CustomerID] = [Sales].[SalesOrderHeader].[CustomerID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbCustomer))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderDetail] ON [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID]", NChilds=true, LeftTableType=typeof(DbSalesOrderDetail), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesOrderDetail SalesOrderDetail_N(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderDetail] ON [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID]", NChilds=true, LeftTableType=typeof(DbSalesOrderDetail), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesOrderDetail SalesOrderDetail_N(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeaderSalesReason] ON [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeaderSalesReason), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeaderSalesReason] ON [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeaderSalesReason), RightTableType=typeof(DbSalesOrderHeader))]
      public static DbSalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesOrderHeader].[SalesPersonID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesOrderHeader].[SalesPersonID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPersonQuotaHistory] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesPersonQuotaHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbSalesPersonQuotaHistory), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesPersonQuotaHistory SalesPersonQuotaHistory_N(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPersonQuotaHistory] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesPersonQuotaHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbSalesPersonQuotaHistory), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesPersonQuotaHistory SalesPersonQuotaHistory_N(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritoryHistory] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesTerritoryHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbSalesTerritoryHistory), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesTerritoryHistory SalesTerritoryHistory_N(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritoryHistory] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesTerritoryHistory].[BusinessEntityID]", NChilds=true, LeftTableType=typeof(DbSalesTerritoryHistory), RightTableType=typeof(DbSalesPerson))]
      public static DbSalesTerritoryHistory SalesTerritoryHistory_N(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[Store].[SalesPersonID]", NChilds=true, LeftTableType=typeof(DbStore), RightTableType=typeof(DbSalesPerson))]
      public static DbStore Store_N(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[Store].[SalesPersonID]", NChilds=true, LeftTableType=typeof(DbStore), RightTableType=typeof(DbSalesPerson))]
      public static DbStore Store_N(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeaderSalesReason] ON [Sales].[SalesReason].[SalesReasonID] = [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeaderSalesReason), RightTableType=typeof(DbSalesReason))]
      public static DbSalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this DbSalesReason self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeaderSalesReason] ON [Sales].[SalesReason].[SalesReasonID] = [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeaderSalesReason), RightTableType=typeof(DbSalesReason))]
      public static DbSalesOrderHeaderSalesReason SalesOrderHeaderSalesReason_N(this DbSalesReason self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Sales].[SalesTerritory].[TerritoryID] = [Person].[StateProvince].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbSalesTerritory))]
      public static DbStateProvince StateProvince_N(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Sales].[SalesTerritory].[TerritoryID] = [Person].[StateProvince].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbStateProvince), RightTableType=typeof(DbSalesTerritory))]
      public static DbStateProvince StateProvince_N(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[Customer].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbSalesTerritory))]
      public static DbCustomer Customer_N(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[Customer].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbSalesTerritory))]
      public static DbCustomer Customer_N(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesTerritory))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbSalesOrderHeader), RightTableType=typeof(DbSalesTerritory))]
      public static DbSalesOrderHeader SalesOrderHeader_N(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesPerson].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesTerritory))]
      public static DbSalesPerson SalesPerson_N(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesPerson].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbSalesPerson), RightTableType=typeof(DbSalesTerritory))]
      public static DbSalesPerson SalesPerson_N(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritoryHistory] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesTerritoryHistory].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbSalesTerritoryHistory), RightTableType=typeof(DbSalesTerritory))]
      public static DbSalesTerritoryHistory SalesTerritoryHistory_N(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritoryHistory] ON [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesTerritoryHistory].[TerritoryID]", NChilds=true, LeftTableType=typeof(DbSalesTerritoryHistory), RightTableType=typeof(DbSalesTerritory))]
      public static DbSalesTerritoryHistory SalesTerritoryHistory_N(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Sales].[SpecialOffer].[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]", NChilds=true, LeftTableType=typeof(DbSpecialOfferProduct), RightTableType=typeof(DbSpecialOffer))]
      public static DbSpecialOfferProduct SpecialOfferProduct_N(this DbSpecialOffer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Sales].[SpecialOffer].[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]", NChilds=true, LeftTableType=typeof(DbSpecialOfferProduct), RightTableType=typeof(DbSpecialOffer))]
      public static DbSpecialOfferProduct SpecialOfferProduct_N(this DbSpecialOffer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderDetail] ON [Sales].[SpecialOfferProduct].[ProductID] = [Sales].[SalesOrderDetail].[ProductID] AND [Sales].[SpecialOfferProduct].[SpecialOfferID] = [Sales].[SalesOrderDetail].[SpecialOfferID]", NChilds=true, LeftTableType=typeof(DbSalesOrderDetail), RightTableType=typeof(DbSpecialOfferProduct))]
      public static DbSalesOrderDetail SalesOrderDetailProductSpecialOffer_N(this DbSpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderDetail] ON [Sales].[SpecialOfferProduct].[ProductID] = [Sales].[SalesOrderDetail].[ProductID] AND [Sales].[SpecialOfferProduct].[SpecialOfferID] = [Sales].[SalesOrderDetail].[SpecialOfferID]", NChilds=true, LeftTableType=typeof(DbSalesOrderDetail), RightTableType=typeof(DbSpecialOfferProduct))]
      public static DbSalesOrderDetail SalesOrderDetailProductSpecialOffer_N(this DbSpecialOfferProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[Store].[BusinessEntityID] = [Sales].[Customer].[StoreID]", NChilds=true, LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbStore))]
      public static DbCustomer Customer_N(this DbStore self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[Store].[BusinessEntityID] = [Sales].[Customer].[StoreID]", NChilds=true, LeftTableType=typeof(DbCustomer), RightTableType=typeof(DbStore))]
      public static DbCustomer Customer_N(this DbStore self){return null;}
   }
}


