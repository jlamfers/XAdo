
//------------------------------------------------------------------------------
// <auto-generated timestamp="2016-12-15T15:07:40.1381259Z">
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using XAdo.SqlObjects.DbSchema;
using XAdo.SqlObjects.DbSchema.Attributes;

namespace DbSchema
{
   public static partial class Users
   {
      public abstract partial class DbBaseTable : IDbTable {}
      
      [Table("Role", Schema="dbo")]
      [ReferencedBy(new []{typeof(Users.UserRole)})]
      public partial class Role : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? Id {get; set;}
         [Required, MaxLength(50)]
         public virtual String Name {get; set;}
      }
      [Table("sysdiagrams", Schema="dbo")]
      public partial class sysdiagrams : DbBaseTable
      {
         [Required, MaxLength(128)]
         public virtual String name {get; set;}
         [Required]
         public virtual Int32? principal_id {get; set;}
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? diagram_id {get; set;}
         public virtual Int32? version {get; set;}
         public virtual Byte[] definition {get; set;}
      }
      [Table("Type", Schema="dbo")]
      [ReferencedBy(new []{typeof(Users.UserType)})]
      public partial class Type : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? Id {get; set;}
         [Required, MaxLength(50)]
         public virtual String Name {get; set;}
      }
      [Table("User", Schema="dbo")]
      [ReferencedBy(new []{typeof(Users.UserRole), typeof(Users.UserType)})]
      public partial class User : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? Id {get; set;}
         [Required, MaxLength(256)]
         public virtual String UserName {get; set;}
         [MaxLength(256)]
         public virtual String Email {get; set;}
         [MaxLength(256)]
         public virtual String Password {get; set;}
      }
      [Table("UserRole", Schema="dbo")]
      public partial class UserRole : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? Id {get; set;}
         [Required]
         [References( Type=typeof(Users.User), MemberName="Id", ColumnName="Id", FKeyName="FK_UserRole_User")]
         public virtual Int32? UserId {get; set;}
         [Required]
         [References( Type=typeof(Users.Role), MemberName="Id", ColumnName="Id", FKeyName="FK_UserRole_Role")]
         public virtual Int32? RoleId {get; set;}
      }
      [Table("UserType", Schema="dbo")]
      public partial class UserType : DbBaseTable
      {
         [Key, DbAutoIncrement, DbUnique, Required]
         public virtual Int32? Id {get; set;}
         [Required]
         [References( Type=typeof(Users.User), MemberName="Id", ColumnName="Id", FKeyName="FK_UserType_User")]
         public virtual Int32? UserId {get; set;}
         [Required]
         [References( Type=typeof(Users.Type), MemberName="Id", ColumnName="Id", FKeyName="FK_UserType_Type")]
         public virtual Int32? TypeId {get; set;}
      }
   }
   
   public static partial class JoinExtension
   {
      [JoinMethod(RelationshipName="FK_UserRole_Role")]
      public static Users.Role Role(this Users.UserRole self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_Role")]
      public static Users.Role Role(this Users.UserRole self){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User")]
      public static Users.User User(this Users.UserRole self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User")]
      public static Users.User User(this Users.UserRole self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type")]
      public static Users.Type Type(this Users.UserType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type")]
      public static Users.Type Type(this Users.UserType self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User")]
      public static Users.User User(this Users.UserType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User")]
      public static Users.User User(this Users.UserType self){return null;}
      // joins for child relations
      [JoinMethod(RelationshipName="FK_UserRole_Role", Reversed=true)]
      public static Users.UserRole UserRole_N(this Users.Role self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_Role", Reversed = true)]
      public static Users.UserRole UserRole_N(this Users.Role self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type", Reversed=true)]
      public static Users.UserType UserType_N(this Users.Type self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type", Reversed = true)]
      public static Users.UserType UserType_N(this Users.Type self){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User", Reversed=true)]
      public static Users.UserRole UserRole_N(this Users.User self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User", Reversed = true)]
      public static Users.UserRole UserRole_N(this Users.User self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User", Reversed=true)]
      public static Users.UserType UserType_N(this Users.User self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User", Reversed = true)]
      public static Users.UserType UserType_N(this Users.User self){return null;}
   }
}


