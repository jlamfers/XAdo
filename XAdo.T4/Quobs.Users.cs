
//------------------------------------------------------------------------------
// <auto-generated timestamp="2016-12-09T13:49:46.4179610Z">
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using XAdo.Quobs.DbSchema.Attributes;

namespace DbSchema.Users
{
   public abstract partial class DbBaseTable : IDbTable {}
   
   [Table("Role", Schema="dbo")]
   [ReferencedBy(new []{typeof(UserRole)})]
   public partial class Role : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? Id {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
   }
   [Table("sysdiagrams", Schema="dbo")]
   public partial class sysdiagrams : DbBaseTable
   {
      [Required, MaxLength(128)]
      public virtual String name {get; set;}
      [Required]
      public virtual Int32? principal_id {get; set;}
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? diagram_id {get; set;}
      public virtual Int32? version {get; set;}
      public virtual Byte[] definition {get; set;}
   }
   [Table("Type", Schema="dbo")]
   [ReferencedBy(new []{typeof(UserType)})]
   public partial class Type : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? Id {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
   }
   [Table("User", Schema="dbo")]
   [ReferencedBy(new []{typeof(UserRole), typeof(UserType)})]
   public partial class User : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? Id {get; set;}
      [Required, MaxLength(256)]
      public virtual String UserName {get; set;}
      [MaxLength(256)]
      public virtual String Email {get; set;}
      [MaxLength(256)]
      public virtual String Password {get; set;}
   }
   [Table("UserRole", Schema="dbo")]
   public partial class UserRole : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? Id {get; set;}
      [Required]
      [References( Type=typeof(User), MemberName="Id", ColumnName="Id", FKeyName="FK_UserRole_User")]
      public virtual Int32? UserId {get; set;}
      [Required]
      [References( Type=typeof(Role), MemberName="Id", ColumnName="Id", FKeyName="FK_UserRole_Role")]
      public virtual Int32? RoleId {get; set;}
   }
   [Table("UserType", Schema="dbo")]
   public partial class UserType : DbBaseTable
   {
      [Key, DbAutoIncrement, DbUnique, Required]
      public virtual Int32? Id {get; set;}
      [Required]
      [References( Type=typeof(User), MemberName="Id", ColumnName="Id", FKeyName="FK_UserType_User")]
      public virtual Int32? UserId {get; set;}
      [Required]
      [References( Type=typeof(Type), MemberName="Id", ColumnName="Id", FKeyName="FK_UserType_Type")]
      public virtual Int32? TypeId {get; set;}
   }
   
   public static partial class JoinExtension
   {
      [JoinMethod(RelationshipName="FK_UserRole_Role")]
      public static Role Role(this UserRole self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_Role")]
      public static Role Role(this UserRole self){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User")]
      public static User User(this UserRole self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User")]
      public static User User(this UserRole self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type")]
      public static Type Type(this UserType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type")]
      public static Type Type(this UserType self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User")]
      public static User User(this UserType self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User")]
      public static User User(this UserType self){return null;}
      // joins for child relations
      [JoinMethod(RelationshipName="FK_UserRole_Role", Reversed=true)]
      public static UserRole UserRole_N(this Role self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_Role", Reversed = true)]
      public static UserRole UserRole_N(this Role self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type", Reversed=true)]
      public static UserType UserType_N(this Type self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_Type", Reversed = true)]
      public static UserType UserType_N(this Type self){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User", Reversed=true)]
      public static UserRole UserRole_N(this User self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserRole_User", Reversed = true)]
      public static UserRole UserRole_N(this User self){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User", Reversed=true)]
      public static UserType UserType_N(this User self, JoinType join){return null;}
      [JoinMethod(RelationshipName="FK_UserType_User", Reversed = true)]
      public static UserType UserType_N(this User self){return null;}
   }
}


