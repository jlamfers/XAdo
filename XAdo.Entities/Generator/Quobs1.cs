
//------------------------------------------------------------------------------
// <auto-generated timestamp="2016-10-12T12:13:21.3891798Z">
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.SqlServer.Types;
using XAdo.Quobs.Attributes;

namespace XAdo.Quobs.Generator
{
   [Table(TableName = "dbo.AWBuildVersion")]
   public partial class DbAWBuildVersion
   {
      [Key, Unique, Required]
      public virtual Byte? SystemInformationID {get; set;}
      [Required, MaxLength(25), Column(ColumnName = "Database Version")]
      public virtual String Database_Version {get; set;}
      [Required]
      public virtual DateTime? VersionDate {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "dbo.DatabaseLog")]
   public partial class DbDatabaseLog
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? DatabaseLogID {get; set;}
      [Required]
      public virtual DateTime? PostTime {get; set;}
      [Required, MaxLength(128)]
      public virtual String DatabaseUser {get; set;}
      [Required, MaxLength(128)]
      public virtual String Event {get; set;}
      [MaxLength(128)]
      public virtual String Schema {get; set;}
      [MaxLength(128)]
      public virtual String Object {get; set;}
      [Required]
      public virtual String TSQL {get; set;}
      [Required]
      public virtual String XmlEvent {get; set;}
   }
   [Table(TableName = "dbo.ErrorLog")]
   public partial class DbErrorLog
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ErrorLogID {get; set;}
      [Required]
      public virtual DateTime? ErrorTime {get; set;}
      [Required, MaxLength(128)]
      public virtual String UserName {get; set;}
      [Required]
      public virtual Int32? ErrorNumber {get; set;}
      public virtual Int32? ErrorSeverity {get; set;}
      public virtual Int32? ErrorState {get; set;}
      [MaxLength(126)]
      public virtual String ErrorProcedure {get; set;}
      public virtual Int32? ErrorLine {get; set;}
      [Required, MaxLength(4000)]
      public virtual String ErrorMessage {get; set;}
   }
   [Table(TableName = "dbo.sysdiagrams")]
   public partial class Dbsysdiagrams
   {
      [Required, MaxLength(128)]
      public virtual String name {get; set;}
      [Required]
      public virtual Int32? principal_id {get; set;}
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? diagram_id {get; set;}
      public virtual Int32? version {get; set;}
      public virtual Byte[] definition {get; set;}
   }
   [Table(TableName = "dbo.Table_1")]
   public partial class DbTable_1
   {
      [Key, Unique, Required]
      public virtual Int32? Id {get; set;}
      [Required, MaxLength(30)]
      public virtual String Name {get; set;}
   }
   [Table(TableName = "HumanResources.Department")]
   [ReferencedBy(new []{typeof(DbEmployeeDepartmentHistory)})]
   public partial class DbDepartment
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int16? DepartmentID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String GroupName {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.Employee")]
   [ReferencedBy(new []{typeof(DbEmployeeDepartmentHistory), typeof(DbEmployeePayHistory), typeof(DbJobCandidate), typeof(DbDocument), typeof(DbPurchaseOrderHeader), typeof(DbSalesPerson)})]
   public partial class DbEmployee
   {
      [Key, Unique, Required]
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Employee_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(15)]
      public virtual String NationalIDNumber {get; set;}
      [Required, MaxLength(256)]
      public virtual String LoginID {get; set;}
      public virtual SqlHierarchyId? OrganizationNode {get; set;}
      public virtual Int16? OrganizationLevel {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [Required]
      public virtual DateTime? BirthDate {get; set;}
      [Required, MaxLength(1)]
      public virtual String MaritalStatus {get; set;}
      [Required, MaxLength(1)]
      public virtual String Gender {get; set;}
      [Required]
      public virtual DateTime? HireDate {get; set;}
      [Required]
      public virtual Boolean? SalariedFlag {get; set;}
      [Required]
      public virtual Int16? VacationHours {get; set;}
      [Required]
      public virtual Int16? SickLeaveHours {get; set;}
      [Required]
      public virtual Boolean? CurrentFlag {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.EmployeeDepartmentHistory")]
   public partial class DbEmployeeDepartmentHistory
   {
      [Key, Required]
      [References( Type=typeof(DbEmployee), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_EmployeeDepartmentHistory_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbDepartment), Member="DepartmentID", Column="DepartmentID", Constraint="FK_EmployeeDepartmentHistory_Department_DepartmentID")]
      public virtual Int16? DepartmentID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbShift), Member="ShiftID", Column="ShiftID", Constraint="FK_EmployeeDepartmentHistory_Shift_ShiftID")]
      public virtual Byte? ShiftID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.EmployeePayHistory")]
   public partial class DbEmployeePayHistory
   {
      [Key, Required]
      [References( Type=typeof(DbEmployee), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_EmployeePayHistory_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      public virtual DateTime? RateChangeDate {get; set;}
      [Required]
      public virtual Decimal? Rate {get; set;}
      [Required]
      public virtual Byte? PayFrequency {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.JobCandidate")]
   public partial class DbJobCandidate
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      [References( Type=typeof(DbEmployee), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_JobCandidate_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      public virtual String Resume {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.Shift")]
   [ReferencedBy(new []{typeof(DbEmployeeDepartmentHistory)})]
   public partial class DbShift
   {
      [Key, Unique, Required]
      public virtual Byte? ShiftID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual TimeSpan? StartTime {get; set;}
      [Required]
      public virtual TimeSpan? EndTime {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.Address")]
   [ReferencedBy(new []{typeof(DbBusinessEntityAddress), typeof(DbSalesOrderHeader)})]
   public partial class DbAddress
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? AddressID {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required]
      [References( Type=typeof(DbStateProvince), Member="StateProvinceID", Column="StateProvinceID", Constraint="FK_Address_StateProvince_StateProvinceID")]
      public virtual Int32? StateProvinceID {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      public virtual SqlGeography SpatialLocation {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.AddressType")]
   [ReferencedBy(new []{typeof(DbBusinessEntityAddress)})]
   public partial class DbAddressType
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? AddressTypeID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.BusinessEntity")]
   [ReferencedBy(new []{typeof(DbBusinessEntityAddress), typeof(DbBusinessEntityContact), typeof(DbPerson), typeof(DbVendor), typeof(DbStore)})]
   public partial class DbBusinessEntity
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.BusinessEntityAddress")]
   public partial class DbBusinessEntityAddress
   {
      [Key, Required]
      [References( Type=typeof(DbBusinessEntity), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbAddress), Member="AddressID", Column="AddressID", Constraint="FK_BusinessEntityAddress_Address_AddressID")]
      public virtual Int32? AddressID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbAddressType), Member="AddressTypeID", Column="AddressTypeID", Constraint="FK_BusinessEntityAddress_AddressType_AddressTypeID")]
      public virtual Int32? AddressTypeID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.BusinessEntityContact")]
   public partial class DbBusinessEntityContact
   {
      [Key, Required]
      [References( Type=typeof(DbBusinessEntity), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_BusinessEntityContact_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_BusinessEntityContact_Person_PersonID")]
      public virtual Int32? PersonID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbContactType), Member="ContactTypeID", Column="ContactTypeID", Constraint="FK_BusinessEntityContact_ContactType_ContactTypeID")]
      public virtual Int32? ContactTypeID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.ContactType")]
   [ReferencedBy(new []{typeof(DbBusinessEntityContact)})]
   public partial class DbContactType
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ContactTypeID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.CountryRegion")]
   [ReferencedBy(new []{typeof(DbStateProvince), typeof(DbCountryRegionCurrency), typeof(DbSalesTerritory)})]
   public partial class DbCountryRegion
   {
      [Key, Unique, Required, MaxLength(3)]
      public virtual String CountryRegionCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.EmailAddress")]
   public partial class DbEmailAddress
   {
      [Key, Required]
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_EmailAddress_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, AutoIncrement, Required]
      public virtual Int32? EmailAddressID {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.Password")]
   public partial class DbPassword
   {
      [Key, Unique, Required]
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Password_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(128)]
      public virtual String PasswordHash {get; set;}
      [Required, MaxLength(10)]
      public virtual String PasswordSalt {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.Person")]
   [ReferencedBy(new []{typeof(DbEmployee), typeof(DbBusinessEntityContact), typeof(DbEmailAddress), typeof(DbPassword), typeof(DbPersonPhone), typeof(DbCustomer), typeof(DbPersonCreditCard)})]
   public partial class DbPerson
   {
      [Key, Unique, Required]
      [References( Type=typeof(DbBusinessEntity), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Person_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(2)]
      public virtual String PersonType {get; set;}
      [Required]
      public virtual Boolean? NameStyle {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      public virtual String AdditionalContactInfo {get; set;}
      public virtual String Demographics {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.PersonPhone")]
   public partial class DbPersonPhone
   {
      [Key, Required]
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_PersonPhone_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required, MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [Key, Required]
      [References( Type=typeof(DbPhoneNumberType), Member="PhoneNumberTypeID", Column="PhoneNumberTypeID", Constraint="FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID")]
      public virtual Int32? PhoneNumberTypeID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.PhoneNumberType")]
   [ReferencedBy(new []{typeof(DbPersonPhone)})]
   public partial class DbPhoneNumberType
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? PhoneNumberTypeID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.StateProvince")]
   [ReferencedBy(new []{typeof(DbAddress), typeof(DbSalesTaxRate)})]
   public partial class DbStateProvince
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? StateProvinceID {get; set;}
      [Required, MaxLength(3)]
      public virtual String StateProvinceCode {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCountryRegion), Member="CountryRegionCode", Column="CountryRegionCode", Constraint="FK_StateProvince_CountryRegion_CountryRegionCode")]
      public virtual String CountryRegionCode {get; set;}
      [Required]
      public virtual Boolean? IsOnlyStateProvinceFlag {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      [References( Type=typeof(DbSalesTerritory), Member="TerritoryID", Column="TerritoryID", Constraint="FK_StateProvince_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.BillOfMaterials")]
   public partial class DbBillOfMaterials
   {
      [Key, AutoIncrement, Required]
      public virtual Int32? BillOfMaterialsID {get; set;}
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_BillOfMaterials_Product_ProductAssemblyID")]
      public virtual Int32? ProductAssemblyID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_BillOfMaterials_Product_ComponentID")]
      public virtual Int32? ComponentID {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), Member="UnitMeasureCode", Column="UnitMeasureCode", Constraint="FK_BillOfMaterials_UnitMeasure_UnitMeasureCode")]
      public virtual String UnitMeasureCode {get; set;}
      [Required]
      public virtual Int16? BOMLevel {get; set;}
      [Required]
      public virtual Decimal? PerAssemblyQty {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.Culture")]
   [ReferencedBy(new []{typeof(DbProductModelProductDescriptionCulture)})]
   public partial class DbCulture
   {
      [Key, Unique, Required, MaxLength(6)]
      public virtual String CultureID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.Document")]
   [ReferencedBy(new []{typeof(DbProductDocument)})]
   public partial class DbDocument
   {
      [Key, Unique, Required]
      public virtual SqlHierarchyId? DocumentNode {get; set;}
      public virtual Int16? DocumentLevel {get; set;}
      [Required, MaxLength(50)]
      public virtual String Title {get; set;}
      [Required]
      [References( Type=typeof(DbEmployee), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Document_Employee_Owner")]
      public virtual Int32? Owner {get; set;}
      [Required]
      public virtual Boolean? FolderFlag {get; set;}
      [Required, MaxLength(400)]
      public virtual String FileName {get; set;}
      [Required, MaxLength(8)]
      public virtual String FileExtension {get; set;}
      [Required, MaxLength(5)]
      public virtual String Revision {get; set;}
      [Required]
      public virtual Int32? ChangeNumber {get; set;}
      [Required]
      public virtual Byte? Status {get; set;}
      public virtual String DocumentSummary {get; set;}
      public virtual Byte[] Document {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.Illustration")]
   [ReferencedBy(new []{typeof(DbProductModelIllustration)})]
   public partial class DbIllustration
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? IllustrationID {get; set;}
      public virtual String Diagram {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.Location")]
   [ReferencedBy(new []{typeof(DbProductInventory), typeof(DbWorkOrderRouting)})]
   public partial class DbLocation
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int16? LocationID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Decimal? CostRate {get; set;}
      [Required]
      public virtual Decimal? Availability {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.Product")]
   [ReferencedBy(new []{typeof(DbBillOfMaterials), typeof(DbProductCostHistory), typeof(DbProductDocument), typeof(DbProductInventory), typeof(DbProductListPriceHistory), typeof(DbProductProductPhoto), typeof(DbProductReview), typeof(DbTransactionHistory), typeof(DbWorkOrder), typeof(DbProductVendor), typeof(DbPurchaseOrderDetail), typeof(DbShoppingCartItem), typeof(DbSpecialOfferProduct)})]
   public partial class DbProduct
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(25)]
      public virtual String ProductNumber {get; set;}
      [Required]
      public virtual Boolean? MakeFlag {get; set;}
      [Required]
      public virtual Boolean? FinishedGoodsFlag {get; set;}
      [MaxLength(15)]
      public virtual String Color {get; set;}
      [Required]
      public virtual Int16? SafetyStockLevel {get; set;}
      [Required]
      public virtual Int16? ReorderPoint {get; set;}
      [Required]
      public virtual Decimal? StandardCost {get; set;}
      [Required]
      public virtual Decimal? ListPrice {get; set;}
      [MaxLength(5)]
      public virtual String Size {get; set;}
      [MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), Member="UnitMeasureCode", Column="UnitMeasureCode", Constraint="FK_Product_UnitMeasure_SizeUnitMeasureCode")]
      public virtual String SizeUnitMeasureCode {get; set;}
      [MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), Member="UnitMeasureCode", Column="UnitMeasureCode", Constraint="FK_Product_UnitMeasure_WeightUnitMeasureCode")]
      public virtual String WeightUnitMeasureCode {get; set;}
      public virtual Decimal? Weight {get; set;}
      [Required]
      public virtual Int32? DaysToManufacture {get; set;}
      [MaxLength(2)]
      public virtual String ProductLine {get; set;}
      [MaxLength(2)]
      public virtual String Class {get; set;}
      [MaxLength(2)]
      public virtual String Style {get; set;}
      [References( Type=typeof(DbProductSubcategory), Member="ProductSubcategoryID", Column="ProductSubcategoryID", Constraint="FK_Product_ProductSubcategory_ProductSubcategoryID")]
      public virtual Int32? ProductSubcategoryID {get; set;}
      [References( Type=typeof(DbProductModel), Member="ProductModelID", Column="ProductModelID", Constraint="FK_Product_ProductModel_ProductModelID")]
      public virtual Int32? ProductModelID {get; set;}
      [Required]
      public virtual DateTime? SellStartDate {get; set;}
      public virtual DateTime? SellEndDate {get; set;}
      public virtual DateTime? DiscontinuedDate {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductCategory")]
   [ReferencedBy(new []{typeof(DbProductSubcategory)})]
   public partial class DbProductCategory
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductCategoryID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductCostHistory")]
   public partial class DbProductCostHistory
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductCostHistory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Decimal? StandardCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductDescription")]
   [ReferencedBy(new []{typeof(DbProductModelProductDescriptionCulture)})]
   public partial class DbProductDescription
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductDescriptionID {get; set;}
      [Required, MaxLength(400)]
      public virtual String Description {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductDocument")]
   public partial class DbProductDocument
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductDocument_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbDocument), Member="DocumentNode", Column="DocumentNode", Constraint="FK_ProductDocument_Document_DocumentNode")]
      public virtual SqlHierarchyId? DocumentNode {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductInventory")]
   public partial class DbProductInventory
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductInventory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbLocation), Member="LocationID", Column="LocationID", Constraint="FK_ProductInventory_Location_LocationID")]
      public virtual Int16? LocationID {get; set;}
      [Required, MaxLength(10)]
      public virtual String Shelf {get; set;}
      [Required]
      public virtual Byte? Bin {get; set;}
      [Required]
      public virtual Int16? Quantity {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductListPriceHistory")]
   public partial class DbProductListPriceHistory
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductListPriceHistory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Decimal? ListPrice {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductModel")]
   [ReferencedBy(new []{typeof(DbProduct), typeof(DbProductModelIllustration), typeof(DbProductModelProductDescriptionCulture)})]
   public partial class DbProductModel
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductModelID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual String CatalogDescription {get; set;}
      public virtual String Instructions {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductModelIllustration")]
   public partial class DbProductModelIllustration
   {
      [Key, Required]
      [References( Type=typeof(DbProductModel), Member="ProductModelID", Column="ProductModelID", Constraint="FK_ProductModelIllustration_ProductModel_ProductModelID")]
      public virtual Int32? ProductModelID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbIllustration), Member="IllustrationID", Column="IllustrationID", Constraint="FK_ProductModelIllustration_Illustration_IllustrationID")]
      public virtual Int32? IllustrationID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductModelProductDescriptionCulture")]
   public partial class DbProductModelProductDescriptionCulture
   {
      [Key, Required]
      [References( Type=typeof(DbProductModel), Member="ProductModelID", Column="ProductModelID", Constraint="FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID")]
      public virtual Int32? ProductModelID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbProductDescription), Member="ProductDescriptionID", Column="ProductDescriptionID", Constraint="FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID")]
      public virtual Int32? ProductDescriptionID {get; set;}
      [Key, Required, MaxLength(6)]
      [References( Type=typeof(DbCulture), Member="CultureID", Column="CultureID", Constraint="FK_ProductModelProductDescriptionCulture_Culture_CultureID")]
      public virtual String CultureID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductPhoto")]
   [ReferencedBy(new []{typeof(DbProductProductPhoto)})]
   public partial class DbProductPhoto
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductPhotoID {get; set;}
      public virtual Byte[] ThumbNailPhoto {get; set;}
      [MaxLength(50)]
      public virtual String ThumbnailPhotoFileName {get; set;}
      public virtual Byte[] LargePhoto {get; set;}
      [MaxLength(50)]
      public virtual String LargePhotoFileName {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductProductPhoto")]
   public partial class DbProductProductPhoto
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductProductPhoto_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbProductPhoto), Member="ProductPhotoID", Column="ProductPhotoID", Constraint="FK_ProductProductPhoto_ProductPhoto_ProductPhotoID")]
      public virtual Int32? ProductPhotoID {get; set;}
      [Required]
      public virtual Boolean? Primary {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductReview")]
   public partial class DbProductReview
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductReviewID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductReview_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required, MaxLength(50)]
      public virtual String ReviewerName {get; set;}
      [Required]
      public virtual DateTime? ReviewDate {get; set;}
      [Required, MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? Rating {get; set;}
      [MaxLength(3850)]
      public virtual String Comments {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ProductSubcategory")]
   [ReferencedBy(new []{typeof(DbProduct)})]
   public partial class DbProductSubcategory
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductSubcategoryID {get; set;}
      [Required]
      [References( Type=typeof(DbProductCategory), Member="ProductCategoryID", Column="ProductCategoryID", Constraint="FK_ProductSubcategory_ProductCategory_ProductCategoryID")]
      public virtual Int32? ProductCategoryID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.ScrapReason")]
   [ReferencedBy(new []{typeof(DbWorkOrder)})]
   public partial class DbScrapReason
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int16? ScrapReasonID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.TransactionHistory")]
   public partial class DbTransactionHistory
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? TransactionID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_TransactionHistory_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderLineID {get; set;}
      [Required]
      public virtual DateTime? TransactionDate {get; set;}
      [Required, MaxLength(1)]
      public virtual String TransactionType {get; set;}
      [Required]
      public virtual Int32? Quantity {get; set;}
      [Required]
      public virtual Decimal? ActualCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.TransactionHistoryArchive")]
   public partial class DbTransactionHistoryArchive
   {
      [Key, Unique, Required]
      public virtual Int32? TransactionID {get; set;}
      [Required]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderID {get; set;}
      [Required]
      public virtual Int32? ReferenceOrderLineID {get; set;}
      [Required]
      public virtual DateTime? TransactionDate {get; set;}
      [Required, MaxLength(1)]
      public virtual String TransactionType {get; set;}
      [Required]
      public virtual Int32? Quantity {get; set;}
      [Required]
      public virtual Decimal? ActualCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.UnitMeasure")]
   [ReferencedBy(new []{typeof(DbBillOfMaterials), typeof(DbProduct), typeof(DbProductVendor)})]
   public partial class DbUnitMeasure
   {
      [Key, Unique, Required, MaxLength(3)]
      public virtual String UnitMeasureCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.WorkOrder")]
   [ReferencedBy(new []{typeof(DbWorkOrderRouting)})]
   public partial class DbWorkOrder
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? WorkOrderID {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_WorkOrder_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Int32? OrderQty {get; set;}
      public virtual Int32? StockedQty {get; set;}
      [Required]
      public virtual Int16? ScrappedQty {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual DateTime? DueDate {get; set;}
      [References( Type=typeof(DbScrapReason), Member="ScrapReasonID", Column="ScrapReasonID", Constraint="FK_WorkOrder_ScrapReason_ScrapReasonID")]
      public virtual Int16? ScrapReasonID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.WorkOrderRouting")]
   public partial class DbWorkOrderRouting
   {
      [Key, Required]
      [References( Type=typeof(DbWorkOrder), Member="WorkOrderID", Column="WorkOrderID", Constraint="FK_WorkOrderRouting_WorkOrder_WorkOrderID")]
      public virtual Int32? WorkOrderID {get; set;}
      [Key, Required]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      public virtual Int16? OperationSequence {get; set;}
      [Required]
      [References( Type=typeof(DbLocation), Member="LocationID", Column="LocationID", Constraint="FK_WorkOrderRouting_Location_LocationID")]
      public virtual Int16? LocationID {get; set;}
      [Required]
      public virtual DateTime? ScheduledStartDate {get; set;}
      [Required]
      public virtual DateTime? ScheduledEndDate {get; set;}
      public virtual DateTime? ActualStartDate {get; set;}
      public virtual DateTime? ActualEndDate {get; set;}
      public virtual Decimal? ActualResourceHrs {get; set;}
      [Required]
      public virtual Decimal? PlannedCost {get; set;}
      public virtual Decimal? ActualCost {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Purchasing.ProductVendor")]
   public partial class DbProductVendor
   {
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ProductVendor_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbVendor), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_ProductVendor_Vendor_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required]
      public virtual Int32? AverageLeadTime {get; set;}
      [Required]
      public virtual Decimal? StandardPrice {get; set;}
      public virtual Decimal? LastReceiptCost {get; set;}
      public virtual DateTime? LastReceiptDate {get; set;}
      [Required]
      public virtual Int32? MinOrderQty {get; set;}
      [Required]
      public virtual Int32? MaxOrderQty {get; set;}
      public virtual Int32? OnOrderQty {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbUnitMeasure), Member="UnitMeasureCode", Column="UnitMeasureCode", Constraint="FK_ProductVendor_UnitMeasure_UnitMeasureCode")]
      public virtual String UnitMeasureCode {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Purchasing.PurchaseOrderDetail")]
   public partial class DbPurchaseOrderDetail
   {
      [Key, Required]
      [References( Type=typeof(DbPurchaseOrderHeader), Member="PurchaseOrderID", Column="PurchaseOrderID", Constraint="FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID")]
      public virtual Int32? PurchaseOrderID {get; set;}
      [Key, AutoIncrement, Required]
      public virtual Int32? PurchaseOrderDetailID {get; set;}
      [Required]
      public virtual DateTime? DueDate {get; set;}
      [Required]
      public virtual Int16? OrderQty {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_PurchaseOrderDetail_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Decimal? UnitPrice {get; set;}
      public virtual Decimal? LineTotal {get; set;}
      [Required]
      public virtual Decimal? ReceivedQty {get; set;}
      [Required]
      public virtual Decimal? RejectedQty {get; set;}
      public virtual Decimal? StockedQty {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Purchasing.PurchaseOrderHeader")]
   [ReferencedBy(new []{typeof(DbPurchaseOrderDetail)})]
   public partial class DbPurchaseOrderHeader
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? PurchaseOrderID {get; set;}
      [Required]
      public virtual Byte? RevisionNumber {get; set;}
      [Required]
      public virtual Byte? Status {get; set;}
      [Required]
      [References( Type=typeof(DbEmployee), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_PurchaseOrderHeader_Employee_EmployeeID")]
      public virtual Int32? EmployeeID {get; set;}
      [Required]
      [References( Type=typeof(DbVendor), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_PurchaseOrderHeader_Vendor_VendorID")]
      public virtual Int32? VendorID {get; set;}
      [Required]
      [References( Type=typeof(DbShipMethod), Member="ShipMethodID", Column="ShipMethodID", Constraint="FK_PurchaseOrderHeader_ShipMethod_ShipMethodID")]
      public virtual Int32? ShipMethodID {get; set;}
      [Required]
      public virtual DateTime? OrderDate {get; set;}
      public virtual DateTime? ShipDate {get; set;}
      [Required]
      public virtual Decimal? SubTotal {get; set;}
      [Required]
      public virtual Decimal? TaxAmt {get; set;}
      [Required]
      public virtual Decimal? Freight {get; set;}
      public virtual Decimal? TotalDue {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Purchasing.ShipMethod")]
   [ReferencedBy(new []{typeof(DbPurchaseOrderHeader), typeof(DbSalesOrderHeader)})]
   public partial class DbShipMethod
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ShipMethodID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Decimal? ShipBase {get; set;}
      [Required]
      public virtual Decimal? ShipRate {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Purchasing.Vendor")]
   [ReferencedBy(new []{typeof(DbProductVendor), typeof(DbPurchaseOrderHeader)})]
   public partial class DbVendor
   {
      [Key, Unique, Required]
      [References( Type=typeof(DbBusinessEntity), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Vendor_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(15)]
      public virtual String AccountNumber {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Byte? CreditRating {get; set;}
      [Required]
      public virtual Boolean? PreferredVendorStatus {get; set;}
      [Required]
      public virtual Boolean? ActiveFlag {get; set;}
      [MaxLength(1024)]
      public virtual String PurchasingWebServiceURL {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.CountryRegionCurrency")]
   public partial class DbCountryRegionCurrency
   {
      [Key, Required, MaxLength(3)]
      [References( Type=typeof(DbCountryRegion), Member="CountryRegionCode", Column="CountryRegionCode", Constraint="FK_CountryRegionCurrency_CountryRegion_CountryRegionCode")]
      public virtual String CountryRegionCode {get; set;}
      [Key, Required, MaxLength(3)]
      [References( Type=typeof(DbCurrency), Member="CurrencyCode", Column="CurrencyCode", Constraint="FK_CountryRegionCurrency_Currency_CurrencyCode")]
      public virtual String CurrencyCode {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.CreditCard")]
   [ReferencedBy(new []{typeof(DbPersonCreditCard), typeof(DbSalesOrderHeader)})]
   public partial class DbCreditCard
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? CreditCardID {get; set;}
      [Required, MaxLength(50)]
      public virtual String CardType {get; set;}
      [Required, MaxLength(25)]
      public virtual String CardNumber {get; set;}
      [Required]
      public virtual Byte? ExpMonth {get; set;}
      [Required]
      public virtual Int16? ExpYear {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.Currency")]
   [ReferencedBy(new []{typeof(DbCountryRegionCurrency), typeof(DbCurrencyRate)})]
   public partial class DbCurrency
   {
      [Key, Unique, Required, MaxLength(3)]
      public virtual String CurrencyCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.CurrencyRate")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeader)})]
   public partial class DbCurrencyRate
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? CurrencyRateID {get; set;}
      [Required]
      public virtual DateTime? CurrencyRateDate {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCurrency), Member="CurrencyCode", Column="CurrencyCode", Constraint="FK_CurrencyRate_Currency_FromCurrencyCode")]
      public virtual String FromCurrencyCode {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCurrency), Member="CurrencyCode", Column="CurrencyCode", Constraint="FK_CurrencyRate_Currency_ToCurrencyCode")]
      public virtual String ToCurrencyCode {get; set;}
      [Required]
      public virtual Decimal? AverageRate {get; set;}
      [Required]
      public virtual Decimal? EndOfDayRate {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.Customer")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeader)})]
   public partial class DbCustomer
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? CustomerID {get; set;}
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Customer_Person_PersonID")]
      public virtual Int32? PersonID {get; set;}
      [References( Type=typeof(DbStore), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Customer_Store_StoreID")]
      public virtual Int32? StoreID {get; set;}
      [References( Type=typeof(DbSalesTerritory), Member="TerritoryID", Column="TerritoryID", Constraint="FK_Customer_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [MaxLength(10)]
      public virtual String AccountNumber {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.PersonCreditCard")]
   public partial class DbPersonCreditCard
   {
      [Key, Required]
      [References( Type=typeof(DbPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_PersonCreditCard_Person_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbCreditCard), Member="CreditCardID", Column="CreditCardID", Constraint="FK_PersonCreditCard_CreditCard_CreditCardID")]
      public virtual Int32? CreditCardID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesOrderDetail")]
   public partial class DbSalesOrderDetail
   {
      [Key, Required]
      [References( Type=typeof(DbSalesOrderHeader), Member="SalesOrderID", Column="SalesOrderID", Constraint="FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID")]
      public virtual Int32? SalesOrderID {get; set;}
      [Key, AutoIncrement, Required]
      public virtual Int32? SalesOrderDetailID {get; set;}
      [MaxLength(25)]
      public virtual String CarrierTrackingNumber {get; set;}
      [Required]
      public virtual Int16? OrderQty {get; set;}
      [Required]
      [References( Type=typeof(DbSpecialOfferProduct), Member="ProductID", Column="ProductID", Constraint="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      [References( Type=typeof(DbSpecialOfferProduct), Member="SpecialOfferID", Column="SpecialOfferID", Constraint="FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID")]
      public virtual Int32? SpecialOfferID {get; set;}
      [Required]
      public virtual Decimal? UnitPrice {get; set;}
      [Required]
      public virtual Decimal? UnitPriceDiscount {get; set;}
      public virtual Decimal? LineTotal {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesOrderHeader")]
   [ReferencedBy(new []{typeof(DbSalesOrderDetail), typeof(DbSalesOrderHeaderSalesReason)})]
   public partial class DbSalesOrderHeader
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? SalesOrderID {get; set;}
      [Required]
      public virtual Byte? RevisionNumber {get; set;}
      [Required]
      public virtual DateTime? OrderDate {get; set;}
      [Required]
      public virtual DateTime? DueDate {get; set;}
      public virtual DateTime? ShipDate {get; set;}
      [Required]
      public virtual Byte? Status {get; set;}
      [Required]
      public virtual Boolean? OnlineOrderFlag {get; set;}
      [MaxLength(25)]
      public virtual String SalesOrderNumber {get; set;}
      [MaxLength(25)]
      public virtual String PurchaseOrderNumber {get; set;}
      [MaxLength(15)]
      public virtual String AccountNumber {get; set;}
      [Required]
      [References( Type=typeof(DbCustomer), Member="CustomerID", Column="CustomerID", Constraint="FK_SalesOrderHeader_Customer_CustomerID")]
      public virtual Int32? CustomerID {get; set;}
      [References( Type=typeof(DbSalesPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_SalesOrderHeader_SalesPerson_SalesPersonID")]
      public virtual Int32? SalesPersonID {get; set;}
      [References( Type=typeof(DbSalesTerritory), Member="TerritoryID", Column="TerritoryID", Constraint="FK_SalesOrderHeader_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [Required]
      [References( Type=typeof(DbAddress), Member="AddressID", Column="AddressID", Constraint="FK_SalesOrderHeader_Address_BillToAddressID")]
      public virtual Int32? BillToAddressID {get; set;}
      [Required]
      [References( Type=typeof(DbAddress), Member="AddressID", Column="AddressID", Constraint="FK_SalesOrderHeader_Address_ShipToAddressID")]
      public virtual Int32? ShipToAddressID {get; set;}
      [Required]
      [References( Type=typeof(DbShipMethod), Member="ShipMethodID", Column="ShipMethodID", Constraint="FK_SalesOrderHeader_ShipMethod_ShipMethodID")]
      public virtual Int32? ShipMethodID {get; set;}
      [References( Type=typeof(DbCreditCard), Member="CreditCardID", Column="CreditCardID", Constraint="FK_SalesOrderHeader_CreditCard_CreditCardID")]
      public virtual Int32? CreditCardID {get; set;}
      [MaxLength(15)]
      public virtual String CreditCardApprovalCode {get; set;}
      [References( Type=typeof(DbCurrencyRate), Member="CurrencyRateID", Column="CurrencyRateID", Constraint="FK_SalesOrderHeader_CurrencyRate_CurrencyRateID")]
      public virtual Int32? CurrencyRateID {get; set;}
      [Required]
      public virtual Decimal? SubTotal {get; set;}
      [Required]
      public virtual Decimal? TaxAmt {get; set;}
      [Required]
      public virtual Decimal? Freight {get; set;}
      public virtual Decimal? TotalDue {get; set;}
      [MaxLength(128)]
      public virtual String Comment {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesOrderHeaderSalesReason")]
   public partial class DbSalesOrderHeaderSalesReason
   {
      [Key, Required]
      [References( Type=typeof(DbSalesOrderHeader), Member="SalesOrderID", Column="SalesOrderID", Constraint="FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID")]
      public virtual Int32? SalesOrderID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbSalesReason), Member="SalesReasonID", Column="SalesReasonID", Constraint="FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID")]
      public virtual Int32? SalesReasonID {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesPerson")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeader), typeof(DbSalesPersonQuotaHistory), typeof(DbSalesTerritoryHistory), typeof(DbStore)})]
   public partial class DbSalesPerson
   {
      [Key, Unique, Required]
      [References( Type=typeof(DbEmployee), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_SalesPerson_Employee_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [References( Type=typeof(DbSalesTerritory), Member="TerritoryID", Column="TerritoryID", Constraint="FK_SalesPerson_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      public virtual Decimal? SalesQuota {get; set;}
      [Required]
      public virtual Decimal? Bonus {get; set;}
      [Required]
      public virtual Decimal? CommissionPct {get; set;}
      [Required]
      public virtual Decimal? SalesYTD {get; set;}
      [Required]
      public virtual Decimal? SalesLastYear {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesPersonQuotaHistory")]
   public partial class DbSalesPersonQuotaHistory
   {
      [Key, Required]
      [References( Type=typeof(DbSalesPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      public virtual DateTime? QuotaDate {get; set;}
      [Required]
      public virtual Decimal? SalesQuota {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesReason")]
   [ReferencedBy(new []{typeof(DbSalesOrderHeaderSalesReason)})]
   public partial class DbSalesReason
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? SalesReasonID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ReasonType {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesTaxRate")]
   public partial class DbSalesTaxRate
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? SalesTaxRateID {get; set;}
      [Required]
      [References( Type=typeof(DbStateProvince), Member="StateProvinceID", Column="StateProvinceID", Constraint="FK_SalesTaxRate_StateProvince_StateProvinceID")]
      public virtual Int32? StateProvinceID {get; set;}
      [Required]
      public virtual Byte? TaxType {get; set;}
      [Required]
      public virtual Decimal? TaxRate {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesTerritory")]
   [ReferencedBy(new []{typeof(DbStateProvince), typeof(DbCustomer), typeof(DbSalesOrderHeader), typeof(DbSalesPerson), typeof(DbSalesTerritoryHistory)})]
   public partial class DbSalesTerritory
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? TerritoryID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(3)]
      [References( Type=typeof(DbCountryRegion), Member="CountryRegionCode", Column="CountryRegionCode", Constraint="FK_SalesTerritory_CountryRegion_CountryRegionCode")]
      public virtual String CountryRegionCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String Group {get; set;}
      [Required]
      public virtual Decimal? SalesYTD {get; set;}
      [Required]
      public virtual Decimal? SalesLastYear {get; set;}
      [Required]
      public virtual Decimal? CostYTD {get; set;}
      [Required]
      public virtual Decimal? CostLastYear {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SalesTerritoryHistory")]
   public partial class DbSalesTerritoryHistory
   {
      [Key, Required]
      [References( Type=typeof(DbSalesPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbSalesTerritory), Member="TerritoryID", Column="TerritoryID", Constraint="FK_SalesTerritoryHistory_SalesTerritory_TerritoryID")]
      public virtual Int32? TerritoryID {get; set;}
      [Key, Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.ShoppingCartItem")]
   public partial class DbShoppingCartItem
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ShoppingCartItemID {get; set;}
      [Required, MaxLength(50)]
      public virtual String ShoppingCartID {get; set;}
      [Required]
      public virtual Int32? Quantity {get; set;}
      [Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_ShoppingCartItem_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual DateTime? DateCreated {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SpecialOffer")]
   [ReferencedBy(new []{typeof(DbSpecialOfferProduct)})]
   public partial class DbSpecialOffer
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? SpecialOfferID {get; set;}
      [Required, MaxLength(255)]
      public virtual String Description {get; set;}
      [Required]
      public virtual Decimal? DiscountPct {get; set;}
      [Required, MaxLength(50)]
      public virtual String Type {get; set;}
      [Required, MaxLength(50)]
      public virtual String Category {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      [Required]
      public virtual DateTime? EndDate {get; set;}
      [Required]
      public virtual Int32? MinQty {get; set;}
      public virtual Int32? MaxQty {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.SpecialOfferProduct")]
   [ReferencedBy(new []{typeof(DbSalesOrderDetail)})]
   public partial class DbSpecialOfferProduct
   {
      [Key, Required]
      [References( Type=typeof(DbSpecialOffer), Member="SpecialOfferID", Column="SpecialOfferID", Constraint="FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID")]
      public virtual Int32? SpecialOfferID {get; set;}
      [Key, Required]
      [References( Type=typeof(DbProduct), Member="ProductID", Column="ProductID", Constraint="FK_SpecialOfferProduct_Product_ProductID")]
      public virtual Int32? ProductID {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Sales.Store")]
   [ReferencedBy(new []{typeof(DbCustomer)})]
   public partial class DbStore
   {
      [Key, Unique, Required]
      [References( Type=typeof(DbBusinessEntity), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Store_BusinessEntity_BusinessEntityID")]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [References( Type=typeof(DbSalesPerson), Member="BusinessEntityID", Column="BusinessEntityID", Constraint="FK_Store_SalesPerson_SalesPersonID")]
      public virtual Int32? SalesPersonID {get; set;}
      public virtual String Demographics {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.vEmployee", Crud="R")]
   public partial class DbvEmployee
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
      public virtual String AdditionalContactInfo {get; set;}
   }
   [Table(TableName = "HumanResources.vEmployeeDepartment", Crud="R")]
   public partial class DbvEmployeeDepartment
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [Required, MaxLength(50)]
      public virtual String Department {get; set;}
      [Required, MaxLength(50)]
      public virtual String GroupName {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
   }
   [Table(TableName = "HumanResources.vEmployeeDepartmentHistory", Crud="R")]
   public partial class DbvEmployeeDepartmentHistory
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String Shift {get; set;}
      [Required, MaxLength(50)]
      public virtual String Department {get; set;}
      [Required, MaxLength(50)]
      public virtual String GroupName {get; set;}
      [Required]
      public virtual DateTime? StartDate {get; set;}
      public virtual DateTime? EndDate {get; set;}
   }
   [Table(TableName = "HumanResources.vJobCandidate", Crud="R")]
   public partial class DbvJobCandidate
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(30), Column(ColumnName = "Name\\.Prefix")]
      public virtual String Name_Prefix {get; set;}
      [MaxLength(30), Column(ColumnName = "Name\\.First")]
      public virtual String Name_First {get; set;}
      [MaxLength(30), Column(ColumnName = "Name\\.Middle")]
      public virtual String Name_Middle {get; set;}
      [MaxLength(30), Column(ColumnName = "Name\\.Last")]
      public virtual String Name_Last {get; set;}
      [MaxLength(30), Column(ColumnName = "Name\\.Suffix")]
      public virtual String Name_Suffix {get; set;}
      public virtual String Skills {get; set;}
      [MaxLength(30), Column(ColumnName = "Addr\\.Type")]
      public virtual String Addr_Type {get; set;}
      [MaxLength(100), Column(ColumnName = "Addr\\.Loc\\.CountryRegion")]
      public virtual String Addr_Loc_CountryRegion {get; set;}
      [MaxLength(100), Column(ColumnName = "Addr\\.Loc\\.State")]
      public virtual String Addr_Loc_State {get; set;}
      [MaxLength(100), Column(ColumnName = "Addr\\.Loc\\.City")]
      public virtual String Addr_Loc_City {get; set;}
      [MaxLength(20), Column(ColumnName = "Addr\\.PostalCode")]
      public virtual String Addr_PostalCode {get; set;}
      public virtual String EMail {get; set;}
      public virtual String WebSite {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "HumanResources.vJobCandidateEducation", Crud="R")]
   public partial class DbvJobCandidateEducation
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      [Column(ColumnName = "Edu\\.Level")]
      public virtual String Edu_Level {get; set;}
      [Column(ColumnName = "Edu\\.StartDate")]
      public virtual DateTime? Edu_StartDate {get; set;}
      [Column(ColumnName = "Edu\\.EndDate")]
      public virtual DateTime? Edu_EndDate {get; set;}
      [MaxLength(50), Column(ColumnName = "Edu\\.Degree")]
      public virtual String Edu_Degree {get; set;}
      [MaxLength(50), Column(ColumnName = "Edu\\.Major")]
      public virtual String Edu_Major {get; set;}
      [MaxLength(50), Column(ColumnName = "Edu\\.Minor")]
      public virtual String Edu_Minor {get; set;}
      [MaxLength(5), Column(ColumnName = "Edu\\.GPA")]
      public virtual String Edu_GPA {get; set;}
      [MaxLength(5), Column(ColumnName = "Edu\\.GPAScale")]
      public virtual String Edu_GPAScale {get; set;}
      [MaxLength(100), Column(ColumnName = "Edu\\.School")]
      public virtual String Edu_School {get; set;}
      [MaxLength(100), Column(ColumnName = "Edu\\.Loc\\.CountryRegion")]
      public virtual String Edu_Loc_CountryRegion {get; set;}
      [MaxLength(100), Column(ColumnName = "Edu\\.Loc\\.State")]
      public virtual String Edu_Loc_State {get; set;}
      [MaxLength(100), Column(ColumnName = "Edu\\.Loc\\.City")]
      public virtual String Edu_Loc_City {get; set;}
   }
   [Table(TableName = "HumanResources.vJobCandidateEmployment", Crud="R")]
   public partial class DbvJobCandidateEmployment
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? JobCandidateID {get; set;}
      [Column(ColumnName = "Emp\\.StartDate")]
      public virtual DateTime? Emp_StartDate {get; set;}
      [Column(ColumnName = "Emp\\.EndDate")]
      public virtual DateTime? Emp_EndDate {get; set;}
      [MaxLength(100), Column(ColumnName = "Emp\\.OrgName")]
      public virtual String Emp_OrgName {get; set;}
      [MaxLength(100), Column(ColumnName = "Emp\\.JobTitle")]
      public virtual String Emp_JobTitle {get; set;}
      [Column(ColumnName = "Emp\\.Responsibility")]
      public virtual String Emp_Responsibility {get; set;}
      [Column(ColumnName = "Emp\\.FunctionCategory")]
      public virtual String Emp_FunctionCategory {get; set;}
      [Column(ColumnName = "Emp\\.IndustryCategory")]
      public virtual String Emp_IndustryCategory {get; set;}
      [Column(ColumnName = "Emp\\.Loc\\.CountryRegion")]
      public virtual String Emp_Loc_CountryRegion {get; set;}
      [Column(ColumnName = "Emp\\.Loc\\.State")]
      public virtual String Emp_Loc_State {get; set;}
      [Column(ColumnName = "Emp\\.Loc\\.City")]
      public virtual String Emp_Loc_City {get; set;}
   }
   [Table(TableName = "Person.vAdditionalContactInfo", Crud="R")]
   public partial class DbvAdditionalContactInfo
   {
      [Key, Unique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(50)]
      public virtual String TelephoneNumber {get; set;}
      public virtual String TelephoneSpecialInstructions {get; set;}
      [MaxLength(50)]
      public virtual String Street {get; set;}
      [MaxLength(50)]
      public virtual String City {get; set;}
      [MaxLength(50)]
      public virtual String StateProvince {get; set;}
      [MaxLength(50)]
      public virtual String PostalCode {get; set;}
      [MaxLength(50)]
      public virtual String CountryRegion {get; set;}
      public virtual String HomeAddressSpecialInstructions {get; set;}
      [MaxLength(128)]
      public virtual String EMailAddress {get; set;}
      public virtual String EMailSpecialInstructions {get; set;}
      [MaxLength(50)]
      public virtual String EMailTelephoneNumber {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Person.vStateProvinceCountryRegion", Crud="R")]
   public partial class DbvStateProvinceCountryRegion
   {
      [Key, Required]
      public virtual Int32? StateProvinceID {get; set;}
      [Required, MaxLength(3)]
      public virtual String StateProvinceCode {get; set;}
      [Required]
      public virtual Boolean? IsOnlyStateProvinceFlag {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required]
      public virtual Int32? TerritoryID {get; set;}
      [Key, Required, MaxLength(3)]
      public virtual String CountryRegionCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
   }
   [Table(TableName = "Production.vProductAndDescription", Crud="R")]
   public partial class DbvProductAndDescription
   {
      [Required]
      public virtual Int32? ProductID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ProductModel {get; set;}
      [Required, MaxLength(6)]
      public virtual String CultureID {get; set;}
      [Required, MaxLength(400)]
      public virtual String Description {get; set;}
   }
   [Table(TableName = "Production.vProductModelCatalogDescription", Crud="R")]
   public partial class DbvProductModelCatalogDescription
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductModelID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual String Summary {get; set;}
      public virtual String Manufacturer {get; set;}
      [MaxLength(30)]
      public virtual String Copyright {get; set;}
      [MaxLength(256)]
      public virtual String ProductURL {get; set;}
      [MaxLength(256)]
      public virtual String WarrantyPeriod {get; set;}
      [MaxLength(256)]
      public virtual String WarrantyDescription {get; set;}
      [MaxLength(256)]
      public virtual String NoOfYears {get; set;}
      [MaxLength(256)]
      public virtual String MaintenanceDescription {get; set;}
      [MaxLength(256)]
      public virtual String Wheel {get; set;}
      [MaxLength(256)]
      public virtual String Saddle {get; set;}
      [MaxLength(256)]
      public virtual String Pedal {get; set;}
      public virtual String BikeFrame {get; set;}
      [MaxLength(256)]
      public virtual String Crankset {get; set;}
      [MaxLength(256)]
      public virtual String PictureAngle {get; set;}
      [MaxLength(256)]
      public virtual String PictureSize {get; set;}
      [MaxLength(256)]
      public virtual String ProductPhotoID {get; set;}
      [MaxLength(256)]
      public virtual String Material {get; set;}
      [MaxLength(256)]
      public virtual String Color {get; set;}
      [MaxLength(256)]
      public virtual String ProductLine {get; set;}
      [MaxLength(256)]
      public virtual String Style {get; set;}
      [MaxLength(1024)]
      public virtual String RiderExperience {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Production.vProductModelInstructions", Crud="R")]
   public partial class DbvProductModelInstructions
   {
      [Key, AutoIncrement, Unique, Required]
      public virtual Int32? ProductModelID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual String Instructions {get; set;}
      public virtual Int32? LocationID {get; set;}
      public virtual Decimal? SetupHours {get; set;}
      public virtual Decimal? MachineHours {get; set;}
      public virtual Decimal? LaborHours {get; set;}
      public virtual Int32? LotSize {get; set;}
      [MaxLength(1024)]
      public virtual String Step {get; set;}
      [Required]
      public virtual Guid? rowguid {get; set;}
      [Required]
      public virtual DateTime? ModifiedDate {get; set;}
   }
   [Table(TableName = "Purchasing.vVendorWithAddresses", Crud="R")]
   public partial class DbvVendorWithAddresses
   {
      [Key, Unique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String AddressType {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
   }
   [Table(TableName = "Purchasing.vVendorWithContacts", Crud="R")]
   public partial class DbvVendorWithContacts
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ContactType {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
   }
   [Table(TableName = "Sales.vIndividualCustomer", Crud="R")]
   public partial class DbvIndividualCustomer
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      [Required, MaxLength(50)]
      public virtual String AddressType {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
      public virtual String Demographics {get; set;}
   }
   [Table(TableName = "Sales.vPersonDemographics", Crud="R")]
   public partial class DbvPersonDemographics
   {
      [Key, Unique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      public virtual Decimal? TotalPurchaseYTD {get; set;}
      public virtual DateTime? DateFirstPurchase {get; set;}
      public virtual DateTime? BirthDate {get; set;}
      [MaxLength(1)]
      public virtual String MaritalStatus {get; set;}
      [MaxLength(30)]
      public virtual String YearlyIncome {get; set;}
      [MaxLength(1)]
      public virtual String Gender {get; set;}
      public virtual Int32? TotalChildren {get; set;}
      public virtual Int32? NumberChildrenAtHome {get; set;}
      [MaxLength(30)]
      public virtual String Education {get; set;}
      [MaxLength(30)]
      public virtual String Occupation {get; set;}
      public virtual Boolean? HomeOwnerFlag {get; set;}
      public virtual Int32? NumberCarsOwned {get; set;}
   }
   [Table(TableName = "Sales.vSalesPerson", Crud="R")]
   public partial class DbvSalesPerson
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
      [MaxLength(50)]
      public virtual String TerritoryName {get; set;}
      [MaxLength(50)]
      public virtual String TerritoryGroup {get; set;}
      public virtual Decimal? SalesQuota {get; set;}
      [Required]
      public virtual Decimal? SalesYTD {get; set;}
      [Required]
      public virtual Decimal? SalesLastYear {get; set;}
   }
   [Table(TableName = "Sales.vSalesPersonSalesByFiscalYears", Crud="R")]
   public partial class DbvSalesPersonSalesByFiscalYears
   {
      public virtual Int32? SalesPersonID {get; set;}
      [MaxLength(152)]
      public virtual String FullName {get; set;}
      [Required, MaxLength(50)]
      public virtual String JobTitle {get; set;}
      [Required, MaxLength(50)]
      public virtual String SalesTerritory {get; set;}
      [Column(ColumnName = "2002")]
      public virtual Decimal? _2002 {get; set;}
      [Column(ColumnName = "2003")]
      public virtual Decimal? _2003 {get; set;}
      [Column(ColumnName = "2004")]
      public virtual Decimal? _2004 {get; set;}
   }
   [Table(TableName = "Sales.vStoreWithAddresses", Crud="R")]
   public partial class DbvStoreWithAddresses
   {
      [Key, Unique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String AddressType {get; set;}
      [Required, MaxLength(60)]
      public virtual String AddressLine1 {get; set;}
      [MaxLength(60)]
      public virtual String AddressLine2 {get; set;}
      [Required, MaxLength(30)]
      public virtual String City {get; set;}
      [Required, MaxLength(50)]
      public virtual String StateProvinceName {get; set;}
      [Required, MaxLength(15)]
      public virtual String PostalCode {get; set;}
      [Required, MaxLength(50)]
      public virtual String CountryRegionName {get; set;}
   }
   [Table(TableName = "Sales.vStoreWithContacts", Crud="R")]
   public partial class DbvStoreWithContacts
   {
      [Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      [Required, MaxLength(50)]
      public virtual String ContactType {get; set;}
      [MaxLength(8)]
      public virtual String Title {get; set;}
      [Required, MaxLength(50)]
      public virtual String FirstName {get; set;}
      [MaxLength(50)]
      public virtual String MiddleName {get; set;}
      [Required, MaxLength(50)]
      public virtual String LastName {get; set;}
      [MaxLength(10)]
      public virtual String Suffix {get; set;}
      [MaxLength(25)]
      public virtual String PhoneNumber {get; set;}
      [MaxLength(50)]
      public virtual String PhoneNumberType {get; set;}
      [MaxLength(50)]
      public virtual String EmailAddress {get; set;}
      [Required]
      public virtual Int32? EmailPromotion {get; set;}
   }
   [Table(TableName = "Sales.vStoreWithDemographics", Crud="R")]
   public partial class DbvStoreWithDemographics
   {
      [Key, Unique, Required]
      public virtual Int32? BusinessEntityID {get; set;}
      [Required, MaxLength(50)]
      public virtual String Name {get; set;}
      public virtual Decimal? AnnualSales {get; set;}
      public virtual Decimal? AnnualRevenue {get; set;}
      [MaxLength(50)]
      public virtual String BankName {get; set;}
      [MaxLength(5)]
      public virtual String BusinessType {get; set;}
      public virtual Int32? YearOpened {get; set;}
      [MaxLength(50)]
      public virtual String Specialty {get; set;}
      public virtual Int32? SquareFeet {get; set;}
      [MaxLength(30)]
      public virtual String Brands {get; set;}
      [MaxLength(30)]
      public virtual String Internet {get; set;}
      public virtual Int32? NumberEmployees {get; set;}
   }
   
   public static partial class JoinExtension
   {
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [HumanResources].[Employee].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbEmployee self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [HumanResources].[Employee].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbEmployee self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Department] ON [HumanResources].[EmployeeDepartmentHistory].[DepartmentID] = [HumanResources].[Department].[DepartmentID]")]
      public static DbDepartment Department(this DbEmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Department] ON [HumanResources].[EmployeeDepartmentHistory].[DepartmentID] = [HumanResources].[Department].[DepartmentID]")]
      public static DbDepartment Department(this DbEmployeeDepartmentHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeeDepartmentHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbEmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeeDepartmentHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbEmployeeDepartmentHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Shift] ON [HumanResources].[EmployeeDepartmentHistory].[ShiftID] = [HumanResources].[Shift].[ShiftID]")]
      public static DbShift Shift(this DbEmployeeDepartmentHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Shift] ON [HumanResources].[EmployeeDepartmentHistory].[ShiftID] = [HumanResources].[Shift].[ShiftID]")]
      public static DbShift Shift(this DbEmployeeDepartmentHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeePayHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbEmployeePayHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[EmployeePayHistory].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbEmployeePayHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[JobCandidate].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbJobCandidate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [HumanResources].[JobCandidate].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbJobCandidate self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Person].[Address].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]")]
      public static DbStateProvince StateProvince(this DbAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Person].[Address].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]")]
      public static DbStateProvince StateProvince(this DbAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Person].[BusinessEntityAddress].[AddressID] = [Person].[Address].[AddressID]")]
      public static DbAddress Address(this DbBusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Person].[BusinessEntityAddress].[AddressID] = [Person].[Address].[AddressID]")]
      public static DbAddress Address(this DbBusinessEntityAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[AddressType] ON [Person].[BusinessEntityAddress].[AddressTypeID] = [Person].[AddressType].[AddressTypeID]")]
      public static DbAddressType AddressType(this DbBusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[AddressType] ON [Person].[BusinessEntityAddress].[AddressTypeID] = [Person].[AddressType].[AddressTypeID]")]
      public static DbAddressType AddressType(this DbBusinessEntityAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityAddress].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityAddress].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityContact].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityContact self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[BusinessEntityContact].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbBusinessEntityContact self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[ContactType] ON [Person].[BusinessEntityContact].[ContactTypeID] = [Person].[ContactType].[ContactTypeID]")]
      public static DbContactType ContactType(this DbBusinessEntityContact self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[ContactType] ON [Person].[BusinessEntityContact].[ContactTypeID] = [Person].[ContactType].[ContactTypeID]")]
      public static DbContactType ContactType(this DbBusinessEntityContact self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[BusinessEntityContact].[PersonID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson Person(this DbBusinessEntityContact self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[BusinessEntityContact].[PersonID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson Person(this DbBusinessEntityContact self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[EmailAddress].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbEmailAddress self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[EmailAddress].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbEmailAddress self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[Password].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbPassword self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[Password].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbPassword self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[Person].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Person].[Person].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[PersonPhone].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbPersonPhone self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Person].[PersonPhone].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbPersonPhone self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PhoneNumberType] ON [Person].[PersonPhone].[PhoneNumberTypeID] = [Person].[PhoneNumberType].[PhoneNumberTypeID]")]
      public static DbPhoneNumberType PhoneNumberType(this DbPersonPhone self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[PhoneNumberType] ON [Person].[PersonPhone].[PhoneNumberTypeID] = [Person].[PhoneNumberType].[PhoneNumberTypeID]")]
      public static DbPhoneNumberType PhoneNumberType(this DbPersonPhone self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Person].[StateProvince].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]")]
      public static DbCountryRegion CountryRegion(this DbStateProvince self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Person].[StateProvince].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]")]
      public static DbCountryRegion CountryRegion(this DbStateProvince self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Person].[StateProvince].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbStateProvince self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Person].[StateProvince].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbStateProvince self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ComponentID] = [Production].[Product].[ProductID]")]
      public static DbProduct Component(this DbBillOfMaterials self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ComponentID] = [Production].[Product].[ProductID]")]
      public static DbProduct Component(this DbBillOfMaterials self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ProductAssemblyID] = [Production].[Product].[ProductID]")]
      public static DbProduct ProductAssembly(this DbBillOfMaterials self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[BillOfMaterials].[ProductAssemblyID] = [Production].[Product].[ProductID]")]
      public static DbProduct ProductAssembly(this DbBillOfMaterials self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[BillOfMaterials].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure UnitMeasure(this DbBillOfMaterials self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[BillOfMaterials].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure UnitMeasure(this DbBillOfMaterials self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Production].[Document].[Owner] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee Employee(this DbDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Production].[Document].[Owner] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee Employee(this DbDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[Product].[ProductModelID] = [Production].[ProductModel].[ProductModelID]")]
      public static DbProductModel ProductModel(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[Product].[ProductModelID] = [Production].[ProductModel].[ProductModelID]")]
      public static DbProductModel ProductModel(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductSubcategory] ON [Production].[Product].[ProductSubcategoryID] = [Production].[ProductSubcategory].[ProductSubcategoryID]")]
      public static DbProductSubcategory ProductSubcategory(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductSubcategory] ON [Production].[Product].[ProductSubcategoryID] = [Production].[ProductSubcategory].[ProductSubcategoryID]")]
      public static DbProductSubcategory ProductSubcategory(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[SizeUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure SizeUnitMeasure(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[SizeUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure SizeUnitMeasure(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[WeightUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure WeightUnitMeasure(this DbProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Production].[Product].[WeightUnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure WeightUnitMeasure(this DbProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductCostHistory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductCostHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductCostHistory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductCostHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Document] ON [Production].[ProductDocument].[DocumentNode] = [Production].[Document].[DocumentNode]")]
      public static DbDocument Document(this DbProductDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Document] ON [Production].[ProductDocument].[DocumentNode] = [Production].[Document].[DocumentNode]")]
      public static DbDocument Document(this DbProductDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductDocument].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductDocument self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductDocument].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductDocument self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[ProductInventory].[LocationID] = [Production].[Location].[LocationID]")]
      public static DbLocation Location(this DbProductInventory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[ProductInventory].[LocationID] = [Production].[Location].[LocationID]")]
      public static DbLocation Location(this DbProductInventory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductInventory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductInventory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductInventory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductInventory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductListPriceHistory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductListPriceHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductListPriceHistory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductListPriceHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Illustration] ON [Production].[ProductModelIllustration].[IllustrationID] = [Production].[Illustration].[IllustrationID]")]
      public static DbIllustration Illustration(this DbProductModelIllustration self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Illustration] ON [Production].[ProductModelIllustration].[IllustrationID] = [Production].[Illustration].[IllustrationID]")]
      public static DbIllustration Illustration(this DbProductModelIllustration self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelIllustration].[ProductModelID] = [Production].[ProductModel].[ProductModelID]")]
      public static DbProductModel ProductModel(this DbProductModelIllustration self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelIllustration].[ProductModelID] = [Production].[ProductModel].[ProductModelID]")]
      public static DbProductModel ProductModel(this DbProductModelIllustration self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Culture] ON [Production].[ProductModelProductDescriptionCulture].[CultureID] = [Production].[Culture].[CultureID]")]
      public static DbCulture Culture(this DbProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Culture] ON [Production].[ProductModelProductDescriptionCulture].[CultureID] = [Production].[Culture].[CultureID]")]
      public static DbCulture Culture(this DbProductModelProductDescriptionCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDescription] ON [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID] = [Production].[ProductDescription].[ProductDescriptionID]")]
      public static DbProductDescription ProductDescription(this DbProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductDescription] ON [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID] = [Production].[ProductDescription].[ProductDescriptionID]")]
      public static DbProductDescription ProductDescription(this DbProductModelProductDescriptionCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelProductDescriptionCulture].[ProductModelID] = [Production].[ProductModel].[ProductModelID]")]
      public static DbProductModel ProductModel(this DbProductModelProductDescriptionCulture self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductModel] ON [Production].[ProductModelProductDescriptionCulture].[ProductModelID] = [Production].[ProductModel].[ProductModelID]")]
      public static DbProductModel ProductModel(this DbProductModelProductDescriptionCulture self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductProductPhoto].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductProductPhoto self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductProductPhoto].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductProductPhoto self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductPhoto] ON [Production].[ProductProductPhoto].[ProductPhotoID] = [Production].[ProductPhoto].[ProductPhotoID]")]
      public static DbProductPhoto ProductPhoto(this DbProductProductPhoto self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductPhoto] ON [Production].[ProductProductPhoto].[ProductPhotoID] = [Production].[ProductPhoto].[ProductPhotoID]")]
      public static DbProductPhoto ProductPhoto(this DbProductProductPhoto self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductReview].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductReview self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[ProductReview].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductReview self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductCategory] ON [Production].[ProductSubcategory].[ProductCategoryID] = [Production].[ProductCategory].[ProductCategoryID]")]
      public static DbProductCategory ProductCategory(this DbProductSubcategory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ProductCategory] ON [Production].[ProductSubcategory].[ProductCategoryID] = [Production].[ProductCategory].[ProductCategoryID]")]
      public static DbProductCategory ProductCategory(this DbProductSubcategory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[TransactionHistory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbTransactionHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[TransactionHistory].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbTransactionHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[WorkOrder].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbWorkOrder self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Production].[WorkOrder].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbWorkOrder self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ScrapReason] ON [Production].[WorkOrder].[ScrapReasonID] = [Production].[ScrapReason].[ScrapReasonID]")]
      public static DbScrapReason ScrapReason(this DbWorkOrder self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[ScrapReason] ON [Production].[WorkOrder].[ScrapReasonID] = [Production].[ScrapReason].[ScrapReasonID]")]
      public static DbScrapReason ScrapReason(this DbWorkOrder self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[WorkOrderRouting].[LocationID] = [Production].[Location].[LocationID]")]
      public static DbLocation Location(this DbWorkOrderRouting self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Location] ON [Production].[WorkOrderRouting].[LocationID] = [Production].[Location].[LocationID]")]
      public static DbLocation Location(this DbWorkOrderRouting self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[WorkOrderRouting].[WorkOrderID] = [Production].[WorkOrder].[WorkOrderID]")]
      public static DbWorkOrder WorkOrder(this DbWorkOrderRouting self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[WorkOrder] ON [Production].[WorkOrderRouting].[WorkOrderID] = [Production].[WorkOrder].[WorkOrderID]")]
      public static DbWorkOrder WorkOrder(this DbWorkOrderRouting self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[ProductVendor].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[ProductVendor].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbProductVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Purchasing].[ProductVendor].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure UnitMeasure(this DbProductVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[UnitMeasure] ON [Purchasing].[ProductVendor].[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode]")]
      public static DbUnitMeasure UnitMeasure(this DbProductVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[ProductVendor].[BusinessEntityID] = [Purchasing].[Vendor].[BusinessEntityID]")]
      public static DbVendor BusinessEntity(this DbProductVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[ProductVendor].[BusinessEntityID] = [Purchasing].[Vendor].[BusinessEntityID]")]
      public static DbVendor BusinessEntity(this DbProductVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[PurchaseOrderDetail].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbPurchaseOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Purchasing].[PurchaseOrderDetail].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbPurchaseOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID]")]
      public static DbPurchaseOrderHeader PurchaseOrder(this DbPurchaseOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[PurchaseOrderHeader] ON [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID]")]
      public static DbPurchaseOrderHeader PurchaseOrder(this DbPurchaseOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Purchasing].[PurchaseOrderHeader].[EmployeeID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee Employee(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Purchasing].[PurchaseOrderHeader].[EmployeeID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee Employee(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Purchasing].[PurchaseOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]")]
      public static DbShipMethod ShipMethod(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Purchasing].[PurchaseOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]")]
      public static DbShipMethod ShipMethod(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[PurchaseOrderHeader].[VendorID] = [Purchasing].[Vendor].[BusinessEntityID]")]
      public static DbVendor Vendor(this DbPurchaseOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[Vendor] ON [Purchasing].[PurchaseOrderHeader].[VendorID] = [Purchasing].[Vendor].[BusinessEntityID]")]
      public static DbVendor Vendor(this DbPurchaseOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Purchasing].[Vendor].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbVendor self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Purchasing].[Vendor].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbVendor self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[CountryRegionCurrency].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]")]
      public static DbCountryRegion CountryRegion(this DbCountryRegionCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[CountryRegionCurrency].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]")]
      public static DbCountryRegion CountryRegion(this DbCountryRegionCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CountryRegionCurrency].[CurrencyCode] = [Sales].[Currency].[CurrencyCode]")]
      public static DbCurrency Currency(this DbCountryRegionCurrency self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CountryRegionCurrency].[CurrencyCode] = [Sales].[Currency].[CurrencyCode]")]
      public static DbCurrency Currency(this DbCountryRegionCurrency self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[FromCurrencyCode] = [Sales].[Currency].[CurrencyCode]")]
      public static DbCurrency FromCurrency(this DbCurrencyRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[FromCurrencyCode] = [Sales].[Currency].[CurrencyCode]")]
      public static DbCurrency FromCurrency(this DbCurrencyRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[ToCurrencyCode] = [Sales].[Currency].[CurrencyCode]")]
      public static DbCurrency ToCurrency(this DbCurrencyRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Currency] ON [Sales].[CurrencyRate].[ToCurrencyCode] = [Sales].[Currency].[CurrencyCode]")]
      public static DbCurrency ToCurrency(this DbCurrencyRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson Person(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson Person(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[Customer].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[Customer].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Sales].[Customer].[StoreID] = [Sales].[Store].[BusinessEntityID]")]
      public static DbStore Store(this DbCustomer self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Store] ON [Sales].[Customer].[StoreID] = [Sales].[Store].[BusinessEntityID]")]
      public static DbStore Store(this DbCustomer self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[PersonCreditCard].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]")]
      public static DbCreditCard CreditCard(this DbPersonCreditCard self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[PersonCreditCard].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]")]
      public static DbCreditCard CreditCard(this DbPersonCreditCard self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[PersonCreditCard].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbPersonCreditCard self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Person] ON [Sales].[PersonCreditCard].[BusinessEntityID] = [Person].[Person].[BusinessEntityID]")]
      public static DbPerson BusinessEntity(this DbPersonCreditCard self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderDetail].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]")]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderDetail].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]")]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Sales].[SalesOrderDetail].[ProductID] = [Sales].[SpecialOfferProduct].[ProductID] AND [Sales].[SalesOrderDetail].[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]")]
      public static DbSpecialOfferProduct ProductSpecialOffer(this DbSalesOrderDetail self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOfferProduct] ON [Sales].[SalesOrderDetail].[ProductID] = [Sales].[SpecialOfferProduct].[ProductID] AND [Sales].[SalesOrderDetail].[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]")]
      public static DbSpecialOfferProduct ProductSpecialOffer(this DbSalesOrderDetail self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[BillToAddressID] = [Person].[Address].[AddressID]")]
      public static DbAddress BillToAddress(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[BillToAddressID] = [Person].[Address].[AddressID]")]
      public static DbAddress BillToAddress(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[ShipToAddressID] = [Person].[Address].[AddressID]")]
      public static DbAddress ShipToAddress(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[Address] ON [Sales].[SalesOrderHeader].[ShipToAddressID] = [Person].[Address].[AddressID]")]
      public static DbAddress ShipToAddress(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[SalesOrderHeader].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]")]
      public static DbCreditCard CreditCard(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CreditCard] ON [Sales].[SalesOrderHeader].[CreditCardID] = [Sales].[CreditCard].[CreditCardID]")]
      public static DbCreditCard CreditCard(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[SalesOrderHeader].[CurrencyRateID] = [Sales].[CurrencyRate].[CurrencyRateID]")]
      public static DbCurrencyRate CurrencyRate(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[CurrencyRate] ON [Sales].[SalesOrderHeader].[CurrencyRateID] = [Sales].[CurrencyRate].[CurrencyRateID]")]
      public static DbCurrencyRate CurrencyRate(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Customer].[CustomerID]")]
      public static DbCustomer Customer(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[Customer] ON [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Customer].[CustomerID]")]
      public static DbCustomer Customer(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesOrderHeader].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson SalesPerson(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesOrderHeader].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson SalesPerson(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesOrderHeader].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesOrderHeader].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Sales].[SalesOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]")]
      public static DbShipMethod ShipMethod(this DbSalesOrderHeader self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Purchasing].[ShipMethod] ON [Sales].[SalesOrderHeader].[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID]")]
      public static DbShipMethod ShipMethod(this DbSalesOrderHeader self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]")]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderHeaderSalesReason self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesOrderHeader] ON [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID]")]
      public static DbSalesOrderHeader SalesOrder(this DbSalesOrderHeaderSalesReason self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesReason] ON [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID] = [Sales].[SalesReason].[SalesReasonID]")]
      public static DbSalesReason SalesReason(this DbSalesOrderHeaderSalesReason self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesReason] ON [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID] = [Sales].[SalesReason].[SalesReasonID]")]
      public static DbSalesReason SalesReason(this DbSalesOrderHeaderSalesReason self){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Sales].[SalesPerson].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [HumanResources].[Employee] ON [Sales].[SalesPerson].[BusinessEntityID] = [HumanResources].[Employee].[BusinessEntityID]")]
      public static DbEmployee BusinessEntity(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesPerson].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbSalesPerson self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesPerson].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbSalesPerson self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesPersonQuotaHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson BusinessEntity(this DbSalesPersonQuotaHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesPersonQuotaHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson BusinessEntity(this DbSalesPersonQuotaHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Sales].[SalesTaxRate].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]")]
      public static DbStateProvince StateProvince(this DbSalesTaxRate self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[StateProvince] ON [Sales].[SalesTaxRate].[StateProvinceID] = [Person].[StateProvince].[StateProvinceID]")]
      public static DbStateProvince StateProvince(this DbSalesTaxRate self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[SalesTerritory].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]")]
      public static DbCountryRegion CountryRegion(this DbSalesTerritory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[CountryRegion] ON [Sales].[SalesTerritory].[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode]")]
      public static DbCountryRegion CountryRegion(this DbSalesTerritory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesTerritoryHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson BusinessEntity(this DbSalesTerritoryHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[SalesTerritoryHistory].[BusinessEntityID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson BusinessEntity(this DbSalesTerritoryHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesTerritoryHistory].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbSalesTerritoryHistory self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesTerritory] ON [Sales].[SalesTerritoryHistory].[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID]")]
      public static DbSalesTerritory Territory(this DbSalesTerritoryHistory self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[ShoppingCartItem].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbShoppingCartItem self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[ShoppingCartItem].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbShoppingCartItem self){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[SpecialOfferProduct].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbSpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Production].[Product] ON [Sales].[SpecialOfferProduct].[ProductID] = [Production].[Product].[ProductID]")]
      public static DbProduct Product(this DbSpecialOfferProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOffer] ON [Sales].[SpecialOfferProduct].[SpecialOfferID] = [Sales].[SpecialOffer].[SpecialOfferID]")]
      public static DbSpecialOffer SpecialOffer(this DbSpecialOfferProduct self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SpecialOffer] ON [Sales].[SpecialOfferProduct].[SpecialOfferID] = [Sales].[SpecialOffer].[SpecialOfferID]")]
      public static DbSpecialOffer SpecialOffer(this DbSpecialOfferProduct self){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Sales].[Store].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbStore self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Person].[BusinessEntity] ON [Sales].[Store].[BusinessEntityID] = [Person].[BusinessEntity].[BusinessEntityID]")]
      public static DbBusinessEntity BusinessEntity(this DbStore self){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[Store].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson SalesPerson(this DbStore self, JoinType join){return null;}
      [JoinMethod( Expression = @"JOIN [Sales].[SalesPerson] ON [Sales].[Store].[SalesPersonID] = [Sales].[SalesPerson].[BusinessEntityID]")]
      public static DbSalesPerson SalesPerson(this DbStore self){return null;}
   }
}


